{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/twitter/twitter-messages/SingleMessage.js\";\nimport React from 'react';\nimport '../../../css/twitter-messages/SingleMessage.css';\nimport $ from 'jquery';\nimport ConvertDMTime from '../../../util/ConvertDMTime';\n\nclass SingleMessage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isRecipient: false,\n      isPhotoMessage: false,\n      mediaUrl: ''\n    };\n    this.convertTime = new ConvertDMTime();\n  }\n\n  componentDidMount() {\n    this.props.mediaEntities.map((media, index) => {\n      if (media.type === \"photo\") {\n        this.setState({\n          isPhotoMessage: true,\n          mediaUrl: media.mediaUrl\n        });\n      }\n    });\n\n    if (this.props.senderId === this.props.twitterOwnerId) {\n      $(\".twitter-single-message-wrapper:eq(\".concat(this.props.index, \")\")).css({\n        \"justify-content\": \"flex-end\"\n      });\n      $(\".twitter-single-message-container:eq(\".concat(this.props.index, \")\")).css({\n        \"text-align\": \"right\"\n      });\n      $(\".twitter-single-message-text:eq(\".concat(this.props.index, \")\")).css({\n        \"background-color\": \"#00A4EF\",\n        \"border-radius\": \"25px 25px 0 25px\"\n      });\n    } else {\n      this.setState({\n        isRecipient: true\n      }, () => {\n        $(\".twitter-single-message-wrapper:eq(\".concat(this.props.index, \")\")).css({\n          \"justify-content\": \"flex-start\"\n        });\n        $(\".twitter-single-message-container:eq(\".concat(this.props.index, \")\")).css({\n          \"text-align\": \"left\"\n        });\n        $(\".twitter-single-message-text:eq(\".concat(this.props.index, \")\")).css({\n          \"background-color\": \"#E5ECF0\",\n          \"border-radius\": \"25px 25px 25px 0\"\n        });\n      });\n    }\n\n    let wrapper = $(\".twitter-single-message-wrapper:eq(\".concat(this.props.index, \")\"));\n    console.log(wrapper);\n  }\n\n  render() {\n    if (this.state.isPhotoMessage) {\n      return React.createElement(\"img\", {\n        src: this.state.mediaUrl,\n        className: \"twitter-dm-photo-message\",\n        alt: \"Photo message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n    }\n\n    let isRecipient = this.state.isRecipient;\n    let createdAt = this.convertTime.formatDate(this.props.createdAt, true);\n    return React.createElement(\"div\", {\n      className: \"twitter-single-message-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, isRecipient && React.createElement(\"img\", {\n      src: this.props.pictureUrl,\n      alt: \"Avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"twitter-single-message-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-single-message-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.props.text), createdAt));\n  }\n\n}\n\nexport default SingleMessage;","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/twitter/twitter-messages/SingleMessage.js"],"names":["React","$","ConvertDMTime","SingleMessage","Component","constructor","state","isRecipient","isPhotoMessage","mediaUrl","convertTime","componentDidMount","props","mediaEntities","map","media","index","type","setState","senderId","twitterOwnerId","css","wrapper","console","log","render","createdAt","formatDate","pictureUrl","text"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../../css/twitter-messages/SingleMessage.css';\nimport $ from 'jquery';\nimport ConvertDMTime from '../../../util/ConvertDMTime';\n\nclass SingleMessage extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            isRecipient: false,\n            isPhotoMessage: false,\n            mediaUrl: ''\n        }\n        this.convertTime = new ConvertDMTime();\n    }\n\n    componentDidMount() {\n        this.props.mediaEntities.map((media, index) => {\n            if(media.type === \"photo\") {\n                this.setState({ \n                    isPhotoMessage: true,\n                    mediaUrl: media.mediaUrl\n                });\n            }\n        })\n\n        if(this.props.senderId === this.props.twitterOwnerId) {\n            $(`.twitter-single-message-wrapper:eq(${this.props.index})`).css({ \"justify-content\": \"flex-end\" });\n            $(`.twitter-single-message-container:eq(${this.props.index})`).css({ \"text-align\": \"right\" });\n            $(`.twitter-single-message-text:eq(${this.props.index})`).css({ \"background-color\": \"#00A4EF\", \"border-radius\": \"25px 25px 0 25px\" });\n        } else {\n            this.setState({ isRecipient: true }, () => {\n                $(`.twitter-single-message-wrapper:eq(${this.props.index})`).css({ \"justify-content\": \"flex-start\" });\n                $(`.twitter-single-message-container:eq(${this.props.index})`).css({ \"text-align\": \"left\" });\n                $(`.twitter-single-message-text:eq(${this.props.index})`).css({ \"background-color\": \"#E5ECF0\", \"border-radius\": \"25px 25px 25px 0\" });\n            })\n        }\n        let wrapper = $(`.twitter-single-message-wrapper:eq(${this.props.index})`);\n        console.log(wrapper);\n    }\n    render() {\n        if(this.state.isPhotoMessage) {\n            return <img src={this.state.mediaUrl} className=\"twitter-dm-photo-message\" alt=\"Photo message\" />\n        }\n        let isRecipient = this.state.isRecipient;\n        let createdAt = this.convertTime.formatDate(this.props.createdAt, true);\n        return (\n            <div className=\"twitter-single-message-wrapper\">\n                { isRecipient &&\n                    <img src={this.props.pictureUrl} alt=\"Avatar\" />\n                }\n                <div className=\"twitter-single-message-container\">\n                    <div className=\"twitter-single-message-text\">\n                        { this.props.text }\n                    </div>\n                        { createdAt }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SingleMessage;"]},"metadata":{},"sourceType":"module"}