{"ast":null,"code":"var _jsxFileName = \"/home/msi/Pulpit/Divelog/reactapp/src/util/withAuth.js\";\nimport React from 'react';\nimport AuthService from './AuthService';\nexport default function withAuth(AuthComponent, props) {\n  const Auth = new AuthService();\n  let customAuthComponent = false;\n\n  class AuthWrapped extends React.Component {\n    constructor(props) {\n      super(props);\n    }\n\n    setRedirectForTwitterExplore(props, url) {\n      if (props.hasOwnProperty(\"twitterExploreForCategories\")) {\n        if (props.twitterExploreForCategories) {\n          this.props.history.replace(url);\n        }\n      }\n\n      if (props.hasOwnProperty(\"twitterExplore\")) {\n        if (props.twitterExplore) {\n          this.props.history.replace(url);\n        }\n      }\n    }\n\n    componentWillMount() {\n      customAuthComponent = true;\n\n      if (!Auth.loggedIn()) {\n        this.props.history.replace(\"/login\");\n      } else {\n        let twitterJwtToken = Auth.getTwitterToken();\n        let facebookJwtToken = Auth.getToken();\n\n        try {\n          if (twitterJwtToken) {\n            if (props !== undefined) {\n              if (this.props.location.pathname === \"/twitter/explore\") {\n                customAuthComponent && this.setRedirectForTwitterExplore(props, \"/twitter/explore\");\n              }\n\n              if (this.props.location.pathname === \"/twitter/home\") {\n                customAuthComponent && this.props.history.replace(\"/twitter/home\");\n              }\n            }\n          }\n\n          if (facebookJwtToken) {\n            customAuthComponent && this.props.history.replace(\"/dashboard\");\n          }\n        } catch (err) {\n          if (twitterJwtToken) {\n            Auth.logoutTwitter();\n          }\n\n          if (facebookJwtToken) {\n            Auth.logout();\n          }\n\n          console.log(\"/login\");\n          this.props.history.replace(\"/login\");\n        }\n      }\n    }\n\n    componentWillUnmount() {\n      customAuthComponent = false;\n    }\n\n    render() {\n      if (Auth.loggedIn()) {\n        return customAuthComponent && React.createElement(AuthComponent, {\n          history: this.props.history,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n      } else {\n        return null;\n      }\n    }\n\n  }\n\n  return AuthWrapped;\n}","map":{"version":3,"sources":["/home/msi/Pulpit/Divelog/reactapp/src/util/withAuth.js"],"names":["React","AuthService","withAuth","AuthComponent","props","Auth","customAuthComponent","AuthWrapped","Component","constructor","setRedirectForTwitterExplore","url","hasOwnProperty","twitterExploreForCategories","history","replace","twitterExplore","componentWillMount","loggedIn","twitterJwtToken","getTwitterToken","facebookJwtToken","getToken","undefined","location","pathname","err","logoutTwitter","logout","console","log","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,eAAe,SAASC,QAAT,CAAkBC,aAAlB,EAAiCC,KAAjC,EAAwC;AACnD,QAAMC,IAAI,GAAI,IAAIJ,WAAJ,EAAd;AACA,MAAIK,mBAAmB,GAAG,KAA1B;;AAEA,QAAMC,WAAN,SAA0BP,KAAK,CAACQ,SAAhC,CAA0C;AACtCC,IAAAA,WAAW,CAACL,KAAD,EAAQ;AACf,YAAMA,KAAN;AACH;;AAEDM,IAAAA,4BAA4B,CAACN,KAAD,EAAQO,GAAR,EAAa;AACrC,UAAGP,KAAK,CAACQ,cAAN,CAAqB,6BAArB,CAAH,EAAwD;AACpD,YAAGR,KAAK,CAACS,2BAAT,EAAsC;AAClC,eAAKT,KAAL,CAAWU,OAAX,CAAmBC,OAAnB,CAA2BJ,GAA3B;AACH;AACJ;;AAED,UAAGP,KAAK,CAACQ,cAAN,CAAqB,gBAArB,CAAH,EAA2C;AACvC,YAAGR,KAAK,CAACY,cAAT,EAAyB;AACrB,eAAKZ,KAAL,CAAWU,OAAX,CAAmBC,OAAnB,CAA2BJ,GAA3B;AACH;AACJ;AACJ;;AAEDM,IAAAA,kBAAkB,GAAG;AACjBX,MAAAA,mBAAmB,GAAG,IAAtB;;AAEA,UAAG,CAACD,IAAI,CAACa,QAAL,EAAJ,EAAqB;AACjB,aAAKd,KAAL,CAAWU,OAAX,CAAmBC,OAAnB,CAA2B,QAA3B;AACH,OAFD,MAEO;AACH,YAAII,eAAe,GAAGd,IAAI,CAACe,eAAL,EAAtB;AACA,YAAIC,gBAAgB,GAAGhB,IAAI,CAACiB,QAAL,EAAvB;;AACA,YAAI;AACA,cAAGH,eAAH,EAAoB;AAChB,gBAAGf,KAAK,KAAKmB,SAAb,EAAwB;AACpB,kBAAG,KAAKnB,KAAL,CAAWoB,QAAX,CAAoBC,QAApB,KAAiC,kBAApC,EAAwD;AACpDnB,gBAAAA,mBAAmB,IAAI,KAAKI,4BAAL,CAAkCN,KAAlC,EAAyC,kBAAzC,CAAvB;AACH;;AACD,kBAAG,KAAKA,KAAL,CAAWoB,QAAX,CAAoBC,QAApB,KAAiC,eAApC,EAAqD;AACjDnB,gBAAAA,mBAAmB,IAAI,KAAKF,KAAL,CAAWU,OAAX,CAAmBC,OAAnB,CAA2B,eAA3B,CAAvB;AACH;AACJ;AACJ;;AAED,cAAGM,gBAAH,EAAqB;AACjBf,YAAAA,mBAAmB,IAAI,KAAKF,KAAL,CAAWU,OAAX,CAAmBC,OAAnB,CAA2B,YAA3B,CAAvB;AACH;AACJ,SAfD,CAeE,OAAMW,GAAN,EAAW;AACT,cAAGP,eAAH,EAAoB;AAChBd,YAAAA,IAAI,CAACsB,aAAL;AACH;;AACD,cAAGN,gBAAH,EAAqB;AACjBhB,YAAAA,IAAI,CAACuB,MAAL;AACH;;AACDC,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,eAAK1B,KAAL,CAAWU,OAAX,CAAmBC,OAAnB,CAA2B,QAA3B;AACH;AACJ;AACJ;;AAEDgB,IAAAA,oBAAoB,GAAG;AACnBzB,MAAAA,mBAAmB,GAAG,KAAtB;AACH;;AAED0B,IAAAA,MAAM,GAAG;AACL,UAAG3B,IAAI,CAACa,QAAL,EAAH,EAAoB;AAChB,eACIZ,mBAAmB,IAAI,oBAAC,aAAD;AAAe,UAAA,OAAO,EAAE,KAAKF,KAAL,CAAWU,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD3B;AAGH,OAJD,MAIO;AACH,eAAO,IAAP;AACH;AACJ;;AAnEqC;;AAqE1C,SAAOP,WAAP;AACH","sourcesContent":["import React from 'react';\nimport AuthService from './AuthService';\n\nexport default function withAuth(AuthComponent, props) {\n    const Auth =  new AuthService();\n    let customAuthComponent = false;\n\n    class AuthWrapped extends React.Component {\n        constructor(props) {\n            super(props);\n        }\n\n        setRedirectForTwitterExplore(props, url) {\n            if(props.hasOwnProperty(\"twitterExploreForCategories\")) {\n                if(props.twitterExploreForCategories) {\n                    this.props.history.replace(url);\n                }\n            }\n\n            if(props.hasOwnProperty(\"twitterExplore\")) {\n                if(props.twitterExplore) {\n                    this.props.history.replace(url);\n                }\n            }\n        }\n\n        componentWillMount() {\n            customAuthComponent = true;\n\n            if(!Auth.loggedIn()) {\n                this.props.history.replace(\"/login\");\n            } else {\n                let twitterJwtToken = Auth.getTwitterToken();\n                let facebookJwtToken = Auth.getToken();\n                try {\n                    if(twitterJwtToken) {\n                        if(props !== undefined) {\n                            if(this.props.location.pathname === \"/twitter/explore\") {\n                                customAuthComponent && this.setRedirectForTwitterExplore(props, \"/twitter/explore\");\n                            }\n                            if(this.props.location.pathname === \"/twitter/home\") {\n                                customAuthComponent && this.props.history.replace(\"/twitter/home\");\n                            }\n                        } \n                    }\n\n                    if(facebookJwtToken) {\n                        customAuthComponent && this.props.history.replace(\"/dashboard\");\n                    }\n                } catch(err) {\n                    if(twitterJwtToken) {\n                        Auth.logoutTwitter();\n                    }\n                    if(facebookJwtToken) {\n                        Auth.logout();\n                    }\n                    console.log(\"/login\");\n                    this.props.history.replace(\"/login\");\n                }\n            }\n        }\n\n        componentWillUnmount() {\n            customAuthComponent = false;\n        }\n\n        render() {\n            if(Auth.loggedIn()) {\n                return (\n                    customAuthComponent && <AuthComponent history={this.props.history} />\n                );\n            } else {\n                return null;\n            }\n        }\n    }\n    return AuthWrapped;\n}"]},"metadata":{},"sourceType":"module"}