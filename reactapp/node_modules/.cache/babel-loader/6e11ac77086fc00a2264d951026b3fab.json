{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/Divelog/reactapp/src/components/Twitter.js\";\nimport React from 'react';\nimport '../css/TimelineLikes.css';\nimport withTwitterAuth from '../util/withTwitterAuth';\nimport AuthService from '../util/AuthService';\nimport TwitterCategoriesCard from './twitter/TwitterCategoriesCard';\nimport SearchTwitterPeople from './twitter/SearchTwitterPeople';\nimport AvailableTrends from './twitter/AvailableTrends';\nimport TwitterFriendsList from './twitter/TwitterFriendsList';\nimport $ from 'jquery';\nimport ReactDOM from 'react-dom';\nimport { BACKEND_API_URL } from '../actions/types';\n\nclass Twitter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.isMountedTwitter = false;\n    this.state = {\n      accessToken: '',\n      email: '',\n      name: '',\n      userID: '',\n      pictureUrl: '',\n      providerId: '',\n      screenName: '',\n      tokenSecret: ''\n    };\n    this.Auth = new AuthService();\n  }\n\n  componentDidMount() {\n    this.isMountedTwitter = true;\n    let jwtToken = this.Auth.getRightSocialToken();\n    this.isMountedTwitter && window.twttr.ready(function (twttr) {\n      twttr.widgets.load(document.getElementsByClassName(\"feed-container\")[0]);\n    });\n    fetch(\"\".concat(BACKEND_API_URL, \"/getuserdata/\").concat(jwtToken), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      return response.json();\n    }).then(jsonData => {\n      if (this.isMountedTwitter) {\n        $(\".tweets-likes-container\").html(\"\");\n        this.setState({\n          accessToken: jsonData.accessToken,\n          email: jsonData.email,\n          name: jsonData.name,\n          twitterUserID: jsonData.twitterUserID,\n          pictureUrl: jsonData.pictureUrl,\n          providerId: jsonData.providerId,\n          screenName: jsonData.screenName,\n          tokenSecret: jsonData.tokenSecret\n        }, () => {\n          window.twttr.widgets.createTimeline({\n            sourceType: 'likes',\n            screenName: this.state.screenName\n          }, document.getElementsByClassName(\"tweets-likes-container\")[0], {\n            width: '100%',\n            height: '100%',\n            related: 'twitterdev,twitterapi'\n          });\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  componentWillUnmount() {\n    this.isMountedTwitter = false;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"twitter-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-grid-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-grid-item-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-left-categories-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-profil-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.state.name), React.createElement(TwitterCategoriesCard, {\n      pictureUrl: this.state.pictureUrl,\n      screenName: this.state.screenName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"feed-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tweets-likes-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"twitter-grid-item-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-rl-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-groups-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(SearchTwitterPeople, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(AvailableTrends, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"twitter-rr-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-friends-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default withTwitterAuth(Twitter);","map":{"version":3,"sources":["/home/huber/Pulpit/Divelog/reactapp/src/components/Twitter.js"],"names":["React","withTwitterAuth","AuthService","TwitterCategoriesCard","SearchTwitterPeople","AvailableTrends","TwitterFriendsList","$","ReactDOM","BACKEND_API_URL","Twitter","Component","constructor","props","isMountedTwitter","state","accessToken","email","name","userID","pictureUrl","providerId","screenName","tokenSecret","Auth","componentDidMount","jwtToken","getRightSocialToken","window","twttr","ready","widgets","load","document","getElementsByClassName","fetch","method","headers","then","response","json","jsonData","html","setState","twitterUserID","createTimeline","sourceType","width","height","related","catch","err","console","log","componentWillUnmount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,0BAAP;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,qBAAP,MAAkC,iCAAlC;AACA,OAAOC,mBAAP,MAAgC,+BAAhC;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,kBAAP,MAA+B,8BAA/B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,eAAT,QAAgC,kBAAhC;;AAEA,MAAMC,OAAN,SAAsBV,KAAK,CAACW,SAA5B,CAAsC;AAElCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SADnBC,gBACmB,GADA,KACA;AAGf,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,EADJ;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,IAAI,EAAE,EAHG;AAITC,MAAAA,MAAM,EAAE,EAJC;AAKTC,MAAAA,UAAU,EAAE,EALH;AAMTC,MAAAA,UAAU,EAAE,EANH;AAOTC,MAAAA,UAAU,EAAE,EAPH;AAQTC,MAAAA,WAAW,EAAE;AARJ,KAAb;AAUA,SAAKC,IAAL,GAAY,IAAItB,WAAJ,EAAZ;AACH;;AAEDuB,EAAAA,iBAAiB,GAAG;AAChB,SAAKX,gBAAL,GAAwB,IAAxB;AACA,QAAIY,QAAQ,GAAG,KAAKF,IAAL,CAAUG,mBAAV,EAAf;AAEA,SAAKb,gBAAL,IAAyBc,MAAM,CAACC,KAAP,CAAaC,KAAb,CACrB,UAAUD,KAAV,EAAiB;AACbA,MAAAA,KAAK,CAACE,OAAN,CAAcC,IAAd,CAAmBC,QAAQ,CAACC,sBAAT,CAAgC,gBAAhC,EAAkD,CAAlD,CAAnB;AACH,KAHoB,CAAzB;AAOAC,IAAAA,KAAK,WAAI1B,eAAJ,0BAAmCiB,QAAnC,GAA+C;AAChDU,MAAAA,MAAM,EAAE,KADwC;AAEhDC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX;AAFuC,KAA/C,CAAL,CAOCC,IAPD,CAOMC,QAAQ,IAAI;AAAC,aAAOA,QAAQ,CAACC,IAAT,EAAP;AAAuB,KAP1C,EAQCF,IARD,CAQMG,QAAQ,IAAI;AACd,UAAG,KAAK3B,gBAAR,EAA0B;AACtBP,QAAAA,CAAC,CAAC,yBAAD,CAAD,CAA6BmC,IAA7B,CAAkC,EAAlC;AACA,aAAKC,QAAL,CAAc;AACV3B,UAAAA,WAAW,EAAEyB,QAAQ,CAACzB,WADZ;AAEVC,UAAAA,KAAK,EAAEwB,QAAQ,CAACxB,KAFN;AAGVC,UAAAA,IAAI,EAAEuB,QAAQ,CAACvB,IAHL;AAIV0B,UAAAA,aAAa,EAAEH,QAAQ,CAACG,aAJd;AAKVxB,UAAAA,UAAU,EAAEqB,QAAQ,CAACrB,UALX;AAMVC,UAAAA,UAAU,EAAEoB,QAAQ,CAACpB,UANX;AAOVC,UAAAA,UAAU,EAAEmB,QAAQ,CAACnB,UAPX;AAQVC,UAAAA,WAAW,EAAEkB,QAAQ,CAAClB;AARZ,SAAd,EASG,MAAM;AACLK,UAAAA,MAAM,CAACC,KAAP,CAAaE,OAAb,CAAqBc,cAArB,CACA;AACIC,YAAAA,UAAU,EAAE,OADhB;AAEIxB,YAAAA,UAAU,EAAE,KAAKP,KAAL,CAAWO;AAF3B,WADA,EAKAW,QAAQ,CAACC,sBAAT,CAAgC,wBAAhC,EAA0D,CAA1D,CALA,EAMA;AACIa,YAAAA,KAAK,EAAE,MADX;AAEIC,YAAAA,MAAM,EAAE,MAFZ;AAGIC,YAAAA,OAAO,EAAE;AAHb,WANA;AAWH,SArBD;AAsBH;AACJ,KAlCD,EAkCGC,KAlCH,CAkCSC,GAAG,IAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KApCD;AAqCH;;AAEDG,EAAAA,oBAAoB,GAAG;AACnB,SAAKxC,gBAAL,GAAwB,KAAxB;AACH;;AAEDyC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKxC,KAAL,CAAWG,IADjB,CADJ,EAII,oBAAC,qBAAD;AACI,MAAA,UAAU,EAAE,KAAKH,KAAL,CAAWK,UAD3B;AAEI,MAAA,UAAU,EAAE,KAAKL,KAAL,CAAWO,UAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ,CADJ,EAYI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAZJ,EAiBI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADJ,EAOI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,CAjBJ,CADJ,CADJ;AAmCH;;AA5GiC;;AA+GtC,eAAerB,eAAe,CAACS,OAAD,CAA9B","sourcesContent":["import React from 'react';\nimport '../css/TimelineLikes.css';\nimport withTwitterAuth from '../util/withTwitterAuth';\nimport AuthService from '../util/AuthService';\nimport TwitterCategoriesCard from './twitter/TwitterCategoriesCard';\nimport SearchTwitterPeople from './twitter/SearchTwitterPeople';\nimport AvailableTrends from './twitter/AvailableTrends';\nimport TwitterFriendsList from './twitter/TwitterFriendsList';\nimport $ from 'jquery';\nimport ReactDOM from 'react-dom';\nimport { BACKEND_API_URL } from '../actions/types';\n\nclass Twitter extends React.Component {\n    isMountedTwitter = false;\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            accessToken: '',\n            email: '',\n            name: '',\n            userID: '',\n            pictureUrl: '',\n            providerId: '',\n            screenName: '',\n            tokenSecret: ''\n        }\n        this.Auth = new AuthService();\n    }\n\n    componentDidMount() {\n        this.isMountedTwitter = true;\n        let jwtToken = this.Auth.getRightSocialToken();\n\n        this.isMountedTwitter && window.twttr.ready(\n            function (twttr) {\n                twttr.widgets.load(document.getElementsByClassName(\"feed-container\")[0]);\n            }\n          );\n        \n\n        fetch(`${BACKEND_API_URL}/getuserdata/${jwtToken}`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(response => {return response.json()})\n        .then(jsonData => {\n            if(this.isMountedTwitter) {\n                $(\".tweets-likes-container\").html(\"\");\n                this.setState({\n                    accessToken: jsonData.accessToken,\n                    email: jsonData.email,\n                    name: jsonData.name,\n                    twitterUserID: jsonData.twitterUserID,\n                    pictureUrl: jsonData.pictureUrl,\n                    providerId: jsonData.providerId,\n                    screenName: jsonData.screenName,\n                    tokenSecret: jsonData.tokenSecret\n                }, () => {\n                    window.twttr.widgets.createTimeline(\n                    {\n                        sourceType: 'likes',\n                        screenName: this.state.screenName\n                    },\n                    document.getElementsByClassName(\"tweets-likes-container\")[0],\n                    {\n                        width: '100%',\n                        height: '100%',\n                        related: 'twitterdev,twitterapi'\n                    });\n                });\n            }\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    componentWillUnmount() {\n        this.isMountedTwitter = false;\n    }\n\n    render() {\n        return (\n            <div className=\"twitter-container\">\n                <div className=\"twitter-grid-container\">\n                    <div className=\"twitter-grid-item-1\">\n                        <div className=\"twitter-left-categories-container\">\n                            <div className=\"twitter-profil-container\">\n                                { this.state.name }\n                            </div>\n                            <TwitterCategoriesCard\n                                pictureUrl={this.state.pictureUrl}\n                                screenName={this.state.screenName}\n                            />    \n                        </div>\n                    </div>\n                    <div className=\"feed-container\">\n                        <div className=\"tweets-likes-container\">\n\n                        </div>\n                    </div>\n                    <div className=\"twitter-grid-item-3\">\n                        <div className=\"twitter-rl-container\">\n                            <div className=\"twitter-groups-container\">\n                                <SearchTwitterPeople />\n                                <AvailableTrends />\n                            </div>\n                        </div>\n                        <div className=\"twitter-rr-container\">\n                            <div className=\"twitter-friends-container\">\n                                {/* <TwitterFriendsList /> */}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTwitterAuth(Twitter);"]},"metadata":{},"sourceType":"module"}