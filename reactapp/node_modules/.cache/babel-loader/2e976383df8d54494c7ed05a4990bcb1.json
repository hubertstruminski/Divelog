{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/Divelog/reactapp/src/components/forum/UpdateTopic.js\";\nimport React from 'react';\nimport '../../css/AddTopic.css';\nimport ReactFilestack from 'filestack-react';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport { withRouter } from 'react-router';\nimport { withTranslation } from 'react-i18next';\nimport AuthService from '../../util/AuthService';\nimport { BACKEND_API_URL } from '../../actions/types';\n\nclass UpdateTopic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      message: '',\n      isInvalidTitle: false,\n      isInvalidMessage: false,\n      successFiles: [],\n      successNameFiles: [],\n      isSuccessUploaded: false,\n      isFailureUploaded: false,\n      failureNameFiles: [],\n      languageForum: ''\n    };\n    this.Auth = new AuthService();\n    this.errors = [];\n    this.files = [];\n    this.onChange = this.onChange.bind(this);\n    this.onSubmitForm = this.onSubmitForm.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n    this.responseFilestack = this.responseFilestack.bind(this);\n    this.onErrorFilestack = this.onErrorFilestack.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  componentDidMount() {\n    let topicId = this.props.match.params.id;\n    fetch(\"\".concat(BACKEND_API_URL, \"/get/topic/\").concat(topicId), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      return response.json();\n    }).then(jsonData => {\n      jsonData.files.map((file, index) => {\n        const element = {\n          id: file.id,\n          objectId: file.objectId,\n          url: file.url,\n          size: file.size,\n          name: file.name,\n          type: file.type\n        };\n        this.setState({\n          successFiles: this.state.successFiles.concat(element),\n          successNameFiles: this.state.successNameFiles.concat(file.name)\n        });\n      });\n      this.setState({\n        title: jsonData.title,\n        message: jsonData.message,\n        languageForum: jsonData.languageForum\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  showInvalidTitle(isInvalidTitle) {\n    if (isInvalidTitle) {\n      return React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, this.props.t(\"forum.AddTopic.form.invalidTitle\"));\n    }\n\n    return null;\n  }\n\n  showInvalidMessage(isInvalidMessage) {\n    if (isInvalidMessage) {\n      return React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.props.t(\"forum.AddTopic.form.invalidMessage\"));\n    }\n\n    return null;\n  }\n\n  showSuccessUploadedFiles(isSuccessUploaded) {\n    if (isSuccessUploaded) {\n      return React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, this.props.t(\"forum.AddTopic.form.successUploaded\"), this.state.successNameFiles.map((name, index) => {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, name);\n      }));\n    }\n\n    return null;\n  }\n\n  showFailureUploadedFiles(isFailureUploaded) {\n    if (isFailureUploaded) {\n      return React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, this.props.t(\"forum.AddTopic.form.failureUploaded\"), this.state.failureNameFiles.map((name, index) => {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, name);\n      }));\n    }\n\n    return null;\n  }\n\n  validateForm(e) {\n    if (this.state.title.length < 10 || this.state.title.length > 160) {\n      e.preventDefault();\n      this.setState({\n        isInvalidTitle: true\n      });\n      this.errors.push(true);\n    }\n\n    if (this.state.message.length < 10) {\n      e.preventDefault();\n      this.setState({\n        isInvalidMessage: true\n      });\n      this.errors.push(true);\n    }\n  }\n\n  onSubmitForm(e) {\n    e.preventDefault();\n    this.validateForm(e);\n\n    if (this.errors.length === 0) {\n      let topicId = this.props.match.params.id;\n      let jwtToken = this.Auth.getRightSocialToken();\n      const updatedTopic = {\n        title: this.state.title,\n        message: this.state.message,\n        files: this.state.successFiles\n      };\n      axios({\n        method: 'PUT',\n        url: \"\".concat(BACKEND_API_URL, \"/update/topic/\").concat(topicId, \"/\").concat(jwtToken),\n        data: updatedTopic,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\"\n        }\n      }).then(response => {\n        if (response.status !== 200) {\n          swal(this.props.t(\"error-500.title\"), this.props.t(\"error-500.message\"), \"error\");\n        } else {\n          // this.props.history.replace(`topic/${topicId}/${this.state.languageForum}/posts`);\n          this.props.history.push(\"/forum\");\n        }\n      });\n    }\n  }\n\n  responseFilestack(response) {\n    response.filesUploaded.map((file, index) => {\n      const element = {\n        objectId: file.uploadId,\n        url: file.url,\n        size: file.size,\n        name: file.originalFile.name,\n        type: file.originalFile.type\n      };\n      this.setState({\n        successFiles: this.state.successFiles.concat(element),\n        successNameFiles: this.state.successNameFiles.concat(file.originalFile.name),\n        isSuccessUploaded: true\n      });\n    });\n    response.filesFailed.map((file, index) => {\n      this.setState({\n        failureNameFiles: this.state.failureNameFiles.concat(file.originalFile.name),\n        isFailureUploaded: true\n      });\n    });\n  }\n\n  onErrorFilestack() {\n    swal(this.props.t(\"error-500.title\"), this.props.t(\"error-500.message\"), \"error\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"add-topic-container add-topic-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"new-topic-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"new-topic-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, this.props.t(\"forum.updateTopic.title\")), React.createElement(\"form\", {\n      onSubmit: this.onSubmitForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, this.props.t(\"forum.AddTopic.form.labelTitle\")), React.createElement(\"input\", {\n      className: \"form-control form-control-lg new-update-topic-inputs\",\n      type: \"text\",\n      id: \"title\",\n      name: \"title\",\n      placeholder: \"Enter title\",\n      value: this.state.title,\n      onChange: this.onChange,\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    })), this.showInvalidTitle(this.state.isInvalidTitle), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, this.props.t(\"forum.AddTopic.form.labelMsg\")), React.createElement(\"textarea\", {\n      className: \"form-control form-control-lg new-update-topic-inputs\",\n      id: \"message\",\n      name: \"message\",\n      value: this.state.message,\n      onChange: this.onChange,\n      rows: \"17\",\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    })), this.showInvalidMessage(this.state.isInvalidMessage), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, this.props.t(\"forum.AddTopic.form.filestackBtn\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }), React.createElement(ReactFilestack, {\n      apikey: \"Abn3RoxlVQeWNtMpk2Gflz\",\n      onSuccess: this.responseFilestack,\n      onError: this.onErrorFilestack,\n      componentDisplayMode: {\n        type: 'button',\n        customText: 'Upload files',\n        customClass: 'btn btn-warning btn-upload'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        clear: \"both\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), this.showSuccessUploadedFiles(this.state.isSuccessUploaded), this.showFailureUploadedFiles(this.state.isFailureUploaded)), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary new-topic-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, this.props.t(\"forum.AddTopic.form.submit\")))));\n  }\n\n}\n\nexport default withTranslation(\"common\")(withRouter(UpdateTopic));","map":{"version":3,"sources":["/home/huber/Pulpit/Divelog/reactapp/src/components/forum/UpdateTopic.js"],"names":["React","ReactFilestack","swal","axios","withRouter","withTranslation","AuthService","BACKEND_API_URL","UpdateTopic","Component","constructor","props","state","title","message","isInvalidTitle","isInvalidMessage","successFiles","successNameFiles","isSuccessUploaded","isFailureUploaded","failureNameFiles","languageForum","Auth","errors","files","onChange","bind","onSubmitForm","validateForm","responseFilestack","onErrorFilestack","e","setState","target","name","value","componentDidMount","topicId","match","params","id","fetch","method","headers","then","response","json","jsonData","map","file","index","element","objectId","url","size","type","concat","catch","err","console","log","showInvalidTitle","t","showInvalidMessage","showSuccessUploadedFiles","showFailureUploadedFiles","length","preventDefault","push","jwtToken","getRightSocialToken","updatedTopic","data","status","history","filesUploaded","uploadId","originalFile","filesFailed","render","color","customText","customClass","clear"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../css/AddTopic.css';\nimport ReactFilestack from 'filestack-react';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport { withRouter } from 'react-router';\nimport { withTranslation } from 'react-i18next';\nimport AuthService from '../../util/AuthService';\nimport { BACKEND_API_URL } from '../../actions/types';\n\nclass UpdateTopic extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n            title: '',\n            message: '',\n            isInvalidTitle: false,\n            isInvalidMessage: false,\n            successFiles: [],\n            successNameFiles: [],\n            isSuccessUploaded: false,\n            isFailureUploaded: false,\n            failureNameFiles: [],\n            languageForum: ''\n        }\n        this.Auth = new AuthService();\n        this.errors = [];\n        this.files = []\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmitForm = this.onSubmitForm.bind(this);\n        this.validateForm = this.validateForm.bind(this);\n        this.responseFilestack = this.responseFilestack.bind(this);\n        this.onErrorFilestack = this.onErrorFilestack.bind(this);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    componentDidMount() {\n        let topicId = this.props.match.params.id;\n\n        fetch(`${BACKEND_API_URL}/get/topic/${topicId}`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        }).then(response => { return response.json() })\n        .then(jsonData => {\n            jsonData.files.map((file, index) => {\n                const element = {\n                    id: file.id,\n                    objectId: file.objectId,\n                    url: file.url,\n                    size: file.size,\n                    name: file.name,\n                    type: file.type\n                }\n                this.setState({ \n                    successFiles: this.state.successFiles.concat(element),\n                    successNameFiles: this.state.successNameFiles.concat(file.name)\n                });\n            });\n            this.setState({ \n                title: jsonData.title,\n                message: jsonData.message,\n                languageForum: jsonData.languageForum\n            });\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    showInvalidTitle(isInvalidTitle) {\n        if(isInvalidTitle) {\n            return (\n                <div className=\"alert alert-danger\">\n                    { this.props.t(\"forum.AddTopic.form.invalidTitle\") }\n                </div>\n            );\n        }\n        return null;\n    }\n\n    showInvalidMessage(isInvalidMessage) {\n        if(isInvalidMessage) {\n            return (\n                <div className=\"alert alert-danger\">\n                    { this.props.t(\"forum.AddTopic.form.invalidMessage\") }\n                </div>\n            );\n        }\n        return null;\n    }\n\n    showSuccessUploadedFiles(isSuccessUploaded) {\n        if(isSuccessUploaded) {\n            return (\n                <div className=\"alert alert-warning\">\n                    { this.props.t(\"forum.AddTopic.form.successUploaded\") }\n                    { this.state.successNameFiles.map((name, index) => {\n                        return <p>{name}</p>\n                    })}\n                </div>\n            );\n        }\n        return null;\n    }\n\n    showFailureUploadedFiles(isFailureUploaded) {\n        if(isFailureUploaded) {\n            return (\n                <div className=\"alert alert-danger\">\n                    { this.props.t(\"forum.AddTopic.form.failureUploaded\") }\n                    { this.state.failureNameFiles.map((name, index) => {\n                        return <p>{name}</p>\n                    })}\n                </div>\n            );\n        }\n        return null;\n    }\n\n    validateForm(e) {\n        if(this.state.title.length < 10 || this.state.title.length > 160) {\n            e.preventDefault();\n            this.setState({ isInvalidTitle: true });\n            this.errors.push(true);\n        }\n\n        if(this.state.message.length < 10) {\n            e.preventDefault();\n            this.setState({ isInvalidMessage: true });\n            this.errors.push(true);\n        }\n    }\n\n    onSubmitForm(e) {\n        e.preventDefault();\n\n        this.validateForm(e);\n\n        if(this.errors.length === 0) {\n            let topicId = this.props.match.params.id;\n            let jwtToken = this.Auth.getRightSocialToken();\n\n            const updatedTopic = {\n                title: this.state.title,\n                message: this.state.message,\n                files: this.state.successFiles\n            }\n\n            axios({\n                method: 'PUT',\n                url: `${BACKEND_API_URL}/update/topic/${topicId}/${jwtToken}`,\n                data: updatedTopic,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\"\n                }\n            }).then(response => {\n                if(response.status !== 200) {\n                    swal(this.props.t(\"error-500.title\"), this.props.t(\"error-500.message\"), \"error\");\n                } else {\n                    // this.props.history.replace(`topic/${topicId}/${this.state.languageForum}/posts`);\n                    this.props.history.push(\"/forum\");\n                }\n            });\n        }\n    }\n\n    responseFilestack(response) {\n        response.filesUploaded.map((file, index) => {\n            const element = {\n                objectId: file.uploadId,\n                url: file.url,\n                size: file.size,\n                name: file.originalFile.name,\n                type: file.originalFile.type\n            };\n            this.setState({ \n                successFiles: this.state.successFiles.concat(element),\n                successNameFiles: this.state.successNameFiles.concat(file.originalFile.name),\n                isSuccessUploaded: true\n            });\n        });\n\n        response.filesFailed.map((file, index) => {\n            this.setState({ \n                failureNameFiles: this.state.failureNameFiles.concat(file.originalFile.name),\n                isFailureUploaded: true\n            });\n        });\n    }\n\n    onErrorFilestack() {\n        swal(this.props.t(\"error-500.title\"), this.props.t(\"error-500.message\"), \"error\");\n    }\n\n    render() {\n        return (\n            <div className=\"add-topic-container add-topic-center\">\n                <div className=\"new-topic-box\">\n                    <div className=\"new-topic-title\">\n                        { this.props.t(\"forum.updateTopic.title\") }\n                    </div>\n\n                    <form onSubmit={this.onSubmitForm}>\n                        <div className=\"form-group\">\n                            <label for=\"title\">\n                                { this.props.t(\"forum.AddTopic.form.labelTitle\") }\n                            </label>\n                            <input \n                                className=\"form-control form-control-lg new-update-topic-inputs\"\n                                type=\"text\"\n                                id=\"title\"\n                                name=\"title\"\n                                placeholder=\"Enter title\"\n                                value={this.state.title}\n                                onChange={this.onChange}\n                                style={{ color: 'white' }}\n                            />\n                        </div>\n                        { this.showInvalidTitle(this.state.isInvalidTitle) }\n\n                        <div className=\"form-group\">\n                            <label for=\"message\">\n                                { this.props.t(\"forum.AddTopic.form.labelMsg\") }\n                            </label>\n                            <textarea\n                                className=\"form-control form-control-lg new-update-topic-inputs\"\n                                id=\"message\"\n                                name=\"message\"\n                                value={this.state.message}\n                                onChange={this.onChange}\n                                rows=\"17\"\n                                style={{ color: 'white' }}\n                            >\n                            </textarea>\n                        </div>\n                        { this.showInvalidMessage(this.state.isInvalidMessage) }\n\n                        <div className=\"form-group\">\n                            <label>\n                                { this.props.t(\"forum.AddTopic.form.filestackBtn\") }\n                            </label>\n                            <br />\n                            <ReactFilestack\n                                apikey=\"Abn3RoxlVQeWNtMpk2Gflz\"\n                                onSuccess={this.responseFilestack}\n                                onError={this.onErrorFilestack}\n                                componentDisplayMode={{\n                                    type: 'button',\n                                    customText: 'Upload files',\n                                    customClass: 'btn btn-warning btn-upload'\n                                }}\n                            />\n                            <div style={{ clear: \"both\" }}></div>\n                            { this.showSuccessUploadedFiles(this.state.isSuccessUploaded) }\n                            { this.showFailureUploadedFiles(this.state.isFailureUploaded) }\n                        </div>\n\n                        <button \n                            type=\"submit\" \n                            className=\"btn btn-primary new-topic-btn\"\n                        >\n                            { this.props.t(\"forum.AddTopic.form.submit\") }\n                        </button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation(\"common\")(withRouter(UpdateTopic));"]},"metadata":{},"sourceType":"module"}