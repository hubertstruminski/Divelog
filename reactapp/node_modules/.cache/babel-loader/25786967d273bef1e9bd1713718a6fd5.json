{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/Divelog/reactapp/src/util/withAuth.js\";\nimport React from 'react';\nimport AuthService from './AuthService';\nexport default function withAuth(AuthComponent, props) {\n  const Auth = new AuthService();\n  let customAuthComponent = false;\n\n  class AuthWrapped extends React.Component {\n    constructor() {\n      super();\n    }\n\n    setRedirectForTwitterExplore(props, url) {\n      if (props.hasOwnProperty(\"twitterExploreForCategories\")) {\n        if (props.twitterExploreForCategories) {\n          this.props.history.replace(url);\n        }\n      }\n\n      if (props.hasOwnProperty(\"twitterExplore\")) {\n        if (props.twitterExplore) {\n          this.props.history.replace(url);\n        }\n      }\n    }\n\n    componentWillMount() {\n      customAuthComponent = true;\n\n      if (this.props.match.params.jwtToken !== null && this.props.match.params.jwtToken !== undefined) {\n        if (props !== undefined) {\n          if (this.props.location.pathname === \"/twitter/explore\") {\n            customAuthComponent && this.setRedirectForTwitterExplore(props, \"/twitter/explore\");\n            return;\n          }\n\n          if (this.props.location.pathname === \"/twitter/home\") {\n            customAuthComponent && this.props.history.replace(\"/twitter/home\");\n            return;\n          }\n        }\n\n        fetch(\"/twitter/login/validate/token/\".concat(this.props.match.params.jwtToken), {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(response => {\n          if (response.status === 200) {\n            localStorage.setItem(\"twitterJwtToken\", this.props.match.params.jwtToken);\n\n            try {\n              customAuthComponent && this.props.history.replace(\"/twitter/\".concat(this.props.match.params.jwtToken));\n            } catch (err) {\n              if (this.props.match.params.jwtToken) {\n                Auth.logoutTwitter();\n                this.props.history.replace(\"/login\");\n              }\n            }\n          } else {\n            this.props.history.replace(\"/login\");\n            return;\n          }\n        });\n      }\n\n      let facebookJwtToken = Auth.getToken();\n\n      if (facebookJwtToken !== null && facebookJwtToken !== undefined) {\n        try {\n          customAuthComponent && this.props.history.replace(\"/dashboard\");\n        } catch (err) {\n          Auth.logout();\n          this.props.history.replace(\"/login\");\n        }\n      }\n    }\n\n    componentWillUnmount() {\n      customAuthComponent = false;\n    }\n\n    render() {\n      if (Auth.loggedIn()) {\n        return customAuthComponent && React.createElement(AuthComponent, {\n          history: this.props.history,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        });\n      } else {\n        return null;\n      }\n    }\n\n  }\n\n  return AuthWrapped;\n}","map":{"version":3,"sources":["/home/huber/Pulpit/Divelog/reactapp/src/util/withAuth.js"],"names":["React","AuthService","withAuth","AuthComponent","props","Auth","customAuthComponent","AuthWrapped","Component","constructor","setRedirectForTwitterExplore","url","hasOwnProperty","twitterExploreForCategories","history","replace","twitterExplore","componentWillMount","match","params","jwtToken","undefined","location","pathname","fetch","method","headers","then","response","status","localStorage","setItem","err","logoutTwitter","facebookJwtToken","getToken","logout","componentWillUnmount","render","loggedIn"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,eAAe,SAASC,QAAT,CAAkBC,aAAlB,EAAiCC,KAAjC,EAAwC;AACnD,QAAMC,IAAI,GAAI,IAAIJ,WAAJ,EAAd;AACA,MAAIK,mBAAmB,GAAG,KAA1B;;AAEA,QAAMC,WAAN,SAA0BP,KAAK,CAACQ,SAAhC,CAA0C;AACtCC,IAAAA,WAAW,GAAG;AACV;AACH;;AAEDC,IAAAA,4BAA4B,CAACN,KAAD,EAAQO,GAAR,EAAa;AACrC,UAAGP,KAAK,CAACQ,cAAN,CAAqB,6BAArB,CAAH,EAAwD;AACpD,YAAGR,KAAK,CAACS,2BAAT,EAAsC;AAClC,eAAKT,KAAL,CAAWU,OAAX,CAAmBC,OAAnB,CAA2BJ,GAA3B;AACH;AACJ;;AAED,UAAGP,KAAK,CAACQ,cAAN,CAAqB,gBAArB,CAAH,EAA2C;AACvC,YAAGR,KAAK,CAACY,cAAT,EAAyB;AACrB,eAAKZ,KAAL,CAAWU,OAAX,CAAmBC,OAAnB,CAA2BJ,GAA3B;AACH;AACJ;AACJ;;AAEDM,IAAAA,kBAAkB,GAAG;AACjBX,MAAAA,mBAAmB,GAAG,IAAtB;;AAEA,UAAG,KAAKF,KAAL,CAAWc,KAAX,CAAiBC,MAAjB,CAAwBC,QAAxB,KAAqC,IAArC,IAA6C,KAAKhB,KAAL,CAAWc,KAAX,CAAiBC,MAAjB,CAAwBC,QAAxB,KAAqCC,SAArF,EAAgG;AAC5F,YAAGjB,KAAK,KAAKiB,SAAb,EAAwB;AACpB,cAAG,KAAKjB,KAAL,CAAWkB,QAAX,CAAoBC,QAApB,KAAiC,kBAApC,EAAwD;AACpDjB,YAAAA,mBAAmB,IAAI,KAAKI,4BAAL,CAAkCN,KAAlC,EAAyC,kBAAzC,CAAvB;AACA;AACH;;AACD,cAAG,KAAKA,KAAL,CAAWkB,QAAX,CAAoBC,QAApB,KAAiC,eAApC,EAAqD;AACjDjB,YAAAA,mBAAmB,IAAI,KAAKF,KAAL,CAAWU,OAAX,CAAmBC,OAAnB,CAA2B,eAA3B,CAAvB;AACA;AACH;AACJ;;AACDS,QAAAA,KAAK,yCAAkC,KAAKpB,KAAL,CAAWc,KAAX,CAAiBC,MAAjB,CAAwBC,QAA1D,GAAsE;AACvEK,UAAAA,MAAM,EAAE,KAD+D;AAEvEC,UAAAA,OAAO,EAAE;AACL,4BAAgB;AADX;AAF8D,SAAtE,CAAL,CAKGC,IALH,CAKQC,QAAQ,IAAI;AAChB,cAAGA,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA4B;AACxBC,YAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwC,KAAK3B,KAAL,CAAWc,KAAX,CAAiBC,MAAjB,CAAwBC,QAAhE;;AACA,gBAAI;AACAd,cAAAA,mBAAmB,IAAI,KAAKF,KAAL,CAAWU,OAAX,CAAmBC,OAAnB,oBAAuC,KAAKX,KAAL,CAAWc,KAAX,CAAiBC,MAAjB,CAAwBC,QAA/D,EAAvB;AACH,aAFD,CAEE,OAAMY,GAAN,EAAW;AACT,kBAAG,KAAK5B,KAAL,CAAWc,KAAX,CAAiBC,MAAjB,CAAwBC,QAA3B,EAAqC;AACjCf,gBAAAA,IAAI,CAAC4B,aAAL;AACA,qBAAK7B,KAAL,CAAWU,OAAX,CAAmBC,OAAnB,CAA2B,QAA3B;AACH;AACJ;AACJ,WAVD,MAUO;AACH,iBAAKX,KAAL,CAAWU,OAAX,CAAmBC,OAAnB,CAA2B,QAA3B;AACA;AACH;AACJ,SApBD;AAqBH;;AAED,UAAImB,gBAAgB,GAAG7B,IAAI,CAAC8B,QAAL,EAAvB;;AAEA,UAAGD,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAKb,SAArD,EAAgE;AAC5D,YAAI;AACAf,UAAAA,mBAAmB,IAAI,KAAKF,KAAL,CAAWU,OAAX,CAAmBC,OAAnB,CAA2B,YAA3B,CAAvB;AACH,SAFD,CAEE,OAAMiB,GAAN,EAAW;AACT3B,UAAAA,IAAI,CAAC+B,MAAL;AACA,eAAKhC,KAAL,CAAWU,OAAX,CAAmBC,OAAnB,CAA2B,QAA3B;AACH;AACJ;AACJ;;AAEDsB,IAAAA,oBAAoB,GAAG;AACnB/B,MAAAA,mBAAmB,GAAG,KAAtB;AACH;;AAEDgC,IAAAA,MAAM,GAAG;AACL,UAAGjC,IAAI,CAACkC,QAAL,EAAH,EAAoB;AAChB,eACIjC,mBAAmB,IAAI,oBAAC,aAAD;AAAe,UAAA,OAAO,EAAE,KAAKF,KAAL,CAAWU,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD3B;AAGH,OAJD,MAIO;AACH,eAAO,IAAP;AACH;AACJ;;AAhFqC;;AAkF1C,SAAOP,WAAP;AACH","sourcesContent":["import React from 'react';\nimport AuthService from './AuthService';\n\nexport default function withAuth(AuthComponent, props) {\n    const Auth =  new AuthService();\n    let customAuthComponent = false;\n\n    class AuthWrapped extends React.Component {\n        constructor() {\n            super();\n        }\n\n        setRedirectForTwitterExplore(props, url) {\n            if(props.hasOwnProperty(\"twitterExploreForCategories\")) {\n                if(props.twitterExploreForCategories) {\n                    this.props.history.replace(url);\n                }\n            }\n\n            if(props.hasOwnProperty(\"twitterExplore\")) {\n                if(props.twitterExplore) {\n                    this.props.history.replace(url);\n                }\n            }\n        }\n\n        componentWillMount() {\n            customAuthComponent = true;\n\n            if(this.props.match.params.jwtToken !== null && this.props.match.params.jwtToken !== undefined) {\n                if(props !== undefined) {\n                    if(this.props.location.pathname === \"/twitter/explore\") {\n                        customAuthComponent && this.setRedirectForTwitterExplore(props, \"/twitter/explore\");\n                        return;\n                    }\n                    if(this.props.location.pathname === \"/twitter/home\") {\n                        customAuthComponent && this.props.history.replace(\"/twitter/home\");\n                        return;\n                    }\n                } \n                fetch(`/twitter/login/validate/token/${this.props.match.params.jwtToken}`, {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                }).then(response => {\n                    if(response.status === 200) {\n                        localStorage.setItem(\"twitterJwtToken\", this.props.match.params.jwtToken);\n                        try {\n                            customAuthComponent && this.props.history.replace(`/twitter/${this.props.match.params.jwtToken}`);\n                        } catch(err) {\n                            if(this.props.match.params.jwtToken) {\n                                Auth.logoutTwitter();\n                                this.props.history.replace(\"/login\");\n                            }\n                        } \n                    } else {\n                        this.props.history.replace(\"/login\");\n                        return;\n                    }\n                });\n            }\n\n            let facebookJwtToken = Auth.getToken();\n\n            if(facebookJwtToken !== null && facebookJwtToken !== undefined) {\n                try {\n                    customAuthComponent && this.props.history.replace(\"/dashboard\");\n                } catch(err) {\n                    Auth.logout();\n                    this.props.history.replace(\"/login\");\n                }\n            }\n        }\n\n        componentWillUnmount() {\n            customAuthComponent = false;\n        }\n\n        render() {\n            if(Auth.loggedIn()) {\n                return (\n                    customAuthComponent && <AuthComponent history={this.props.history} />\n                );\n            } else {\n                return null;\n            }\n        }\n    }\n    return AuthWrapped;\n}"]},"metadata":{},"sourceType":"module"}