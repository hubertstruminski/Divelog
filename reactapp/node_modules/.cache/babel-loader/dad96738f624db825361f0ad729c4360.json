{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/settings/Settings.js\";\nimport React from 'react';\nimport '../../css/Settings.css';\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    fetch(\"/generate/pdf\", {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'content-type': 'application/json'\n      },\n      responseType: 'blob'\n    }).then(response => {\n      // console.log(response.text());\n      const file = new Blob(response.text(), {\n        type: 'application/pdf'\n      });\n      const fileURL = URL.createObjectURL(file);\n      window.open(fileURL);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"settings-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"PDF\"));\n  }\n\n}\n\nexport default Settings;","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/settings/Settings.js"],"names":["React","Settings","Component","constructor","props","onClick","bind","fetch","method","headers","responseType","then","response","file","Blob","text","type","fileURL","URL","createObjectURL","window","open","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;;AAEA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACH;;AAEDD,EAAAA,OAAO,GAAG;AACNE,IAAAA,KAAK,CAAC,eAAD,EAAkB;AACnBC,MAAAA,MAAM,EAAE,KADW;AAEnBC,MAAAA,OAAO,EAAE;AACL,kBAAU,mCADL;AAEL,wBAAgB;AAFX,OAFU;AAMnBC,MAAAA,YAAY,EAAE;AANK,KAAlB,CAAL,CAOGC,IAPH,CAOQC,QAAQ,IAAI;AAChB;AACA,YAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,QAAQ,CAACG,IAAT,EAAT,EAA0B;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAA1B,CAAb;AACA,YAAMC,OAAO,GAAGC,GAAG,CAACC,eAAJ,CAAoBN,IAApB,CAAhB;AACAO,MAAAA,MAAM,CAACC,IAAP,CAAYJ,OAAZ;AACH,KAZD;AAaH;;AAEDK,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,KAAKjB,OAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CADJ;AAKH;;AA5BkC;;AA+BvC,eAAeJ,QAAf","sourcesContent":["import React from 'react';\nimport '../../css/Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onClick = this.onClick.bind(this);\n    }\n    \n    onClick() {\n        fetch(\"/generate/pdf\", {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'content-type': 'application/json'\n            },\n            responseType: 'blob'\n        }).then(response => {\n            // console.log(response.text());\n            const file = new Blob(response.text(), { type: 'application/pdf' });\n            const fileURL = URL.createObjectURL(file);\n            window.open(fileURL);\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"settings-container\">\n                <button className=\"btn btn-primary\" onClick={this.onClick}>PDF</button>\n            </div>\n        );\n    }\n}\n\nexport default Settings;"]},"metadata":{},"sourceType":"module"}