{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/logbook/PDFTableButton.js\";\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport jsPDF from 'jspdf';\nimport divelogLogo from '../../img/logo.png';\nimport ConvertTime from '../../util/ConvertTime';\nimport $ from 'jquery';\nimport '../../css/PdfLogbook.css';\n\nclass PDFTableButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.specialElementHandlers = {\n      '#hubert': function (element, renderer) {\n        return true;\n      },\n      '.controls': function (element, renderer) {\n        return true;\n      }\n    };\n    this.state = {\n      partnerName: '',\n      partnerSurname: '',\n      marker: {},\n      entryTime: '',\n      exitTime: '',\n      averageDepth: 0.0,\n      maxDepth: 0.0,\n      visibility: 0.0,\n      waterTemperature: 0.0,\n      airTemperature: 0.0,\n      cylinderCapacity: '',\n      divingSuit: 'NONE',\n      waterType: 'NONE',\n      waterEntryType: 'NONE',\n      ballast: 0.0,\n      glovesType: 'NONE',\n      divingType: 'NONE',\n      comment: ''\n    };\n    this.ConvertTime = new ConvertTime();\n    this.onClick = this.onClick.bind(this);\n  }\n\n  renderDataForHTML() {\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Hubert Struminski\");\n  }\n\n  onClick(e) {\n    e.preventDefault();\n    const id = this.props.id;\n    let jwtToken = localStorage.getItem(\"JwtToken\");\n    fetch(\"/pdf/logbook/\".concat(id, \"/\").concat(jwtToken), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'content-type': 'application/json'\n      }\n    }).then(response => response.json()).then(jsonData => {\n      let time = this.ConvertTime.convertTime(jsonData.entryTime, jsonData.exitTime, true);\n      const markerElement = {\n        id: jsonData.marker.id,\n        name: jsonData.marker.name,\n        latitude: jsonData.marker.latitude,\n        longitude: jsonData.marker.longitude\n      };\n      this.setState({\n        partnerName: jsonData.partnerName,\n        partnerSurname: jsonData.partnerSurname,\n        marker: markerElement,\n        entryTime: time[0],\n        exitTime: time[1],\n        averageDepth: jsonData.averageDepth,\n        maxDepth: jsonData.maxDepth,\n        visibility: jsonData.visibility,\n        waterTemperature: jsonData.waterTemperature,\n        airTemperature: jsonData.airTemperature,\n        cylinderCapacity: jsonData.cylinderCapacity,\n        divingSuit: jsonData.divingSuit,\n        waterType: jsonData.waterType,\n        waterEntryType: jsonData.waterEntryType,\n        ballast: jsonData.ballast,\n        glovesType: jsonData.glovesType,\n        divingType: jsonData.divingType,\n        comment: jsonData.comment\n      }, () => {\n        let doc = new jsPDF({\n          orientation: \"p\",\n          unit: \"mm\"\n        });\n        let img = new Image();\n        img.src = divelogLogo;\n        var output = this.renderDataForHTML(); // doc.text(`ImiÄ™ partnera:  ${this.state.partnerName}`, 10, 10);\n        // doc.text(`Nazwisko partnera: ${this.state.partnerSurname}`, 10, 10);\n        // doc.addImage(img, 'PNG', 15, 40, 100, 100);\n\n        doc.fromHTML($(\".pdf-logbook-container\").html(), 20, 20, {\n          'width': 500,\n          'elementHandlers': this.specialElementHandlers\n        });\n        doc.save(\"pdf\");\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"PDF\"), React.createElement(\"div\", {\n      className: \"pdf-logbook-container\",\n      style: {\n        display: 'none'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pdf-logbook-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Hubert Struminski\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"h5\", {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Imi\\u0119 partnera: \", this.state.partnerName), React.createElement(\"p\", {\n      style: {\n        color: 'blue'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Comment: \", this.state.comment))));\n  }\n\n}\n\nexport default withTranslation(\"common\")(PDFTableButton);","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/logbook/PDFTableButton.js"],"names":["React","withTranslation","jsPDF","divelogLogo","ConvertTime","$","PDFTableButton","Component","constructor","props","specialElementHandlers","element","renderer","state","partnerName","partnerSurname","marker","entryTime","exitTime","averageDepth","maxDepth","visibility","waterTemperature","airTemperature","cylinderCapacity","divingSuit","waterType","waterEntryType","ballast","glovesType","divingType","comment","onClick","bind","renderDataForHTML","e","preventDefault","id","jwtToken","localStorage","getItem","fetch","method","headers","then","response","json","jsonData","time","convertTime","markerElement","name","latitude","longitude","setState","doc","orientation","unit","img","Image","src","output","fromHTML","html","save","render","display","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport jsPDF from 'jspdf';\nimport divelogLogo from '../../img/logo.png';\nimport ConvertTime from '../../util/ConvertTime';\nimport $ from 'jquery';\nimport '../../css/PdfLogbook.css';\n\nclass PDFTableButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            partnerName: '',\n            partnerSurname: '',\n            marker: {},\n            entryTime: '',\n            exitTime: '',\n            averageDepth: 0.0,\n            maxDepth: 0.0,\n            visibility: 0.0,\n            waterTemperature: 0.0,\n            airTemperature: 0.0,\n            cylinderCapacity: '',\n            divingSuit: 'NONE',\n            waterType: 'NONE',\n            waterEntryType: 'NONE',\n            ballast: 0.0,\n            glovesType: 'NONE',\n            divingType: 'NONE',\n            comment: ''\n        }\n        this.ConvertTime = new ConvertTime();\n        this.onClick = this.onClick.bind(this);\n    }\n\n    renderDataForHTML() {\n        return (\n            <h1>Hubert Struminski</h1>\n        );\n    }\n\n    onClick(e) {\n        e.preventDefault();\n\n        const id = this.props.id;\n        let jwtToken = localStorage.getItem(\"JwtToken\");\n\n        fetch(`/pdf/logbook/${id}/${jwtToken}`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'content-type': 'application/json'\n            }\n        })\n        .then(response => response.json())\n        .then(jsonData => {\n            let time = this.ConvertTime.convertTime(jsonData.entryTime, jsonData.exitTime, true);\n\n            const markerElement = {\n                id: jsonData.marker.id,\n                name: jsonData.marker.name,\n                latitude: jsonData.marker.latitude,\n                longitude: jsonData.marker.longitude\n            }\n\n            this.setState({\n                partnerName: jsonData.partnerName,\n                partnerSurname: jsonData.partnerSurname,\n                marker: markerElement,\n                entryTime: time[0],\n                exitTime: time[1],\n                averageDepth: jsonData.averageDepth,\n                maxDepth: jsonData.maxDepth,\n                visibility: jsonData.visibility,\n                waterTemperature: jsonData.waterTemperature,\n                airTemperature: jsonData.airTemperature,\n                cylinderCapacity: jsonData.cylinderCapacity,\n                divingSuit: jsonData.divingSuit,\n                waterType: jsonData.waterType,\n                waterEntryType: jsonData.waterEntryType,\n                ballast: jsonData.ballast,\n                glovesType: jsonData.glovesType,\n                divingType: jsonData.divingType,\n                comment: jsonData.comment\n            }, () => {\n                let doc = new jsPDF({\n                    orientation: \"p\",\n                    unit: \"mm\",\n                });\n                let img = new Image();\n                img.src = divelogLogo;\n        \n                var output = this.renderDataForHTML();\n                // doc.text(`ImiÄ™ partnera:  ${this.state.partnerName}`, 10, 10);\n                // doc.text(`Nazwisko partnera: ${this.state.partnerSurname}`, 10, 10);\n                // doc.addImage(img, 'PNG', 15, 40, 100, 100);\n                doc.fromHTML($(\".pdf-logbook-container\").html(), 20, 20, { 'width': 500, 'elementHandlers': this.specialElementHandlers });\n        \n                doc.save(\"pdf\");\n            });\n        }); \n    }\n\n    specialElementHandlers = {\n        '#hubert': function (element, renderer) {\n            return true;\n        },\n        '.controls': function (element, renderer) {\n            return true;\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <button className=\"btn btn-primary\"\n                    onClick={this.onClick}\n                >\n                    PDF\n                </button>\n\n                <div className=\"pdf-logbook-container\" style={{ display: 'none'}}>\n                    <div className=\"pdf-logbook-box\">\n                        Hubert Struminski  \n                        <br />\n                        <br />\n                        <h5 style={{ color: 'red'}}>ImiÄ™ partnera: {this.state.partnerName}</h5>\n                        <p style={{ color: 'blue'}}>Comment: {this.state.comment}</p>    \n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation(\"common\")(PDFTableButton);"]},"metadata":{},"sourceType":"module"}