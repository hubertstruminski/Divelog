{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/Layout/Header.js\";\nimport { fakeAuth } from \"../../util/fakeAuth\";\nimport HeaderIn from \"./HeaderIn\";\nimport HeaderOut from \"./HeaderOut\";\nimport { withRouter } from 'react-router-dom';\nimport React from 'react';\nimport AuthService from \"../../util/AuthService\";\nimport withAuth from \"../../util/withAuth\";\nconst Auth = new AuthService();\nconst Header = withRouter(withAuth(({\n  history\n}) => Auth.loggedIn() ? React.createElement(HeaderIn, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}) : React.createElement(HeaderOut, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}))); // class Header extends React.Component {\n//     constructor(props) {\n//         super(props);\n//     }\n//     render() {\n//         const Auth = new AuthService();\n//         let isLoggedIn = this.props.isLoggedIn;\n//         if(this.props.isLoggedIn) {\n//             return <HeaderIn />\n//         } else {\n//             return <HeaderOut />\n//         }\n//     }\n// }\n\nexport default withRouter(withAuth(Header));","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/Layout/Header.js"],"names":["fakeAuth","HeaderIn","HeaderOut","withRouter","React","AuthService","withAuth","Auth","Header","history","loggedIn"],"mappings":";AAAA,SAASA,QAAT,QAAyB,qBAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,MAAMC,IAAI,GAAG,IAAIF,WAAJ,EAAb;AAEA,MAAMG,MAAM,GAAGL,UAAU,CAACG,QAAQ,CAAC,CAAC;AAAEG,EAAAA;AAAF,CAAD,KAC/BF,IAAI,CAACG,QAAL,KACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,GAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAJ0B,CAAT,CAAzB,C,CAQA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeP,UAAU,CAACG,QAAQ,CAACE,MAAD,CAAT,CAAzB","sourcesContent":["import { fakeAuth } from \"../../util/fakeAuth\";\nimport HeaderIn from \"./HeaderIn\";\nimport HeaderOut from \"./HeaderOut\";\nimport { withRouter } from 'react-router-dom';\nimport React from 'react';\nimport AuthService from \"../../util/AuthService\";\nimport withAuth from \"../../util/withAuth\";\nconst Auth = new AuthService();\n\nconst Header = withRouter(withAuth(({ history }) => (\n    Auth.loggedIn() ? (\n        <HeaderIn />\n    ) : (\n        <HeaderOut />\n    )\n)));\n\n// class Header extends React.Component {\n//     constructor(props) {\n//         super(props);\n//     }\n\n//     render() {\n//         const Auth = new AuthService();\n//         let isLoggedIn = this.props.isLoggedIn;\n\n//         if(this.props.isLoggedIn) {\n//             return <HeaderIn />\n//         } else {\n//             return <HeaderOut />\n//         }\n//     }\n// }\n\nexport default withRouter(withAuth(Header));"]},"metadata":{},"sourceType":"module"}