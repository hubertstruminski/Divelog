{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/forum/Post.js\";\nimport React from 'react';\nimport '../../css/TopicWithPosts.css';\nimport '../../css/AddPosts.css';\nimport ReactPlayer from 'react-player';\nimport swal from 'sweetalert';\nimport $ from 'jquery';\nimport ReactFilestack from 'filestack-react';\nimport axios from 'axios';\nimport DeleteAttachmentButton from './DeleteAttachmentButton';\nimport { withRouter } from 'react-router';\nimport { withTranslation } from 'react-i18next';\n\nclass Post extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      isOwner: false,\n      isUpdating: false,\n      successFiles: [],\n      successNameFiles: [],\n      isSuccessUploaded: false,\n      isFailureUploaded: false,\n      failureNameFiles: [],\n      isError: false,\n      wasUpdated: false\n    };\n    this.addImages = this.addImages.bind(this);\n    this.addVideos = this.addVideos.bind(this);\n    this.onDeleteClick = this.onDeleteClick.bind(this);\n    this.onEditClick = this.onEditClick.bind(this);\n    this.responseFilestack = this.responseFilestack.bind(this);\n    this.onErrorFilestack = this.onErrorFilestack.bind(this);\n    this.renderDeleteButtonsForAttachments = this.renderDeleteButtonsForAttachments.bind(this);\n  }\n\n  componentDidMount() {\n    let jwtToken = localStorage.getItem(\"JwtToken\");\n    fetch(\"/getuserdata/\".concat(jwtToken), {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(response => response.json()).then(jsonData => {\n      this.setState({\n        email: jsonData.email\n      }, () => {\n        if (this.props.user.email === this.state.email) {\n          this.setState({\n            isOwner: true\n          });\n        }\n      });\n    });\n  }\n\n  addImages() {\n    let isUpdating = this.state.isUpdating;\n    return this.props.files.map((file, index) => {\n      if (file.type.includes('image')) {\n        return React.createElement(\"div\", {\n          id: \"attachment\".concat(file.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }), React.createElement(\"img\", {\n          src: file.url,\n          alt: file.name,\n          className: \"attachment-images\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }), !isUpdating && file.name, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }));\n      }\n    });\n  }\n\n  addVideos() {\n    let isUpdating = this.state.isUpdating;\n    return this.props.files.map((file, index) => {\n      if (file.type.includes('video')) {\n        return React.createElement(\"div\", {\n          id: \"attachment\".concat(file.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }), React.createElement(ReactPlayer, {\n          url: file.url,\n          playing: true,\n          controls: \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }), !isUpdating && file.name, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }));\n      }\n    });\n  }\n\n  renderDeleteButtonsForAttachments() {\n    return this.props.files.map((file, index) => {\n      return React.createElement(DeleteAttachmentButton, {\n        key: index,\n        id: file.id,\n        name: file.name,\n        type: file.type,\n        counter: this.props.counter,\n        postId: this.props.id,\n        setDeletedFileForPost: this.props.setDeletedFileForPost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      });\n    });\n  }\n\n  onDeleteClick() {\n    let postId = this.props.id;\n    let jwtToken = localStorage.getItem(\"JwtToken\");\n    fetch(\"/delete/post/\".concat(postId, \"/\").concat(jwtToken), {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'content-type': 'application/json'\n      }\n    }).then(response => {\n      if (response.status !== 200) {\n        swal(\"Error\", \"Something goes wrong.\", \"error\");\n      } else {\n        this.props.fetchTopicAndPosts();\n        swal(\"Success\", \"Post has been removed successfully.\", \"success\");\n      }\n    });\n  }\n\n  onEditClick(e) {\n    e.preventDefault();\n\n    if (!this.state.isUpdating) {\n      this.setState({\n        isUpdating: true\n      }, () => {\n        let counter = this.props.counter;\n        let message = $(\".post-message:eq(\".concat(counter, \")\")).html();\n        $(\".post-message:eq(\".concat(counter, \")\")).html(\"\").append($(\"<div></div>\").addClass(\"form-group edit-post-div\"));\n        $(\".post-message:eq(\".concat(counter, \") > .edit-post-div\")).append($(\"<textarea></textarea\").attr(\"rows\", \"7\").addClass(\"new-post-textarea edit-textarea\"));\n        $(\".post-buttons:eq(\".concat(counter, \")\")).append($(\"<button>Confirm</button>\").attr(\"id\", \"btnConfirm\").addClass(\"btn btn-success btn-success-float\"));\n        $(\".post-buttons\").not(\".post-buttons:eq(\".concat(counter, \")\")).css({\n          \"display\": \"none\"\n        });\n        $(\".post-message:eq(\".concat(counter, \") > .edit-post-div > .edit-textarea\")).val(message);\n        $(\"#btnConfirm\").click(() => {\n          if ($(\".edit-textarea\").val().length < 5) {\n            $(\".post-message:eq(\".concat(counter, \")\")).append($(\"<div></div>\").addClass(\"alert alert-danger\").text(\"Message length must be minimum 5 characters\"));\n          } else {\n            let postId = this.props.id;\n            let jwtToken = localStorage.getItem(\"JwtToken\");\n            let message = $(\".edit-textarea\").val();\n            let files = this.state.successFiles;\n            const updatedPost = {\n              message: message,\n              files: this.state.successFiles\n            };\n            axios({\n              method: 'PUT',\n              url: \"/post/\".concat(postId, \"/\").concat(jwtToken),\n              data: updatedPost,\n              headers: {\n                \"Accept\": \"application/json\",\n                \"Content-type\": \"application/json\"\n              }\n            }).then(response => {\n              if (response.status !== 200) {\n                swal(\"Error\", \"Something goes wrong.\", \"error\");\n              } else {\n                this.setState({\n                  isUpdating: false\n                }, () => {\n                  $(\".post-message:eq(\".concat(counter, \")\")).html(\"\");\n                  $(\".post-message:eq(\".concat(counter, \")\")).text(message);\n                  $(\".post-buttons\").css({\n                    \"display\": \"block\"\n                  });\n                  $(\".post-buttons:eq(\".concat(counter, \") > #btnConfirm\")).css({\n                    \"display\": \"none\"\n                  });\n                  this.props.fetchTopicAndPosts();\n                });\n              }\n            });\n          }\n        });\n      });\n    }\n  }\n\n  showSuccessUploadedFiles(isSuccessUploaded) {\n    if (isSuccessUploaded) {\n      return React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Success uploaded files:\", this.state.successNameFiles.map((name, index) => {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, name);\n      }));\n    }\n\n    return null;\n  }\n\n  showFailureUploadedFiles(isFailureUploaded) {\n    if (isFailureUploaded) {\n      return React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Failure uploaded files:\", this.state.failureNameFiles.map((name, index) => {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, name);\n      }));\n    }\n\n    return null;\n  }\n\n  responseFilestack(response) {\n    response.filesUploaded.map((file, index) => {\n      const element = {\n        objectId: file.uploadId,\n        url: file.url,\n        size: file.size,\n        name: file.originalFile.name,\n        type: file.originalFile.type\n      };\n      this.setState({\n        successFiles: this.state.successFiles.concat(element),\n        successNameFiles: this.state.successNameFiles.concat(file.originalFile.name),\n        isSuccessUploaded: true\n      });\n    });\n    response.filesFailed.map((file, index) => {\n      this.setState({\n        failureNameFiles: this.state.failureNameFiles.concat(file.originalFile.name),\n        isFailureUploaded: true\n      });\n    });\n  }\n\n  onErrorFilestack() {\n    swal(\"Error\", \"Something goes wrong.\", \"error\");\n  }\n\n  render() {\n    let isOwner = this.state.isOwner;\n    let isUpdating = this.state.isUpdating;\n    let updatedAt = 'post updated at ' + this.props.updatedAt;\n    updatedAt = updatedAt.substr(0, updatedAt.length - 1);\n    return React.createElement(\"div\", {\n      className: \"main-post-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main-post-container post-margin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main-post-grid-one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main-post-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, this.props.createdAt), React.createElement(\"div\", {\n      className: \"main-post-avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.user.pictureUrl,\n      alt: \"Avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"main-post-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, this.props.user.name)), React.createElement(\"div\", {\n      className: \"main-post-grid-two\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"post-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, this.props.message), React.createElement(\"div\", {\n      className: \"main-post-attachments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, this.addImages(), this.addVideos()), React.createElement(\"div\", {\n      className: \"post-buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, isOwner && !isUpdating && React.createElement(React.Fragment, null, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      onClick: this.onEditClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, \"EDIT\"), React.createElement(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: this.onDeleteClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }, \"DELETE\")), this.props.wasUpdatedPost && React.createElement(\"div\", {\n      className: \"post-updated-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, updatedAt), isUpdating && this.renderDeleteButtonsForAttachments(), isUpdating && React.createElement(\"div\", {\n      className: \"form-group edit-post-upload-files-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, \"Upload data\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }), React.createElement(ReactFilestack, {\n      apikey: \"Abn3RoxlVQeWNtMpk2Gflz\",\n      onSuccess: this.responseFilestack,\n      onError: this.onErrorFilestack,\n      componentDisplayMode: {\n        type: 'button',\n        customText: 'Upload files',\n        customClass: 'btn btn-warning edit-post-upload-file'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        clear: \"both\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }), this.showSuccessUploadedFiles(this.state.isSuccessUploaded), this.showFailureUploadedFiles(this.state.isFailureUploaded))))));\n  }\n\n}\n\nexport default withTranslation(\"common\")(Post);","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/forum/Post.js"],"names":["React","ReactPlayer","swal","$","ReactFilestack","axios","DeleteAttachmentButton","withRouter","withTranslation","Post","Component","constructor","props","state","email","isOwner","isUpdating","successFiles","successNameFiles","isSuccessUploaded","isFailureUploaded","failureNameFiles","isError","wasUpdated","addImages","bind","addVideos","onDeleteClick","onEditClick","responseFilestack","onErrorFilestack","renderDeleteButtonsForAttachments","componentDidMount","jwtToken","localStorage","getItem","fetch","method","headers","then","response","json","jsonData","setState","user","files","map","file","index","type","includes","id","url","name","counter","setDeletedFileForPost","postId","status","fetchTopicAndPosts","e","preventDefault","message","html","append","addClass","attr","not","css","val","click","length","text","updatedPost","data","showSuccessUploadedFiles","showFailureUploadedFiles","filesUploaded","element","objectId","uploadId","size","originalFile","concat","filesFailed","render","updatedAt","substr","createdAt","pictureUrl","wasUpdatedPost","customText","customClass","clear"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../css/TopicWithPosts.css';\nimport '../../css/AddPosts.css';\nimport ReactPlayer from 'react-player';\nimport swal from 'sweetalert';\nimport $ from 'jquery';\nimport ReactFilestack from 'filestack-react';\nimport axios from 'axios';\nimport DeleteAttachmentButton from './DeleteAttachmentButton';\nimport { withRouter } from 'react-router';\nimport { withTranslation } from 'react-i18next';\n\nclass Post extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            isOwner: false,\n            isUpdating: false,\n            successFiles: [],\n            successNameFiles: [],\n            isSuccessUploaded: false,\n            isFailureUploaded: false,\n            failureNameFiles: [],\n            isError: false,\n            wasUpdated: false\n        }\n        this.addImages = this.addImages.bind(this);\n        this.addVideos = this.addVideos.bind(this);\n        this.onDeleteClick = this.onDeleteClick.bind(this);\n        this.onEditClick = this.onEditClick.bind(this);\n        this.responseFilestack = this.responseFilestack.bind(this);\n        this.onErrorFilestack = this.onErrorFilestack.bind(this);\n        this.renderDeleteButtonsForAttachments = this.renderDeleteButtonsForAttachments.bind(this);\n    }\n\n    componentDidMount() {\n        let jwtToken = localStorage.getItem(\"JwtToken\");\n\n        fetch(`/getuserdata/${jwtToken}`, {\n            method: 'GET',\n            headers: {\n              'content-type': 'application/json'\n            }\n        })\n        .then(response => response.json())\n        .then(jsonData => {\n            this.setState({ email: jsonData.email }, () => {\n                if(this.props.user.email === this.state.email) {\n                    this.setState({ isOwner: true });\n                }\n            });\n        }); \n    }\n\n    addImages() {\n        let isUpdating = this.state.isUpdating;\n\n        return this.props.files.map((file, index) => {\n            if(file.type.includes('image')) {\n                return (\n                    <div id={`attachment${file.id}`}>\n                        <br />\n                        <img \n                            src={file.url} \n                            alt={file.name} \n                            className=\"attachment-images\"\n                        />\n                        <br />\n                        { !isUpdating && file.name }\n                        <br />\n                    </div>\n                );\n            }\n        });\n    }\n\n    addVideos() {\n        let isUpdating = this.state.isUpdating;\n\n        return this.props.files.map((file, index) => {\n            if(file.type.includes('video')) {\n                return (\n                    <div id={`attachment${file.id}`}>\n                        <br />\n                        <ReactPlayer \n                            url={file.url} \n                            playing\n                            controls=\"true\"\n                        />\n                        <br />\n                        { !isUpdating && file.name }\n                        <br />\n                    </div>\n                );\n            }\n        })\n    }\n\n    renderDeleteButtonsForAttachments() {\n        return this.props.files.map((file, index) => {\n            return (\n                <DeleteAttachmentButton\n                    key={index}\n                    id={file.id}\n                    name={file.name}\n                    type={file.type}\n                    counter={this.props.counter}\n                    postId={this.props.id}\n                    setDeletedFileForPost={this.props.setDeletedFileForPost}\n                />\n            );\n        });\n    }\n\n    onDeleteClick() {\n        let postId = this.props.id;\n        let jwtToken = localStorage.getItem(\"JwtToken\");\n\n        fetch(`/delete/post/${postId}/${jwtToken}`, {\n            method: 'DELETE',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'content-type': 'application/json'\n            }\n        }).then(response => {\n            if(response.status !== 200) {\n                swal(\"Error\", \"Something goes wrong.\", \"error\");\n            } else {\n                this.props.fetchTopicAndPosts();\n                swal(\"Success\", \"Post has been removed successfully.\", \"success\");\n            }\n        });\n    }\n\n    onEditClick(e) {\n        e.preventDefault();\n        if(!this.state.isUpdating) {\n            this.setState({ isUpdating: true }, () => {\n                let counter = this.props.counter;\n                let message = $(`.post-message:eq(${counter})`).html();\n\n                $(`.post-message:eq(${counter})`).html(\"\").append($(\"<div></div>\").addClass(\"form-group edit-post-div\"))\n                $(`.post-message:eq(${counter}) > .edit-post-div`).append($(\"<textarea></textarea\").attr(\"rows\", \"7\").addClass(\"new-post-textarea edit-textarea\"));\n                $(`.post-buttons:eq(${counter})`).append($(\"<button>Confirm</button>\").attr(\"id\", \"btnConfirm\").addClass(\"btn btn-success btn-success-float\"));\n        \n                $(\".post-buttons\").not(`.post-buttons:eq(${counter})`).css({ \"display\": \"none\"});\n\n                $(`.post-message:eq(${counter}) > .edit-post-div > .edit-textarea`).val(message);\n\n                $(\"#btnConfirm\").click(() => {\n                    if($(\".edit-textarea\").val().length < 5) {\n                        $(`.post-message:eq(${counter})`).append(\n                            $(\"<div></div>\").addClass(\"alert alert-danger\").text(\"Message length must be minimum 5 characters\")\n                        );\n                    } else {\n                        let postId = this.props.id;\n                        let jwtToken = localStorage.getItem(\"JwtToken\");\n\n                        let message = $(\".edit-textarea\").val();\n                        let files = this.state.successFiles;\n\n                        const updatedPost = {\n                            message: message,\n                            files: this.state.successFiles\n                        }\n                        \n                        axios({\n                            method: 'PUT',\n                            url: `/post/${postId}/${jwtToken}`,\n                            data: updatedPost,\n                            headers: {\n                                \"Accept\": \"application/json\",\n                                \"Content-type\": \"application/json\"\n                            }\n                        }).then(response => {\n                            if(response.status !== 200) {\n                                swal(\"Error\", \"Something goes wrong.\", \"error\");\n                            } else {\n                                this.setState({ isUpdating: false }, () => {\n                                    $(`.post-message:eq(${counter})`).html(\"\");\n                                    $(`.post-message:eq(${counter})`).text(message);\n                                    $(\".post-buttons\").css({ \"display\": \"block\"}); \n                                    $(`.post-buttons:eq(${counter}) > #btnConfirm`).css({ \"display\": \"none\" });\n                                    this.props.fetchTopicAndPosts();\n                                });\n                            }\n                        });\n                    }\n                });\n            });\n        }\n    }\n\n    showSuccessUploadedFiles(isSuccessUploaded) {\n        if(isSuccessUploaded) {\n            return (\n                <div className=\"alert alert-warning\">\n                    Success uploaded files:\n                    { this.state.successNameFiles.map((name, index) => {\n                        return <p>{name}</p>\n                    })}\n                </div>\n            );\n        }\n        return null;\n    }\n\n    showFailureUploadedFiles(isFailureUploaded) {\n        if(isFailureUploaded) {\n            return (\n                <div className=\"alert alert-danger\">\n                    Failure uploaded files:\n                    { this.state.failureNameFiles.map((name, index) => {\n                        return <p>{name}</p>\n                    })}\n                </div>\n            );\n        }\n        return null;\n    }\n\n    responseFilestack(response) {\n        response.filesUploaded.map((file, index) => {\n            const element = {\n                objectId: file.uploadId,\n                url: file.url,\n                size: file.size,\n                name: file.originalFile.name,\n                type: file.originalFile.type\n            };\n            this.setState({ \n                successFiles: this.state.successFiles.concat(element),\n                successNameFiles: this.state.successNameFiles.concat(file.originalFile.name),\n                isSuccessUploaded: true\n            });\n        });\n\n        response.filesFailed.map((file, index) => {\n            this.setState({ \n                failureNameFiles: this.state.failureNameFiles.concat(file.originalFile.name),\n                isFailureUploaded: true \n            });\n        });\n    }\n\n    onErrorFilestack() {\n        swal(\"Error\", \"Something goes wrong.\", \"error\");\n    }\n\n    render() {\n        let isOwner = this.state.isOwner;\n        let isUpdating = this.state.isUpdating;\n\n        let updatedAt = 'post updated at ' + this.props.updatedAt;\n        updatedAt = updatedAt.substr(0, updatedAt.length - 1);\n\n        return (\n            <div className=\"main-post-center\">\n                <div className=\"main-post-container post-margin\">\n                    <div className=\"main-post-grid-one\">\n                        <div className=\"main-post-header\">\n                            { this.props.createdAt }\n                        </div>\n                        <div className=\"main-post-avatar\">\n                            <img src={this.props.user.pictureUrl} alt=\"Avatar\" />\n                        </div>\n                        <div className=\"main-post-footer\">\n                            { this.props.user.name }\n                        </div>\n                    </div>\n                    <div className=\"main-post-grid-two\">\n                        <div className=\"post-message\">\n                            { this.props.message }\n                        </div>  \n                        <div className=\"main-post-attachments\">\n                            { this.addImages() }\n                            { this.addVideos() }\n                        </div>\n                \n                        <div className=\"post-buttons\">\n                            { isOwner && !isUpdating &&\n                                <>\n                                    <hr />\n                                    <button \n                                        className=\"btn btn-warning\"\n                                        onClick={this.onEditClick}\n                                    >\n                                        EDIT\n                                    </button>\n                                \n                                    <button \n                                        className=\"btn btn-danger\"\n                                        onClick={this.onDeleteClick}\n                                    >\n                                        DELETE\n                                    </button>\n                                </>\n                            }\n                            { this.props.wasUpdatedPost && <div className=\"post-updated-box\">{updatedAt}</div> }\n                            { isUpdating && this.renderDeleteButtonsForAttachments() }\n                            {\n                                isUpdating && (\n                                <div className=\"form-group edit-post-upload-files-div\">\n                                    <label>Upload data</label>\n                                    <br />\n                                    <ReactFilestack\n                                        apikey=\"Abn3RoxlVQeWNtMpk2Gflz\"\n                                        onSuccess={this.responseFilestack}\n                                        onError={this.onErrorFilestack}\n                                        componentDisplayMode={{\n                                            type: 'button',\n                                            customText: 'Upload files',\n                                            customClass: 'btn btn-warning edit-post-upload-file'\n                                        }}\n                                    />\n                                    <div style={{ clear: \"both\" }}></div>\n                                    { this.showSuccessUploadedFiles(this.state.isSuccessUploaded) }\n                                    { this.showFailureUploadedFiles(this.state.isFailureUploaded) }\n                                </div>\n                                )\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation(\"common\")(Post);"]},"metadata":{},"sourceType":"module"}