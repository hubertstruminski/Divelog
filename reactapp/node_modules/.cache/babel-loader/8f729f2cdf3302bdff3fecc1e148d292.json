{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/forum/Forum.js\";\nimport React from 'react';\nimport '../../css/Forum.css';\nimport poland from '../../img/flags/poland.jpg';\nimport germany from '../../img/flags/germany.png';\nimport england from '../../img/flags/england.jpg';\nimport $ from 'jquery';\nimport { Link } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport Topic from './Topic';\nimport ConvertTime from '../../util/ConvertTime';\n\nclass Forum extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedForum: '',\n      isEnglishForum: false,\n      isPolishForum: false,\n      isGermanyForum: false,\n      englishTopics: [],\n      polishTopics: [],\n      germanyTopics: []\n    };\n    this.ConvertTime = new ConvertTime();\n    this.onFlagClick = this.onFlagClick.bind(this);\n    this.onCreateTopicClick = this.onCreateTopicClick.bind(this);\n    this.generatePolishTopics = this.generatePolishTopics.bind(this);\n    this.onTopicClick = this.onTopicClick.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"/get/topics/all\", {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'content-type': 'application/json'\n      }\n    }).then(response => response.json()).then(jsonData => {\n      jsonData.map((topic, index) => {\n        if (topic.languageForum.forumType === 'polish') {\n          let time = this.ConvertTime.convertTime(topic.createdAt, null, false);\n          const element = {\n            id: topic.id,\n            likes: topic.likes,\n            title: topic.title,\n            createdAt: time[0],\n            owner: topic.user.name\n          };\n          this.setState({\n            polishTopics: this.state.polishTopics.concat(element)\n          });\n        }\n\n        if (topic.languageForum.forumType === 'english') {\n          let time = this.ConvertTime.convertTime(topic.createdAt, null, false);\n          const element = {\n            id: topic.id,\n            likes: topic.likes,\n            title: topic.title,\n            createdAt: time[0],\n            owner: topic.user.name\n          };\n          this.setState({\n            englishTopics: this.state.englishTopics.concat(element)\n          });\n        }\n\n        if (topic.languageForum.forumType === 'germany') {\n          let time = this.ConvertTime.convertTime(topic.createdAt, null, false);\n          const element = {\n            id: topic.id,\n            likes: topic.likes,\n            title: topic.title,\n            createdAt: time[0],\n            owner: topic.user.name\n          };\n          this.setState({\n            germanyTopics: this.state.germanyTopics.concat(element)\n          });\n        }\n      });\n    });\n  }\n\n  onFlagClick(e) {\n    e.preventDefault();\n    $(\"#polandFlag\").click(() => {\n      this.setState({\n        selectedForum: 'polish',\n        isPolishForum: true\n      }, () => {\n        $(\"#polandFlag\").addClass(\"isActiveFlag\");\n        $(\"#germanyFlag\").removeClass(\"isActiveFlag\");\n        $(\"#englandFlag\").removeClass(\"isActiveFlag\");\n      });\n    });\n    $(\"#germanyFlag\").click(() => {\n      this.setState({\n        selectedForum: 'germany',\n        isGermanyForum: true\n      }, () => {\n        $(\"#germanyFlag\").addClass(\"isActiveFlag\");\n        $(\"#polandFlag\").removeClass(\"isActiveFlag\");\n        $(\"#englandFlag\").removeClass(\"isActiveFlag\");\n      });\n    });\n    $(\"#englandFlag\").click(() => {\n      this.setState({\n        selectedForum: 'english',\n        isEnglishForum: true\n      }, () => {\n        $(\"#englandFlag\").addClass(\"isActiveFlag\");\n        $(\"#germanyFlag\").removeClass(\"isActiveFlag\");\n        $(\"#polandFlag\").removeClass(\"isActiveFlag\");\n      });\n    });\n  }\n\n  onCreateTopicClick(e) {\n    if (this.state.selectedForum === '') {\n      e.preventDefault();\n      swal(\"Warning\", \"You have to select language for forum\", \"warning\");\n    }\n  }\n\n  generatePolishTopics() {\n    return this.state.polishTopics.map((topic, index) => {\n      return React.createElement(Topic, {\n        id: topic.id,\n        owner: topic.owner,\n        likes: topic.likes,\n        title: topic.title,\n        createdAt: topic.createdAt,\n        onClick: this.onTopicClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      });\n    });\n  }\n\n  onTopicClick(e) {\n    e.preventDefault();\n    let id = this.props.id;\n  }\n\n  render() {\n    let isPolishForum = this.state.isPolishForum;\n    let isGermanyForum = this.state.isGermanyForum;\n    let isEnglishForum = this.state.isEnglishForum;\n    return React.createElement(\"div\", {\n      className: \"forum-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"forum-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Select forum\"), React.createElement(\"div\", {\n      className: \"language-forum-box language-forum-box-center language-shadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"flag-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"polandFlag\",\n      src: poland,\n      alt: \"Polish flag\",\n      onClick: this.onFlagClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"flag-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"germanyFlag\",\n      src: germany,\n      alt: \"Germany flag\",\n      onClick: this.onFlagClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"flag-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      id: \"englandFlag\",\n      src: england,\n      alt: \"English flag\",\n      onClick: this.onFlagClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }))), React.createElement(Link, {\n      to: \"/create/topic/\".concat(this.state.selectedForum),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary btn-padding\",\n      onClick: this.onCreateTopicClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"CREATE TOPIC\")), React.createElement(\"div\", {\n      className: \"wrapper-forum-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"forum-topics-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, isPolishForum && this.generatePolishTopics()), React.createElement(\"div\", {\n      className: \"forum-top-topics\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Forum;","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/forum/Forum.js"],"names":["React","poland","germany","england","$","Link","swal","Topic","ConvertTime","Forum","Component","constructor","props","state","selectedForum","isEnglishForum","isPolishForum","isGermanyForum","englishTopics","polishTopics","germanyTopics","onFlagClick","bind","onCreateTopicClick","generatePolishTopics","onTopicClick","componentDidMount","fetch","method","headers","then","response","json","jsonData","map","topic","index","languageForum","forumType","time","convertTime","createdAt","element","id","likes","title","owner","user","name","setState","concat","e","preventDefault","click","addClass","removeClass","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;AAEA,MAAMC,KAAN,SAAoBT,KAAK,CAACU,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,aAAa,EAAE,EADN;AAETC,MAAAA,cAAc,EAAE,KAFP;AAGTC,MAAAA,aAAa,EAAE,KAHN;AAITC,MAAAA,cAAc,EAAE,KAJP;AAKTC,MAAAA,aAAa,EAAE,EALN;AAMTC,MAAAA,YAAY,EAAE,EANL;AAOTC,MAAAA,aAAa,EAAE;AAPN,KAAb;AASA,SAAKZ,WAAL,GAAmB,IAAIA,WAAJ,EAAnB;AAEA,SAAKa,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBD,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKE,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BF,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKG,YAAL,GAAoB,KAAKA,YAAL,CAAkBH,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDI,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,iBAAD,EAAoB;AACrBC,MAAAA,MAAM,EAAE,KADa;AAErBC,MAAAA,OAAO,EAAE;AACL,kBAAU,mCADL;AAEL,wBAAgB;AAFX;AAFY,KAApB,CAAL,CAMGC,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANpB,EAOCF,IAPD,CAOMG,QAAQ,IAAI;AACdA,MAAAA,QAAQ,CAACC,GAAT,CAAa,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC3B,YAAGD,KAAK,CAACE,aAAN,CAAoBC,SAApB,KAAkC,QAArC,EAA+C;AAC3C,cAAIC,IAAI,GAAG,KAAK/B,WAAL,CAAiBgC,WAAjB,CAA6BL,KAAK,CAACM,SAAnC,EAA8C,IAA9C,EAAoD,KAApD,CAAX;AAEA,gBAAMC,OAAO,GAAG;AACZC,YAAAA,EAAE,EAAER,KAAK,CAACQ,EADE;AAEZC,YAAAA,KAAK,EAAET,KAAK,CAACS,KAFD;AAGZC,YAAAA,KAAK,EAAEV,KAAK,CAACU,KAHD;AAIZJ,YAAAA,SAAS,EAAEF,IAAI,CAAC,CAAD,CAJH;AAKZO,YAAAA,KAAK,EAAEX,KAAK,CAACY,IAAN,CAAWC;AALN,WAAhB;AAOA,eAAKC,QAAL,CAAc;AAAE9B,YAAAA,YAAY,EAAE,KAAKN,KAAL,CAAWM,YAAX,CAAwB+B,MAAxB,CAA+BR,OAA/B;AAAhB,WAAd;AACH;;AAED,YAAGP,KAAK,CAACE,aAAN,CAAoBC,SAApB,KAAkC,SAArC,EAAgD;AAC5C,cAAIC,IAAI,GAAG,KAAK/B,WAAL,CAAiBgC,WAAjB,CAA6BL,KAAK,CAACM,SAAnC,EAA8C,IAA9C,EAAoD,KAApD,CAAX;AAEA,gBAAMC,OAAO,GAAG;AACZC,YAAAA,EAAE,EAAER,KAAK,CAACQ,EADE;AAEZC,YAAAA,KAAK,EAAET,KAAK,CAACS,KAFD;AAGZC,YAAAA,KAAK,EAAEV,KAAK,CAACU,KAHD;AAIZJ,YAAAA,SAAS,EAAEF,IAAI,CAAC,CAAD,CAJH;AAKZO,YAAAA,KAAK,EAAEX,KAAK,CAACY,IAAN,CAAWC;AALN,WAAhB;AAOA,eAAKC,QAAL,CAAc;AAAE/B,YAAAA,aAAa,EAAE,KAAKL,KAAL,CAAWK,aAAX,CAAyBgC,MAAzB,CAAgCR,OAAhC;AAAjB,WAAd;AACH;;AAED,YAAGP,KAAK,CAACE,aAAN,CAAoBC,SAApB,KAAkC,SAArC,EAAgD;AAC5C,cAAIC,IAAI,GAAG,KAAK/B,WAAL,CAAiBgC,WAAjB,CAA6BL,KAAK,CAACM,SAAnC,EAA8C,IAA9C,EAAoD,KAApD,CAAX;AAEA,gBAAMC,OAAO,GAAG;AACZC,YAAAA,EAAE,EAAER,KAAK,CAACQ,EADE;AAEZC,YAAAA,KAAK,EAAET,KAAK,CAACS,KAFD;AAGZC,YAAAA,KAAK,EAAEV,KAAK,CAACU,KAHD;AAIZJ,YAAAA,SAAS,EAAEF,IAAI,CAAC,CAAD,CAJH;AAKZO,YAAAA,KAAK,EAAEX,KAAK,CAACY,IAAN,CAAWC;AALN,WAAhB;AAOA,eAAKC,QAAL,CAAc;AAAE7B,YAAAA,aAAa,EAAE,KAAKP,KAAL,CAAWO,aAAX,CAAyB8B,MAAzB,CAAgCR,OAAhC;AAAjB,WAAd;AACH;AACJ,OAvCD;AAwCH,KAhDD;AAiDH;;AAEDrB,EAAAA,WAAW,CAAC8B,CAAD,EAAI;AACXA,IAAAA,CAAC,CAACC,cAAF;AAEAhD,IAAAA,CAAC,CAAC,aAAD,CAAD,CAAiBiD,KAAjB,CAAuB,MAAM;AACzB,WAAKJ,QAAL,CAAc;AACVnC,QAAAA,aAAa,EAAE,QADL;AAEVE,QAAAA,aAAa,EAAE;AAFL,OAAd,EAGG,MAAM;AACLZ,QAAAA,CAAC,CAAC,aAAD,CAAD,CAAiBkD,QAAjB,CAA0B,cAA1B;AACAlD,QAAAA,CAAC,CAAC,cAAD,CAAD,CAAkBmD,WAAlB,CAA8B,cAA9B;AACAnD,QAAAA,CAAC,CAAC,cAAD,CAAD,CAAkBmD,WAAlB,CAA8B,cAA9B;AACH,OAPD;AAQH,KATD;AAWAnD,IAAAA,CAAC,CAAC,cAAD,CAAD,CAAkBiD,KAAlB,CAAwB,MAAM;AAC1B,WAAKJ,QAAL,CAAc;AACVnC,QAAAA,aAAa,EAAE,SADL;AAEVG,QAAAA,cAAc,EAAE;AAFN,OAAd,EAGG,MAAM;AACLb,QAAAA,CAAC,CAAC,cAAD,CAAD,CAAkBkD,QAAlB,CAA2B,cAA3B;AACAlD,QAAAA,CAAC,CAAC,aAAD,CAAD,CAAiBmD,WAAjB,CAA6B,cAA7B;AACAnD,QAAAA,CAAC,CAAC,cAAD,CAAD,CAAkBmD,WAAlB,CAA8B,cAA9B;AACH,OAPD;AAQH,KATD;AAWAnD,IAAAA,CAAC,CAAC,cAAD,CAAD,CAAkBiD,KAAlB,CAAwB,MAAM;AAC1B,WAAKJ,QAAL,CAAc;AACVnC,QAAAA,aAAa,EAAE,SADL;AAEVC,QAAAA,cAAc,EAAE;AAFN,OAAd,EAGG,MAAM;AACLX,QAAAA,CAAC,CAAC,cAAD,CAAD,CAAkBkD,QAAlB,CAA2B,cAA3B;AACAlD,QAAAA,CAAC,CAAC,cAAD,CAAD,CAAkBmD,WAAlB,CAA8B,cAA9B;AACAnD,QAAAA,CAAC,CAAC,aAAD,CAAD,CAAiBmD,WAAjB,CAA6B,cAA7B;AACH,OAPD;AAQH,KATD;AAUH;;AAEDhC,EAAAA,kBAAkB,CAAC4B,CAAD,EAAI;AAClB,QAAG,KAAKtC,KAAL,CAAWC,aAAX,KAA6B,EAAhC,EAAoC;AAChCqC,MAAAA,CAAC,CAACC,cAAF;AACA9C,MAAAA,IAAI,CAAC,SAAD,EAAY,uCAAZ,EAAqD,SAArD,CAAJ;AACH;AACJ;;AAEDkB,EAAAA,oBAAoB,GAAG;AACnB,WAAO,KAAKX,KAAL,CAAWM,YAAX,CAAwBe,GAAxB,CAA4B,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAChD,aACG,oBAAC,KAAD;AACI,QAAA,EAAE,EAAED,KAAK,CAACQ,EADd;AAEI,QAAA,KAAK,EAAER,KAAK,CAACW,KAFjB;AAGI,QAAA,KAAK,EAAEX,KAAK,CAACS,KAHjB;AAII,QAAA,KAAK,EAAET,KAAK,CAACU,KAJjB;AAKI,QAAA,SAAS,EAAEV,KAAK,CAACM,SALrB;AAMI,QAAA,OAAO,EAAE,KAAKhB,YANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH;AAUJ,KAXM,CAAP;AAYH;;AAEDA,EAAAA,YAAY,CAAC0B,CAAD,EAAI;AACZA,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAIT,EAAE,GAAG,KAAK/B,KAAL,CAAW+B,EAApB;AACH;;AAEDa,EAAAA,MAAM,GAAG;AACL,QAAIxC,aAAa,GAAG,KAAKH,KAAL,CAAWG,aAA/B;AACA,QAAIC,cAAc,GAAG,KAAKJ,KAAL,CAAWI,cAAhC;AACA,QAAIF,cAAc,GAAG,KAAKF,KAAL,CAAWE,cAAhC;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAII;AAAK,MAAA,SAAS,EAAC,8DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,EAAE,EAAC,YADP;AAEI,MAAA,GAAG,EAAEd,MAFT;AAGI,MAAA,GAAG,EAAC,aAHR;AAII,MAAA,OAAO,EAAE,KAAKoB,WAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EASI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,EAAE,EAAC,aADP;AAEI,MAAA,GAAG,EAAEnB,OAFT;AAGI,MAAA,GAAG,EAAC,cAHR;AAII,MAAA,OAAO,EAAE,KAAKmB,WAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CATJ,EAiBI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,EAAE,EAAC,aADP;AAEI,MAAA,GAAG,EAAElB,OAFT;AAGI,MAAA,GAAG,EAAC,cAHR;AAII,MAAA,OAAO,EAAE,KAAKkB,WAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAjBJ,CAJJ,EA8BI,oBAAC,IAAD;AAAM,MAAA,EAAE,0BAAmB,KAAKR,KAAL,CAAWC,aAA9B,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,SAAS,EAAC,6BADd;AAEI,MAAA,OAAO,EAAE,KAAKS,kBAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CA9BJ,EAsCI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMP,aAAa,IAAI,KAAKQ,oBAAL,EADvB,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAtCJ,CADJ;AA+CH;;AA9L+B;;AAiMpC,eAAef,KAAf","sourcesContent":["import React from 'react';\nimport '../../css/Forum.css';\nimport poland from '../../img/flags/poland.jpg';\nimport germany from '../../img/flags/germany.png';\nimport england from '../../img/flags/england.jpg';\nimport $ from 'jquery';\nimport { Link } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport Topic from './Topic';\nimport ConvertTime from '../../util/ConvertTime';\n\nclass Forum extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selectedForum: '',\n            isEnglishForum: false,\n            isPolishForum: false,\n            isGermanyForum: false,\n            englishTopics: [],\n            polishTopics: [],\n            germanyTopics: []\n        }\n        this.ConvertTime = new ConvertTime();\n\n        this.onFlagClick = this.onFlagClick.bind(this);\n        this.onCreateTopicClick = this.onCreateTopicClick.bind(this);\n        this.generatePolishTopics = this.generatePolishTopics.bind(this);\n        this.onTopicClick = this.onTopicClick.bind(this);\n    }\n\n    componentDidMount() {\n        fetch(\"/get/topics/all\", {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'content-type': 'application/json'\n            }\n        }).then(response => response.json())\n        .then(jsonData => {\n            jsonData.map((topic, index) => {\n                if(topic.languageForum.forumType === 'polish') {\n                    let time = this.ConvertTime.convertTime(topic.createdAt, null, false);\n\n                    const element = {\n                        id: topic.id,\n                        likes: topic.likes,\n                        title: topic.title,\n                        createdAt: time[0],\n                        owner: topic.user.name\n                    }\n                    this.setState({ polishTopics: this.state.polishTopics.concat(element) });\n                }\n\n                if(topic.languageForum.forumType === 'english') {\n                    let time = this.ConvertTime.convertTime(topic.createdAt, null, false);\n                    \n                    const element = {\n                        id: topic.id,\n                        likes: topic.likes,\n                        title: topic.title,\n                        createdAt: time[0],\n                        owner: topic.user.name\n                    }\n                    this.setState({ englishTopics: this.state.englishTopics.concat(element) });\n                }\n\n                if(topic.languageForum.forumType === 'germany') {\n                    let time = this.ConvertTime.convertTime(topic.createdAt, null, false);\n                    \n                    const element = {\n                        id: topic.id,\n                        likes: topic.likes,\n                        title: topic.title,\n                        createdAt: time[0],\n                        owner: topic.user.name\n                    }\n                    this.setState({ germanyTopics: this.state.germanyTopics.concat(element) });\n                }\n            });\n        });\n    }\n\n    onFlagClick(e) {\n        e.preventDefault();\n\n        $(\"#polandFlag\").click(() => {\n            this.setState({ \n                selectedForum: 'polish',\n                isPolishForum: true\n            }, () => {\n                $(\"#polandFlag\").addClass(\"isActiveFlag\");\n                $(\"#germanyFlag\").removeClass(\"isActiveFlag\");\n                $(\"#englandFlag\").removeClass(\"isActiveFlag\");\n            });\n        });\n\n        $(\"#germanyFlag\").click(() => {\n            this.setState({ \n                selectedForum: 'germany',\n                isGermanyForum: true\n            }, () => {\n                $(\"#germanyFlag\").addClass(\"isActiveFlag\");\n                $(\"#polandFlag\").removeClass(\"isActiveFlag\");\n                $(\"#englandFlag\").removeClass(\"isActiveFlag\");\n            });\n        });\n\n        $(\"#englandFlag\").click(() => {\n            this.setState({ \n                selectedForum: 'english',\n                isEnglishForum: true\n            }, () => {\n                $(\"#englandFlag\").addClass(\"isActiveFlag\");\n                $(\"#germanyFlag\").removeClass(\"isActiveFlag\");\n                $(\"#polandFlag\").removeClass(\"isActiveFlag\");\n            });\n        });\n    }\n\n    onCreateTopicClick(e) {\n        if(this.state.selectedForum === '') {\n            e.preventDefault();\n            swal(\"Warning\", \"You have to select language for forum\", \"warning\");\n        }\n    }\n\n    generatePolishTopics() {\n        return this.state.polishTopics.map((topic, index) => {\n             return (\n                <Topic \n                    id={topic.id}\n                    owner={topic.owner}\n                    likes={topic.likes}\n                    title={topic.title}\n                    createdAt={topic.createdAt}\n                    onClick={this.onTopicClick}\n                />\n            );\n        })\n    }\n\n    onTopicClick(e) {\n        e.preventDefault();\n\n        let id = this.props.id;\n    }\n\n    render() {\n        let isPolishForum = this.state.isPolishForum;\n        let isGermanyForum = this.state.isGermanyForum;\n        let isEnglishForum = this.state.isEnglishForum;\n\n        return (\n            <div className=\"forum-container\">\n                <div className=\"forum-title\">\n                    Select forum\n                </div>\n                <div className=\"language-forum-box language-forum-box-center language-shadow\">\n                    <div className=\"flag-item\">\n                        <img \n                            id=\"polandFlag\"\n                            src={poland} \n                            alt=\"Polish flag\"\n                            onClick={this.onFlagClick}\n                        />\n                    </div>\n                    <div className=\"flag-item\">\n                        <img \n                            id=\"germanyFlag\"\n                            src={germany} \n                            alt=\"Germany flag\" \n                            onClick={this.onFlagClick}\n                        />\n                    </div>\n                    <div className=\"flag-item\">\n                        <img \n                            id=\"englandFlag\"\n                            src={england} \n                            alt=\"English flag\"\n                            onClick={this.onFlagClick} \n                        />\n                    </div>\n                </div>\n                <Link to={`/create/topic/${this.state.selectedForum}`}>\n                    <button \n                        className=\"btn btn-primary btn-padding\"\n                        onClick={this.onCreateTopicClick}\n                    >\n                        CREATE TOPIC\n                    </button>\n                </Link>\n                <div className=\"wrapper-forum-box\">\n                    <div className=\"forum-topics-box\">\n                        { isPolishForum && this.generatePolishTopics() }\n                    </div>\n                    <div className=\"forum-top-topics\"></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Forum;"]},"metadata":{},"sourceType":"module"}