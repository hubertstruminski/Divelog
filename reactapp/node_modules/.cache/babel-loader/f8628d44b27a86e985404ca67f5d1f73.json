{"ast":null,"code":"export default class ConvertTime {\n  convertTime(entryTime, exitTime, isUpdate) {\n    let entryHoursWithMinutes = entryTime.substr(11, 5);\n    let entryHours = entryHoursWithMinutes.substr(0, 2);\n    entryHours = Number.parseInt(entryHours);\n    entryHours += 2;\n\n    if (entryHours < 10) {\n      entryHours = \"0\" + entryHours;\n    }\n\n    if (isUpdate) {\n      entryTime = entryTime.substr(0, 10) + \"T\" + entryHours + \":\" + entryTime.substr(14, 14);\n    } else {\n      entryTime = entryTime.substr(0, 10) + \" \" + entryHours + \":\" + entryTime.substr(14, 2);\n    }\n\n    let exitHoursWithMinutes = exitTime.substr(11, 5);\n    let exitHours = exitHoursWithMinutes.substr(0, 2);\n    exitHours = Number.parseInt(exitHours);\n    exitHours += 2;\n\n    if (exitHours < 10) {\n      exitHours = \"0\" + exitHours;\n    }\n\n    if (isUpdate) {\n      exitTime = exitTime.substr(0, 10) + \"T\" + entryHours + \":\" + exitTime.substr(14, 14);\n    } else {\n      exitTime = exitTime.substr(0, 10) + \" \" + exitHours + \":\" + exitTime.substr(14, 2);\n    }\n\n    return [entryTime, exitTime];\n  }\n\n  convertTimeForUpdate() {}\n\n}","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/util/ConvertTime.js"],"names":["ConvertTime","convertTime","entryTime","exitTime","isUpdate","entryHoursWithMinutes","substr","entryHours","Number","parseInt","exitHoursWithMinutes","exitHours","convertTimeForUpdate"],"mappings":"AAAA,eAAe,MAAMA,WAAN,CAAkB;AAE7BC,EAAAA,WAAW,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,QAAtB,EAAgC;AACvC,QAAIC,qBAAqB,GAAGH,SAAS,CAACI,MAAV,CAAiB,EAAjB,EAAqB,CAArB,CAA5B;AACA,QAAIC,UAAU,GAAGF,qBAAqB,CAACC,MAAtB,CAA6B,CAA7B,EAAgC,CAAhC,CAAjB;AACAC,IAAAA,UAAU,GAAGC,MAAM,CAACC,QAAP,CAAgBF,UAAhB,CAAb;AACAA,IAAAA,UAAU,IAAI,CAAd;;AACA,QAAGA,UAAU,GAAG,EAAhB,EAAoB;AAChBA,MAAAA,UAAU,GAAG,MAAMA,UAAnB;AACH;;AACD,QAAGH,QAAH,EAAa;AACTF,MAAAA,SAAS,GAAGA,SAAS,CAACI,MAAV,CAAiB,CAAjB,EAAoB,EAApB,IAA0B,GAA1B,GAAgCC,UAAhC,GAA6C,GAA7C,GAAmDL,SAAS,CAACI,MAAV,CAAiB,EAAjB,EAAqB,EAArB,CAA/D;AACH,KAFD,MAEO;AACHJ,MAAAA,SAAS,GAAGA,SAAS,CAACI,MAAV,CAAiB,CAAjB,EAAoB,EAApB,IAA0B,GAA1B,GAAgCC,UAAhC,GAA6C,GAA7C,GAAmDL,SAAS,CAACI,MAAV,CAAiB,EAAjB,EAAqB,CAArB,CAA/D;AACH;;AAGD,QAAII,oBAAoB,GAAGP,QAAQ,CAACG,MAAT,CAAgB,EAAhB,EAAoB,CAApB,CAA3B;AACA,QAAIK,SAAS,GAAGD,oBAAoB,CAACJ,MAArB,CAA4B,CAA5B,EAA+B,CAA/B,CAAhB;AACAK,IAAAA,SAAS,GAAGH,MAAM,CAACC,QAAP,CAAgBE,SAAhB,CAAZ;AACAA,IAAAA,SAAS,IAAI,CAAb;;AACA,QAAGA,SAAS,GAAG,EAAf,EAAmB;AACfA,MAAAA,SAAS,GAAG,MAAMA,SAAlB;AACH;;AAED,QAAGP,QAAH,EAAa;AACTD,MAAAA,QAAQ,GAAGA,QAAQ,CAACG,MAAT,CAAgB,CAAhB,EAAmB,EAAnB,IAAyB,GAAzB,GAA+BC,UAA/B,GAA4C,GAA5C,GAAkDJ,QAAQ,CAACG,MAAT,CAAgB,EAAhB,EAAoB,EAApB,CAA7D;AACH,KAFD,MAEO;AACHH,MAAAA,QAAQ,GAAGA,QAAQ,CAACG,MAAT,CAAgB,CAAhB,EAAmB,EAAnB,IAAyB,GAAzB,GAA+BK,SAA/B,GAA2C,GAA3C,GAAiDR,QAAQ,CAACG,MAAT,CAAgB,EAAhB,EAAoB,CAApB,CAA5D;AACH;;AAED,WAAO,CAACJ,SAAD,EAAYC,QAAZ,CAAP;AACH;;AAEDS,EAAAA,oBAAoB,GAAG,CAEtB;;AApC4B","sourcesContent":["export default class ConvertTime {\n\n    convertTime(entryTime, exitTime, isUpdate) {\n        let entryHoursWithMinutes = entryTime.substr(11, 5);\n        let entryHours = entryHoursWithMinutes.substr(0, 2);\n        entryHours = Number.parseInt(entryHours);\n        entryHours += 2;\n        if(entryHours < 10) {\n            entryHours = \"0\" + entryHours;\n        }\n        if(isUpdate) {\n            entryTime = entryTime.substr(0, 10) + \"T\" + entryHours + \":\" + entryTime.substr(14, 14);\n        } else {\n            entryTime = entryTime.substr(0, 10) + \" \" + entryHours + \":\" + entryTime.substr(14, 2);\n        }\n        \n\n        let exitHoursWithMinutes = exitTime.substr(11, 5);\n        let exitHours = exitHoursWithMinutes.substr(0, 2);\n        exitHours = Number.parseInt(exitHours);\n        exitHours += 2;\n        if(exitHours < 10) {\n            exitHours = \"0\" + exitHours;\n        }\n\n        if(isUpdate) {\n            exitTime = exitTime.substr(0, 10) + \"T\" + entryHours + \":\" + exitTime.substr(14, 14);\n        } else {\n            exitTime = exitTime.substr(0, 10) + \" \" + exitHours + \":\" + exitTime.substr(14, 2);\n        }\n\n        return [entryTime, exitTime];\n    }\n\n    convertTimeForUpdate() {\n\n    }\n}"]},"metadata":{},"sourceType":"module"}