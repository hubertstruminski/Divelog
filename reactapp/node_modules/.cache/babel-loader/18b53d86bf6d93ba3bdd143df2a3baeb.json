{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/forum/TopicWithPosts.js\";\nimport React from 'react';\n\nclass TopicWithPosts extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    let jwtToken = localStorage.getItem(\"JwtToken\");\n    fetch(\"/get/topic/\".concat(id, \"/\").concat(jwtToken), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'content-type': 'application/json'\n      }\n    }).then(response => response.json()).then(jsonData => {});\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default TopicWithPosts;","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/forum/TopicWithPosts.js"],"names":["React","TopicWithPosts","Component","constructor","props","componentDidMount","id","match","params","jwtToken","localStorage","getItem","fetch","method","headers","then","response","json","jsonData","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAN,SAA6BD,KAAK,CAACE,SAAnC,CAA6C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,EAAE,GAAG,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBF,EAAjC;AACA,QAAIG,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAf;AAEAC,IAAAA,KAAK,sBAAeN,EAAf,cAAqBG,QAArB,GAAiC;AAClCI,MAAAA,MAAM,EAAE,KAD0B;AAElCC,MAAAA,OAAO,EAAE;AACL,kBAAU,mCADL;AAEL,wBAAgB;AAFX;AAFyB,KAAjC,CAAL,CAMGC,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANpB,EAOCF,IAPD,CAOMG,QAAQ,IAAI,CAEjB,CATD;AAUH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAzBwC;;AA4B7C,eAAelB,cAAf","sourcesContent":["import React from 'react';\n\nclass TopicWithPosts extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        let id = this.props.match.params.id;\n        let jwtToken = localStorage.getItem(\"JwtToken\");\n\n        fetch(`/get/topic/${id}/${jwtToken}`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'content-type': 'application/json'\n            }\n        }).then(response => response.json())\n        .then(jsonData => {\n            \n        });\n    }\n\n    render() {\n        return (\n            <div></div>\n        );\n    }\n}\n\nexport default TopicWithPosts;"]},"metadata":{},"sourceType":"module"}