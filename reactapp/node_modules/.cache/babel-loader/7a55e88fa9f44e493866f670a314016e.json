{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/twitter/twitter-home/TwitterHomeAdd.js\";\nimport React from 'react';\nimport '../../../css/twitter-home/TwitterHomeAdd.css';\nimport * as filestack from 'filestack-js';\nimport $ from 'jquery';\n\nclass TwitterHomeAdd extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      files: []\n    };\n    this.removeRenderedFile = this.removeRenderedFile.bind(this);\n  }\n\n  componentDidMount() {}\n\n  removeRenderedFile(handle) {\n    console.log(handle);\n  }\n\n  renderFiles() {\n    $(\"tweet-add-uploaded-files\").html(\"\");\n    return this.state.files.map((file, index) => {\n      if (file.mimetype.contains(\"image\")) {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"tweet-add-rendered-file-image\",\n          src: file.url,\n          alt: file.filename,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          className: \"upload-file-delete\",\n          onClick: () => this.removeRenderedFile(file.handle),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"Delete - \", file.filename));\n      }\n    });\n  }\n\n  uploadMedia() {\n    const clientOptions = {\n      security: {\n        policy: \"eyJjYWxsIjpbInBpY2siLCJzdG9yZSIsInJ1bldvcmtmbG93Il0sImV4cGlyeSI6MTg5MzQ1MDYwMH0=\",\n        signature: \"8c38c1201c5d885c5f52451c4ed42d7af19bc95ae90972746d804cfe46c58f7b\"\n      }\n    };\n    const client = filestack.init(\"Abn3RoxlVQeWNtMpk2Gflz\", clientOptions);\n    const options = {\n      onFileUploadFinished: response => {\n        console.log(response);\n        this.setState({\n          files: this.state.files.concat(response)\n        });\n      },\n      maxSize: 5 * 1024 * 1024,\n      // 5MB\n      uploadInBackground: false,\n      maxFiles: 4\n    };\n    client.picker(options).open();\n  }\n\n  render() {\n    let renderedFiles = \"\";\n\n    if (this.state.files.length > 0) {\n      renderedFiles = this.renderFiles();\n    }\n\n    console.log(renderedFiles);\n    return React.createElement(\"div\", {\n      className: \"add-tweet-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"avatar-tweet-textarea-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tweet-add-avatar-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.pictureUrl,\n      alt: \"Avatar\",\n      className: \"tweet-add-avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"tweet-add-textarea-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"What's happening?\"))), React.createElement(\"div\", {\n      className: \"tweet-add-uploaded-files\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, renderedFiles), React.createElement(\"div\", {\n      className: \"add-tweet-buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"far fa-images\",\n      style: {\n        color: '#00A4EF',\n        fontSize: \"1.5vw\",\n        width: \"15%\",\n        marginTop: \"3%\"\n      },\n      onClick: this.uploadMedia,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"add-tweet-button-home-timeline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Tweet\")));\n  }\n\n}\n\nexport default TwitterHomeAdd;","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/twitter/twitter-home/TwitterHomeAdd.js"],"names":["React","filestack","$","TwitterHomeAdd","Component","constructor","state","files","removeRenderedFile","bind","componentDidMount","handle","console","log","renderFiles","html","map","file","index","mimetype","contains","url","filename","uploadMedia","clientOptions","security","policy","signature","client","init","options","onFileUploadFinished","response","setState","concat","maxSize","uploadInBackground","maxFiles","picker","open","render","renderedFiles","length","props","pictureUrl","color","fontSize","width","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../../css/twitter-home/TwitterHomeAdd.css';\nimport * as filestack from 'filestack-js';\nimport $ from 'jquery';\n\nclass TwitterHomeAdd extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            files: []\n        }\n        this.removeRenderedFile = this.removeRenderedFile.bind(this);\n    }\n\n    componentDidMount() {\n\n    }\n\n    removeRenderedFile(handle) {\n        console.log(handle);\n    }\n\n    renderFiles() {\n        $(\"tweet-add-uploaded-files\").html(\"\");\n        return this.state.files.map((file, index) => {\n            if(file.mimetype.contains(\"image\")) {\n                return (\n                    <React.Fragment>\n                        <img\n                            className=\"tweet-add-rendered-file-image\"\n                            src={file.url}\n                            alt={file.filename}\n                        />\n                        <br />\n                        <button className=\"upload-file-delete\" onClick={() => this.removeRenderedFile(file.handle)}>Delete - {file.filename}</button>\n                    </React.Fragment>\n                );\n            }\n        });\n    }\n\n    uploadMedia() {\n        const clientOptions = {\n            security: {\n                policy: \"eyJjYWxsIjpbInBpY2siLCJzdG9yZSIsInJ1bldvcmtmbG93Il0sImV4cGlyeSI6MTg5MzQ1MDYwMH0=\",\n                signature: \"8c38c1201c5d885c5f52451c4ed42d7af19bc95ae90972746d804cfe46c58f7b\"\n            }\n        }\n        const client = filestack.init(\"Abn3RoxlVQeWNtMpk2Gflz\", clientOptions);\n        const options = {\n            onFileUploadFinished: (response) => {\n                console.log(response);\n                this.setState({ files: this.state.files.concat(response) });\n            },\n            maxSize: 5 * 1024 * 1024, // 5MB\n            uploadInBackground: false,\n            maxFiles: 4\n        }\n        client.picker(options).open();\n    }\n\n    render() {\n        let renderedFiles = \"\";\n        if(this.state.files.length > 0) {\n            renderedFiles = this.renderFiles();\n        }\n        console.log(renderedFiles);\n\n        return (\n            <div className=\"add-tweet-container\">\n                <div className=\"avatar-tweet-textarea-container\">\n                    <div className=\"tweet-add-avatar-container\">\n                        <img \n                            src={this.props.pictureUrl} \n                            alt=\"Avatar\" \n                            className=\"tweet-add-avatar\"\n                        />\n                    </div>\n                    <div className=\"tweet-add-textarea-container\">\n                        <textarea>\n                            What's happening?\n                        </textarea>\n                        \n                    \n                    </div>\n                </div>\n                <div className=\"tweet-add-uploaded-files\">\n                    { renderedFiles }\n                </div>\n                <div className=\"add-tweet-buttons\">\n                    <i \n                        className=\"far fa-images\" \n                        style={{ color: '#00A4EF', fontSize: \"1.5vw\", width: \"15%\", marginTop: \"3%\"}}\n                        onClick={this.uploadMedia}\n                    ></i>\n                    <button \n                        className=\"add-tweet-button-home-timeline\"\n                    >\n                        Tweet\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TwitterHomeAdd;"]},"metadata":{},"sourceType":"module"}