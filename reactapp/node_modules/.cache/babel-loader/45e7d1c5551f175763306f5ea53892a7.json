{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/logbook/GoogleLogbookMap.js\";\nimport React from 'react';\nimport GoogleMap from '../googleMaps/GoogleMap';\nimport { Map, Marker, GoogleApiWrapper, InfoWindow } from 'google-maps-react';\nimport GoogleModal from '../googleMaps/GoogleModal';\nimport $ from 'jquery';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'redux';\n\nclass GoogleLogbookMap extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      latitude: '',\n      longitude: '',\n      marker: {},\n      activeMarker: {},\n      showingInfoWIndow: false,\n      selectedPlace: {}\n    };\n    this.onMapClick = this.onMapClick.bind(this);\n    this.GoogleMap = new GoogleMap();\n  }\n\n  onMapClick(t, map, coord) {\n    const latLng = coord.latLng;\n    const lat = latLng.lat();\n    const lng = latLng.lng();\n    this.setState({\n      latitude: lat,\n      longitude: lng\n    });\n    $(document).on('show.bs.modal', \"#modalCenter\", function (event) {\n      $('#name').trigger('focus');\n    });\n    $(\"#modalCenter\").modal('show');\n  }\n\n  showMarker() {\n    return React.createElement(Marker, {\n      name: this.state.marker.name,\n      position: {\n        lat: this.state.marker.latitude,\n        lng: this.state.marker.longitude\n      },\n      onClick: this.GoogleMap.onMarkerClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    const mapStyle = {\n      width: '100%',\n      height: '250px'\n    };\n    let loadingScreen = React.createElement(\"div\", {\n      class: \"d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"spinner-grow\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      class: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.props.t(\"loading\"))));\n    let map = React.createElement(\"div\", {\n      className: \"google-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Map, {\n      google: this.props.google,\n      zoom: 5,\n      style: mapStyle,\n      initialCenter: {\n        lat: 48.023,\n        lng: 14.426\n      },\n      onClick: this.onMapClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.showMarker(), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.GoogleMap.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"alert alert-success\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.state.selectedPlace.name)))), React.createElement(GoogleModal, {\n      latitude: this.state.latitude,\n      longitude: this.state.longitude,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"google-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"marker-table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table table-striped table-hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"#\")), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, this.props.t(\"googleMap.table.name\")), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.props.t(\"googleMap.table.latitude\")), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, this.props.t(\"googleMap.table.longitude\")), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.props.t(\"googleMap.table.delete\")))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }))))));\n    let content = this.state.isLoading ? loadingScreen : map;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, content);\n  }\n\n}\n\nexport default compose(GoogleApiWrapper(props => ({\n  apiKey: 'AIzaSyBgb4kpatKEjsOGsxplxFyRfw1K_wGhLTo',\n  language: props.language\n})), withTranslation(\"common\"))(GoogleLogbookMap);","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/logbook/GoogleLogbookMap.js"],"names":["React","GoogleMap","Map","Marker","GoogleApiWrapper","InfoWindow","GoogleModal","$","withTranslation","compose","GoogleLogbookMap","Component","constructor","state","latitude","longitude","marker","activeMarker","showingInfoWIndow","selectedPlace","onMapClick","bind","t","map","coord","latLng","lat","lng","setState","document","on","event","trigger","modal","showMarker","name","onMarkerClick","render","mapStyle","width","height","loadingScreen","props","google","showingInfoWindow","onClose","content","isLoading","apiKey","language"],"mappings":"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","sourcesContent":["import React from 'react';\nimport GoogleMap from '../googleMaps/GoogleMap';\nimport { Map, Marker, GoogleApiWrapper, InfoWindow } from 'google-maps-react';\nimport GoogleModal from '../googleMaps/GoogleModal';\nimport $ from 'jquery';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'redux';\n\nclass GoogleLogbookMap extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            latitude: '',\n            longitude: '',\n            marker: {},\n            activeMarker: {},\n            showingInfoWIndow: false,\n            selectedPlace: {}\n        }\n        this.onMapClick = this.onMapClick.bind(this);\n        this.GoogleMap = new GoogleMap();\n    }\n\n    onMapClick(t, map, coord) {\n        const { latLng } = coord;\n        const lat = latLng.lat();\n        const lng = latLng.lng();\n\n        this.setState({ \n            latitude: lat,\n            longitude: lng\n        });\n\n        $(document).on('show.bs.modal', \"#modalCenter\", function (event) {\n            $('#name').trigger('focus');\n        });\n        $(\"#modalCenter\").modal('show');\n    }\n\n    showMarker() {\n        return (\n            <Marker \n                name={this.state.marker.name}\n                position={{ lat: this.state.marker.latitude, lng: this.state.marker.longitude }}\n                onClick={this.GoogleMap.onMarkerClick}\n            />\n        );\n    }\n\n    render() {\n        const mapStyle = {\n            width: '100%',\n            height: '250px',\n        }\n\n        let loadingScreen = (\n            <div class=\"d-flex justify-content-center\">\n                <div class=\"spinner-grow\" role=\"status\">\n                    <span class=\"sr-only\">\n                        {this.props.t(\"loading\")}\n                    </span>\n                </div>\n            </div>\n        )\n\n        let map = (\n            <div className=\"google-container\">\n                <div>\n                    <Map\n                        google={this.props.google}\n                        zoom={5}\n                        style={mapStyle}\n                        initialCenter={{ lat: 48.023, lng: 14.426}}\n                        onClick={this.onMapClick}\n                    >\n                        { this.showMarker() }\n                        <InfoWindow\n                            marker={this.state.activeMarker}\n                            visible={this.state.showingInfoWindow}\n                            onClose={this.GoogleMap.onClose}\n                        >\n                        <div className=\"alert alert-success\" role=\"alert\">\n                            <h4>{this.state.selectedPlace.name}</h4>\n                        </div>\n                        </InfoWindow>\n                    </Map>\n                    <GoogleModal \n                        latitude={this.state.latitude}\n                        longitude={this.state.longitude}\n                    />\n                </div>\n                <div className=\"google-center\">\n                    <div className=\"marker-table\">\n                        <div className=\"table-responsive\">\n                            <table className=\"table table-striped table-hover\">\n                                <thead>\n                                    <tr>\n                                        <th scope=\"col\">\n                                            <b>#</b>\n                                        </th>\n                                        <th scope=\"col\">\n                                            {this.props.t(\"googleMap.table.name\")}\n                                        </th>\n                                        <th scope=\"col\">\n                                            {this.props.t(\"googleMap.table.latitude\")}\n                                        </th>\n                                        <th scope=\"col\">\n                                            {this.props.t(\"googleMap.table.longitude\")}\n                                        </th>\n                                        <th scope=\"col\">\n                                            {this.props.t(\"googleMap.table.delete\")}\n                                        </th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {/* { this.showTableRows() } */}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>     \n        )\n        let content = this.state.isLoading ? loadingScreen : map;\n\n        return (\n            <div>\n                { content }\n            </div>\n        );\n    }\n}\n\nexport default compose(\n    GoogleApiWrapper(\n    (props) => ({\n      apiKey: 'AIzaSyBgb4kpatKEjsOGsxplxFyRfw1K_wGhLTo',\n      language: props.language,\n    }\n  )),\n    withTranslation(\"common\")\n  )(GoogleLogbookMap);"]},"metadata":{},"sourceType":"module"}