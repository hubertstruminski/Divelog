{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/Divelog/reactapp/src/util/withTwitterAuth.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nexport default function withTwitterAuth(AuthComponent, props) {\n  class AuthWrapped extends React.Component {\n    constructor() {\n      super();\n      this.state = {\n        isRedirectToLoginPage: true\n      };\n    }\n\n    componentWillMount() {} // history={`/twitter/${this.props.match.params.jwtToken}`}\n\n\n    render() {\n      let isRedirectToLoginPage = this.state.isRedirectToLoginPage;\n      return !isRedirectToLoginPage && React.createElement(AuthComponent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });\n    }\n\n  }\n\n  return AuthWrapped;\n}","map":{"version":3,"sources":["/home/huber/Pulpit/Divelog/reactapp/src/util/withTwitterAuth.js"],"names":["React","Redirect","withTwitterAuth","AuthComponent","props","AuthWrapped","Component","constructor","state","isRedirectToLoginPage","componentWillMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,eAAe,SAASC,eAAT,CAAyBC,aAAzB,EAAwCC,KAAxC,EAA+C;AAC1D,QAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA0C;AACtCC,IAAAA,WAAW,GAAG;AACV;AAEA,WAAKC,KAAL,GAAa;AACTC,QAAAA,qBAAqB,EAAE;AADd,OAAb;AAGH;;AACDC,IAAAA,kBAAkB,GAAG,CAEpB,CAVqC,CAYtC;;;AAEAC,IAAAA,MAAM,GAAG;AACL,UAAIF,qBAAqB,GAAG,KAAKD,KAAL,CAAWC,qBAAvC;AAEA,aACK,CAACA,qBAAD,IAA0B,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD/B;AAGH;;AApBqC;;AAsB1C,SAAOJ,WAAP;AACH","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport default function withTwitterAuth(AuthComponent, props) {\n    class AuthWrapped extends React.Component {\n        constructor() {\n            super();\n\n            this.state = {\n                isRedirectToLoginPage: true\n            }\n        }\n        componentWillMount() {\n            \n        }\n\n        // history={`/twitter/${this.props.match.params.jwtToken}`}\n\n        render() {\n            let isRedirectToLoginPage = this.state.isRedirectToLoginPage;\n            \n            return (\n                 !isRedirectToLoginPage && <AuthComponent />\n            );\n        }\n    }\n    return AuthWrapped;\n}"]},"metadata":{},"sourceType":"module"}