{"ast":null,"code":"var _jsxFileName = \"/home/msi/Pulpit/Divelog/reactapp/src/components/forum/Post.js\";\nimport React from 'react';\nimport '../../css/TopicWithPosts.css';\nimport '../../css/AddPosts.css';\nimport ReactPlayer from 'react-player';\nimport swal from 'sweetalert';\nimport $ from 'jquery';\nimport ReactFilestack from 'filestack-react';\nimport axios from 'axios';\nimport DeleteAttachmentButton from './DeleteAttachmentButton';\nimport { withTranslation } from 'react-i18next';\nimport AuthService from '../../util/AuthService';\nimport { BACKEND_API_URL } from '../../actions/types';\n\nclass Post extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      isOwner: false,\n      isUpdating: false,\n      successFiles: [],\n      successNameFiles: [],\n      isSuccessUploaded: false,\n      isFailureUploaded: false,\n      failureNameFiles: [],\n      isError: false,\n      wasUpdated: false\n    };\n    this.Auth = new AuthService();\n    this.addImages = this.addImages.bind(this);\n    this.addVideos = this.addVideos.bind(this);\n    this.onDeleteClick = this.onDeleteClick.bind(this);\n    this.onEditClick = this.onEditClick.bind(this);\n    this.responseFilestack = this.responseFilestack.bind(this);\n    this.onErrorFilestack = this.onErrorFilestack.bind(this);\n    this.renderDeleteButtonsForAttachments = this.renderDeleteButtonsForAttachments.bind(this);\n  }\n\n  componentDidMount() {\n    let jwtToken = this.Auth.getRightSocialToken();\n    fetch(`${BACKEND_API_URL}/getuserdata/${jwtToken}`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      return response.json();\n    }).then(jsonData => {\n      this.setState({\n        email: jsonData.email\n      }, () => {\n        if (this.props.user.email === this.state.email) {\n          this.setState({\n            isOwner: true\n          });\n        }\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  addImages() {\n    let isUpdating = this.state.isUpdating;\n    return this.props.files.map((file, index) => {\n      if (file.type.includes('image')) {\n        return React.createElement(\"div\", {\n          id: `attachment${file.id}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }), React.createElement(\"img\", {\n          src: file.url,\n          alt: file.name,\n          className: \"attachment-images\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }), !isUpdating && file.name, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }));\n      }\n    });\n  }\n\n  addVideos() {\n    let isUpdating = this.state.isUpdating;\n    return this.props.files.map((file, index) => {\n      if (file.type.includes('video')) {\n        return React.createElement(\"div\", {\n          id: `attachment${file.id}`,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }), React.createElement(ReactPlayer, {\n          url: file.url,\n          playing: true,\n          controls: \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }), !isUpdating && file.name, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }));\n      }\n    });\n  }\n\n  renderDeleteButtonsForAttachments() {\n    return this.props.files.map((file, index) => {\n      return React.createElement(DeleteAttachmentButton, {\n        key: index,\n        id: file.id,\n        name: file.name,\n        type: file.type,\n        counter: this.props.counter,\n        postId: this.props.id,\n        setDeletedFileForPost: this.props.setDeletedFileForPost,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      });\n    });\n  }\n\n  onDeleteClick() {\n    let postId = this.props.id;\n    let jwtToken = this.Auth.getRightSocialToken();\n    fetch(`${BACKEND_API_URL}/delete/post/${postId}/${jwtToken}`, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'content-type': 'application/json'\n      }\n    }).then(response => {\n      if (response.status !== 200) {\n        swal(this.props.t(\"error-500.title\"), this.props.t(\"error-500.message\"), \"error\");\n      } else {\n        this.props.fetchTopicAndPosts();\n        swal(this.props.t(\"forum.post.news.title\"), this.props.t(\"forum.post.news.message\"), \"success\");\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  onEditClick(e) {\n    e.preventDefault();\n\n    if (!this.state.isUpdating) {\n      this.setState({\n        isUpdating: true\n      }, () => {\n        let counter = this.props.counter;\n        let message = $(`.post-message:eq(${counter})`).html();\n        $(`.post-message:eq(${counter})`).html(\"\").append($(\"<div></div>\").addClass(\"form-group edit-post-div\"));\n        $(`.post-message:eq(${counter}) > .edit-post-div`).append($(\"<textarea></textarea\").attr(\"rows\", \"7\").addClass(\"new-post-textarea edit-textarea\"));\n        $(`.post-buttons:eq(${counter})`).append($(\"<button>Confirm</button>\").attr(\"id\", \"btnConfirm\").addClass(\"btn btn-success btn-success-float\"));\n        $(\".post-buttons\").not(`.post-buttons:eq(${counter})`).css({\n          \"display\": \"none\"\n        });\n        $(`.post-message:eq(${counter}) > .edit-post-div > .edit-textarea`).val(message);\n        $(\"#btnConfirm\").click(() => {\n          if ($(\".edit-textarea\").val().length < 5) {\n            $(`.post-message:eq(${counter})`).append($(\"<div></div>\").addClass(\"alert alert-danger\").text(\"Message length must be minimum 5 characters\"));\n          } else {\n            let postId = this.props.id;\n            let jwtToken = this.Auth.getRightSocialToken();\n            let message = $(\".edit-textarea\").val();\n            const updatedPost = {\n              message: message,\n              files: this.state.successFiles\n            };\n            axios({\n              method: 'PUT',\n              url: `${BACKEND_API_URL}/post/${postId}/${jwtToken}`,\n              data: updatedPost,\n              headers: {\n                \"Accept\": \"application/json\",\n                \"Content-type\": \"application/json\"\n              }\n            }).then(response => {\n              if (response.status !== 200) {\n                swal(this.props.t(\"error-500.title\"), this.props.t(\"error-500.message\"), \"error\");\n              } else {\n                this.setState({\n                  isUpdating: false\n                }, () => {\n                  $(`.post-message:eq(${counter})`).html(\"\");\n                  $(`.post-message:eq(${counter})`).text(message);\n                  $(\".post-buttons\").css({\n                    \"display\": \"block\"\n                  });\n                  $(`.post-buttons:eq(${counter}) > #btnConfirm`).css({\n                    \"display\": \"none\"\n                  });\n                  this.props.fetchTopicAndPosts();\n                });\n              }\n            }).catch(err => {\n              console.log(err);\n            });\n          }\n        });\n      });\n    }\n  }\n\n  showSuccessUploadedFiles(isSuccessUploaded) {\n    if (isSuccessUploaded) {\n      return React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, this.props.t(\"forum.post.successUploaded\"), this.state.successNameFiles.map((name, index) => {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, name);\n      }));\n    }\n\n    return null;\n  }\n\n  showFailureUploadedFiles(isFailureUploaded) {\n    if (isFailureUploaded) {\n      return React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      }, this.props.t(\"forum.post.failureUploaded\"), this.state.failureNameFiles.map((name, index) => {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, name);\n      }));\n    }\n\n    return null;\n  }\n\n  responseFilestack(response) {\n    response.filesUploaded.map((file, index) => {\n      const element = {\n        objectId: file.uploadId,\n        url: file.url,\n        size: file.size,\n        name: file.originalFile.name,\n        type: file.originalFile.type\n      };\n      this.setState({\n        successFiles: this.state.successFiles.concat(element),\n        successNameFiles: this.state.successNameFiles.concat(file.originalFile.name),\n        isSuccessUploaded: true\n      });\n    });\n    response.filesFailed.map((file, index) => {\n      this.setState({\n        failureNameFiles: this.state.failureNameFiles.concat(file.originalFile.name),\n        isFailureUploaded: true\n      });\n    });\n  }\n\n  onErrorFilestack() {\n    swal(this.props.t(\"error-500.title\"), this.props.t(\"error-500.message\"), \"error\");\n  }\n\n  render() {\n    let isOwner = this.state.isOwner;\n    let isUpdating = this.state.isUpdating;\n    let updatedAt = 'post updated at ' + this.props.updatedAt;\n    updatedAt = updatedAt.substr(0, updatedAt.length - 1);\n    return React.createElement(\"div\", {\n      className: \"main-post-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main-post-container post-margin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main-post-grid-one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main-post-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, this.props.createdAt), React.createElement(\"div\", {\n      className: \"main-post-avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.user.pictureUrl,\n      alt: \"Avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"main-post-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, this.props.user.name)), React.createElement(\"div\", {\n      className: \"main-post-grid-two\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"post-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, this.props.message), React.createElement(\"div\", {\n      className: \"main-post-attachments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, this.addImages(), this.addVideos()), React.createElement(\"div\", {\n      className: \"post-buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, isOwner && !isUpdating && React.createElement(React.Fragment, null, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      onClick: this.onEditClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, this.props.t(\"forum.post.editBtn\")), React.createElement(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: this.onDeleteClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, this.props.t(\"forum.post.deleteBtn\"))), this.props.wasUpdatedPost && React.createElement(\"div\", {\n      className: \"post-updated-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, updatedAt), isUpdating && this.renderDeleteButtonsForAttachments(), isUpdating && React.createElement(\"div\", {\n      className: \"form-group edit-post-upload-files-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, this.props.t(\"forum.post.uploadFiles\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }), React.createElement(ReactFilestack, {\n      apikey: \"Abn3RoxlVQeWNtMpk2Gflz\",\n      onSuccess: this.responseFilestack,\n      onError: this.onErrorFilestack,\n      componentDisplayMode: {\n        type: 'button',\n        customText: 'Upload files',\n        customClass: 'btn btn-warning edit-post-upload-file'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        clear: \"both\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }), this.showSuccessUploadedFiles(this.state.isSuccessUploaded), this.showFailureUploadedFiles(this.state.isFailureUploaded))))));\n  }\n\n}\n\nexport default withTranslation(\"common\")(Post);","map":{"version":3,"sources":["/home/msi/Pulpit/Divelog/reactapp/src/components/forum/Post.js"],"names":["React","ReactPlayer","swal","$","ReactFilestack","axios","DeleteAttachmentButton","withTranslation","AuthService","BACKEND_API_URL","Post","Component","constructor","props","state","email","isOwner","isUpdating","successFiles","successNameFiles","isSuccessUploaded","isFailureUploaded","failureNameFiles","isError","wasUpdated","Auth","addImages","bind","addVideos","onDeleteClick","onEditClick","responseFilestack","onErrorFilestack","renderDeleteButtonsForAttachments","componentDidMount","jwtToken","getRightSocialToken","fetch","method","headers","then","response","json","jsonData","setState","user","catch","err","console","log","files","map","file","index","type","includes","id","url","name","counter","setDeletedFileForPost","postId","status","t","fetchTopicAndPosts","e","preventDefault","message","html","append","addClass","attr","not","css","val","click","length","text","updatedPost","data","showSuccessUploadedFiles","showFailureUploadedFiles","filesUploaded","element","objectId","uploadId","size","originalFile","concat","filesFailed","render","updatedAt","substr","createdAt","pictureUrl","wasUpdatedPost","customText","customClass","clear"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../css/TopicWithPosts.css';\nimport '../../css/AddPosts.css';\nimport ReactPlayer from 'react-player';\nimport swal from 'sweetalert';\nimport $ from 'jquery';\nimport ReactFilestack from 'filestack-react';\nimport axios from 'axios';\nimport DeleteAttachmentButton from './DeleteAttachmentButton';\nimport { withTranslation } from 'react-i18next';\nimport AuthService from '../../util/AuthService';\nimport { BACKEND_API_URL } from '../../actions/types';\n\nclass Post extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            isOwner: false,\n            isUpdating: false,\n            successFiles: [],\n            successNameFiles: [],\n            isSuccessUploaded: false,\n            isFailureUploaded: false,\n            failureNameFiles: [],\n            isError: false,\n            wasUpdated: false\n        }\n        this.Auth = new AuthService();\n        \n        this.addImages = this.addImages.bind(this);\n        this.addVideos = this.addVideos.bind(this);\n        this.onDeleteClick = this.onDeleteClick.bind(this);\n        this.onEditClick = this.onEditClick.bind(this);\n        this.responseFilestack = this.responseFilestack.bind(this);\n        this.onErrorFilestack = this.onErrorFilestack.bind(this);\n        this.renderDeleteButtonsForAttachments = this.renderDeleteButtonsForAttachments.bind(this);\n    }\n\n    componentDidMount() {\n        let jwtToken = this.Auth.getRightSocialToken();\n\n        fetch(`${BACKEND_API_URL}/getuserdata/${jwtToken}`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(response => { return response.json()})\n        .then(jsonData => {\n            this.setState({ email: jsonData.email }, () => {\n                if(this.props.user.email === this.state.email) {\n                    this.setState({ isOwner: true });\n                }\n            });\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    addImages() {\n        let isUpdating = this.state.isUpdating;\n\n        return this.props.files.map((file, index) => {\n            if(file.type.includes('image')) {\n                return (\n                    <div id={`attachment${file.id}`}>\n                        <br />\n                        <img \n                            src={file.url} \n                            alt={file.name} \n                            className=\"attachment-images\"\n                        />\n                        <br />\n                        { !isUpdating && file.name }\n                        <br />\n                    </div>\n                );\n            }\n        });\n    }\n\n    addVideos() {\n        let isUpdating = this.state.isUpdating;\n\n        return this.props.files.map((file, index) => {\n            if(file.type.includes('video')) {\n                return (\n                    <div id={`attachment${file.id}`}>\n                        <br />\n                        <ReactPlayer \n                            url={file.url} \n                            playing\n                            controls=\"true\"\n                        />\n                        <br />\n                        { !isUpdating && file.name }\n                        <br />\n                    </div>\n                );\n            }\n        })\n    }\n\n    renderDeleteButtonsForAttachments() {\n        return this.props.files.map((file, index) => {\n            return (\n                <DeleteAttachmentButton\n                    key={index}\n                    id={file.id}\n                    name={file.name}\n                    type={file.type}\n                    counter={this.props.counter}\n                    postId={this.props.id}\n                    setDeletedFileForPost={this.props.setDeletedFileForPost}\n                />\n            );\n        });\n    }\n\n    onDeleteClick() {\n        let postId = this.props.id;\n        let jwtToken = this.Auth.getRightSocialToken();\n\n        fetch(`${BACKEND_API_URL}/delete/post/${postId}/${jwtToken}`, {\n            method: 'DELETE',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'content-type': 'application/json'\n            }\n        }).then(response => {\n            if(response.status !== 200) {\n                swal(this.props.t(\"error-500.title\"), this.props.t(\"error-500.message\"), \"error\");\n            } else {\n                this.props.fetchTopicAndPosts();\n                swal(this.props.t(\"forum.post.news.title\"), this.props.t(\"forum.post.news.message\"), \"success\");\n            }\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    onEditClick(e) {\n        e.preventDefault();\n        if(!this.state.isUpdating) {\n            this.setState({ isUpdating: true }, () => {\n                let counter = this.props.counter;\n                let message = $(`.post-message:eq(${counter})`).html();\n\n                $(`.post-message:eq(${counter})`).html(\"\").append($(\"<div></div>\").addClass(\"form-group edit-post-div\"))\n                $(`.post-message:eq(${counter}) > .edit-post-div`).append($(\"<textarea></textarea\").attr(\"rows\", \"7\").addClass(\"new-post-textarea edit-textarea\"));\n                $(`.post-buttons:eq(${counter})`).append($(\"<button>Confirm</button>\").attr(\"id\", \"btnConfirm\").addClass(\"btn btn-success btn-success-float\"));\n        \n                $(\".post-buttons\").not(`.post-buttons:eq(${counter})`).css({ \"display\": \"none\"});\n\n                $(`.post-message:eq(${counter}) > .edit-post-div > .edit-textarea`).val(message);\n\n                $(\"#btnConfirm\").click(() => {\n                    if($(\".edit-textarea\").val().length < 5) {\n                        $(`.post-message:eq(${counter})`).append(\n                            $(\"<div></div>\").addClass(\"alert alert-danger\").text(\"Message length must be minimum 5 characters\")\n                        );\n                    } else {\n                        let postId = this.props.id;\n                        let jwtToken = this.Auth.getRightSocialToken();\n\n                        let message = $(\".edit-textarea\").val();\n\n                        const updatedPost = {\n                            message: message,\n                            files: this.state.successFiles\n                        }\n                        \n                        axios({\n                            method: 'PUT',\n                            url: `${BACKEND_API_URL}/post/${postId}/${jwtToken}`,\n                            data: updatedPost,\n                            headers: {\n                                \"Accept\": \"application/json\",\n                                \"Content-type\": \"application/json\"\n                            }\n                        }).then(response => {\n                            if(response.status !== 200) {\n                                swal(this.props.t(\"error-500.title\"), this.props.t(\"error-500.message\"), \"error\");\n                            } else {\n                                this.setState({ isUpdating: false }, () => {\n                                    $(`.post-message:eq(${counter})`).html(\"\");\n                                    $(`.post-message:eq(${counter})`).text(message);\n                                    $(\".post-buttons\").css({ \"display\": \"block\"}); \n                                    $(`.post-buttons:eq(${counter}) > #btnConfirm`).css({ \"display\": \"none\" });\n                                    this.props.fetchTopicAndPosts();\n                                });\n                            }\n                        }).catch(err => {\n                            console.log(err);\n                        });\n                    }\n                });\n            });\n        }\n    }\n\n    showSuccessUploadedFiles(isSuccessUploaded) {\n        if(isSuccessUploaded) {\n            return (\n                <div className=\"alert alert-warning\">\n                    { this.props.t(\"forum.post.successUploaded\") }\n                    { this.state.successNameFiles.map((name, index) => {\n                        return <p>{name}</p>\n                    })}\n                </div>\n            );\n        }\n        return null;\n    }\n\n    showFailureUploadedFiles(isFailureUploaded) {\n        if(isFailureUploaded) {\n            return (\n                <div className=\"alert alert-danger\">\n                    { this.props.t(\"forum.post.failureUploaded\") }\n                    { this.state.failureNameFiles.map((name, index) => {\n                        return <p>{name}</p>\n                    })}\n                </div>\n            );\n        }\n        return null;\n    }\n\n    responseFilestack(response) {\n        response.filesUploaded.map((file, index) => {\n            const element = {\n                objectId: file.uploadId,\n                url: file.url,\n                size: file.size,\n                name: file.originalFile.name,\n                type: file.originalFile.type\n            };\n            this.setState({ \n                successFiles: this.state.successFiles.concat(element),\n                successNameFiles: this.state.successNameFiles.concat(file.originalFile.name),\n                isSuccessUploaded: true\n            });\n        });\n\n        response.filesFailed.map((file, index) => {\n            this.setState({ \n                failureNameFiles: this.state.failureNameFiles.concat(file.originalFile.name),\n                isFailureUploaded: true \n            });\n        });\n    }\n\n    onErrorFilestack() {\n        swal(this.props.t(\"error-500.title\"), this.props.t(\"error-500.message\"), \"error\");\n    }\n\n    render() {\n        let isOwner = this.state.isOwner;\n        let isUpdating = this.state.isUpdating;\n\n        let updatedAt = 'post updated at ' + this.props.updatedAt;\n        updatedAt = updatedAt.substr(0, updatedAt.length - 1);\n\n        return (\n            <div className=\"main-post-center\">\n                <div className=\"main-post-container post-margin\">\n                    <div className=\"main-post-grid-one\">\n                        <div className=\"main-post-header\">\n                            { this.props.createdAt }\n                        </div>\n                        <div className=\"main-post-avatar\">\n                            <img src={this.props.user.pictureUrl} alt=\"Avatar\" />\n                        </div>\n                        <div className=\"main-post-footer\">\n                            { this.props.user.name }\n                        </div>\n                    </div>\n                    <div className=\"main-post-grid-two\">\n                        <div className=\"post-message\">\n                            { this.props.message }\n                        </div>  \n                        <div className=\"main-post-attachments\">\n                            { this.addImages() }\n                            { this.addVideos() }\n                        </div>\n                \n                        <div className=\"post-buttons\">\n                            { isOwner && !isUpdating &&\n                                <>\n                                    <hr />\n                                    <button \n                                        className=\"btn btn-warning\"\n                                        onClick={this.onEditClick}\n                                    >\n                                        { this.props.t(\"forum.post.editBtn\") }\n                                    </button>\n                                \n                                    <button \n                                        className=\"btn btn-danger\"\n                                        onClick={this.onDeleteClick}\n                                    >\n                                        { this.props.t(\"forum.post.deleteBtn\") }\n                                    </button>\n                                </>\n                            }\n                            { this.props.wasUpdatedPost && <div className=\"post-updated-box\">{updatedAt}</div> }\n                            { isUpdating && this.renderDeleteButtonsForAttachments() }\n                            {\n                                isUpdating && (\n                                <div className=\"form-group edit-post-upload-files-div\">\n                                    <label>\n                                        { this.props.t(\"forum.post.uploadFiles\") }\n                                    </label>\n                                    <br />\n                                    <ReactFilestack\n                                        apikey=\"Abn3RoxlVQeWNtMpk2Gflz\"\n                                        onSuccess={this.responseFilestack}\n                                        onError={this.onErrorFilestack}\n                                        componentDisplayMode={{\n                                            type: 'button',\n                                            customText: 'Upload files',\n                                            customClass: 'btn btn-warning edit-post-upload-file'\n                                        }}\n                                    />\n                                    <div style={{ clear: \"both\" }}></div>\n                                    { this.showSuccessUploadedFiles(this.state.isSuccessUploaded) }\n                                    { this.showFailureUploadedFiles(this.state.isFailureUploaded) }\n                                </div>\n                                )\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation(\"common\")(Post);"]},"metadata":{},"sourceType":"module"}