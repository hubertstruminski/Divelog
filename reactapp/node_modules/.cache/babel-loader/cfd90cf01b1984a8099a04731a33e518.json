{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/settings/Settings.js\";\nimport React from 'react';\nimport '../../css/Settings.css';\nimport { PDFDownloadLink, Document, Page } from 'react-pdf';\n\nclass Settings extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"settings-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \"dafkjpfsd\", React.createElement(PDFDownloadLink, {\n      document: React.createElement(MyDoc, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }),\n      fileName: \"somename.pdf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, ({\n      blob,\n      url,\n      loading,\n      error\n    }) => loading ? 'Loading document...' : 'Download now!')));\n  }\n\n}\n\nexport const MyDoc = () => React.createElement(Document, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, React.createElement(Page, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}));\nexport default Settings;","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/settings/Settings.js"],"names":["React","PDFDownloadLink","Document","Page","Settings","Component","render","blob","url","loading","error","MyDoc"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;AACA,SAASC,eAAT,EAA0BC,QAA1B,EAAoCC,IAApC,QAAgD,WAAhD;;AAEA,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AAEnCC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,eAAD;AAAiB,MAAA,QAAQ,EAAE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA3B;AAAsC,MAAA,QAAQ,EAAC,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,GAAR;AAAaC,MAAAA,OAAb;AAAsBC,MAAAA;AAAtB,KAAD,KAAoCD,OAAO,GAAG,qBAAH,GAA2B,eAD3E,CAFJ,CADJ,CADJ;AAUH;;AAbkC;;AAgBvC,OAAO,MAAME,KAAK,GAAG,MACjB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADG;AAQP,eAAeP,QAAf","sourcesContent":["import React from 'react';\nimport '../../css/Settings.css';\nimport { PDFDownloadLink, Document, Page } from 'react-pdf';\n\nclass Settings extends React.Component {\n\n    render() {\n        return (\n            <div className=\"settings-container\">\n                <div>\n                    dafkjpfsd\n                    <PDFDownloadLink document={<MyDoc />} fileName=\"somename.pdf\">\n                        {({ blob, url, loading, error }) => (loading ? 'Loading document...' : 'Download now!')}\n                    </PDFDownloadLink>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport const MyDoc = () => (\n    <Document>\n      <Page>\n\n      </Page>\n    </Document>\n)\n\nexport default Settings;"]},"metadata":{},"sourceType":"module"}