{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/logbook/GoogleLogbookMap.js\";\nimport React from 'react';\nimport { Map, Marker, GoogleApiWrapper, InfoWindow } from 'google-maps-react';\nimport GoogleLogbookModal from '../logbook/GoogleLogbookModal';\nimport $ from 'jquery';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'redux';\nimport DeleteLogbookButton from '../logbook/DeleteLogbookButton';\nimport swal from 'sweetalert';\n\nclass GoogleLogbookMap extends React.Component {\n  constructor() {\n    super();\n\n    this.onMarkerClick = (props, marker, e) => {\n      this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    };\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.showTableRow = () => {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"1\")), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, this.state.marker.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, this.state.marker.latitude), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, this.state.marker.longitude), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(DeleteLogbookButton, {\n        id: this.state.marker.id,\n        updateMarker: this.updateMarker,\n        setFinishMarker: this.setFinishMarker,\n        setRef: this.setRef,\n        setIsAccessible: this.setIsAccessible,\n        setIsDeletedRow: this.setIsDeletedRow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      })));\n    };\n\n    this.state = {\n      latitude: '',\n      longitude: '',\n      marker: {},\n      activeMarker: {},\n      showingInfoWIndow: false,\n      selectedPlace: {},\n      isFinishMarker: false,\n      isAccessible: true,\n      isDeletedRow: false\n    };\n    this.onMapClick = this.onMapClick.bind(this);\n    this.updateMarker = this.updateMarker.bind(this);\n    this.setFinishMarker = this.setFinishMarker.bind(this);\n    this.setRef = this.setRef.bind(this);\n    this.setIsAccessible = this.setIsAccessible.bind(this);\n    this.setIsDeletedRow = this.setIsDeletedRow.bind(this);\n  }\n\n  componentDidMount() {\n    $(\".add-dive-google-container div:first\").css({\n      \"height\": \"350px\",\n      \"position\": \"static\"\n    });\n  }\n\n  onMapClick(t, map, coord) {\n    if (this.state.isAccessible) {\n      const latLng = coord.latLng;\n      const lat = latLng.lat();\n      const lng = latLng.lng();\n      this.setState({\n        latitude: lat,\n        longitude: lng,\n        isAccessible: false\n      });\n      $(document).on('show.bs.modal', \"#modalLogbookCenter\", function (event) {\n        $('#name').trigger('focus');\n      });\n      $(\"#modalLogbookCenter\").modal('show');\n    } else {\n      swal(\"No access\", \"You can not mark 2nd location\", \"error\");\n    }\n  }\n\n  showMarker() {\n    return React.createElement(Marker, {\n      name: this.state.marker.name,\n      position: {\n        lat: this.state.marker.latitude,\n        lng: this.state.marker.longitude\n      },\n      onClick: this.onMarkerClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    });\n  }\n\n  updateMarker(markerObject) {\n    this.setState({\n      marker: markerObject\n    });\n  }\n\n  setFinishMarker() {\n    this.setState({\n      isFinishMarker: true\n    });\n  }\n\n  setIsAccessible() {\n    this.setState({\n      isAccessible: true\n    });\n  }\n\n  setRef() {\n    this.tbodyRef.innerHTML = \"\";\n  }\n\n  setIsDeletedRow() {\n    this.setState({\n      isDeletedRow: true\n    });\n  }\n\n  render() {\n    let isFinishMarker = this.state.isFinishMarker;\n    const mapStyle = {\n      position: 'static',\n      width: '100%',\n      height: '350px'\n    };\n    let loadingScreen = React.createElement(\"div\", {\n      class: \"d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"spinner-grow\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      class: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, this.props.t(\"loading\"))));\n    let map = React.createElement(\"div\", {\n      className: \"add-dive-google-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Map, {\n      google: this.props.google,\n      zoom: 5,\n      style: mapStyle,\n      initialCenter: {\n        lat: 48.023,\n        lng: 14.426\n      },\n      onClick: this.onMapClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, isFinishMarker && this.showMarker(), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"alert alert-success\",\n      role: \"alert\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, this.state.selectedPlace.name)))), React.createElement(GoogleLogbookModal, {\n      latitude: this.state.latitude,\n      longitude: this.state.longitude,\n      updateMarker: this.updateMarker,\n      setFinishMarker: this.setFinishMarker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"add-dive-table\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table table-striped table-hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"#\")), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, this.props.t(\"googleMap.table.name\")), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, this.props.t(\"googleMap.table.latitude\")), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, this.props.t(\"googleMap.table.longitude\")), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, this.props.t(\"googleMap.table.delete\")))), React.createElement(\"tbody\", {\n      ref: el => this.tbodyRef = el,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, isFinishMarker && this.showTableRow()))));\n    let content = this.state.isLoading ? loadingScreen : map;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, content);\n  }\n\n}\n\nexport default compose(GoogleApiWrapper(props => ({\n  apiKey: 'AIzaSyBgb4kpatKEjsOGsxplxFyRfw1K_wGhLTo',\n  language: props.language\n})), withTranslation(\"common\"))(GoogleLogbookMap);","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/logbook/GoogleLogbookMap.js"],"names":["React","Map","Marker","GoogleApiWrapper","InfoWindow","GoogleLogbookModal","$","withTranslation","compose","DeleteLogbookButton","swal","GoogleLogbookMap","Component","constructor","onMarkerClick","props","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onClose","state","showTableRow","name","latitude","longitude","id","updateMarker","setFinishMarker","setRef","setIsAccessible","setIsDeletedRow","showingInfoWIndow","isFinishMarker","isAccessible","isDeletedRow","onMapClick","bind","componentDidMount","css","t","map","coord","latLng","lat","lng","document","on","event","trigger","modal","showMarker","markerObject","tbodyRef","innerHTML","render","mapStyle","position","width","height","loadingScreen","google","el","content","isLoading","apiKey","language"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,gBAAtB,EAAwCC,UAAxC,QAA0D,mBAA1D;AACA,OAAOC,kBAAP,MAA+B,+BAA/B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,OAAOC,mBAAP,MAAgC,gCAAhC;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,MAAMC,gBAAN,SAA+BX,KAAK,CAACY,SAArC,CAA+C;AAC3CC,EAAAA,WAAW,GAAG;AACV;;AADU,SAkDdC,aAlDc,GAkDE,CAACC,KAAD,EAAQC,MAAR,EAAgBC,CAAhB,KAAsB;AAClC,WAAKC,QAAL,CAAc;AACVC,QAAAA,aAAa,EAAEJ,KADL;AAEVK,QAAAA,YAAY,EAAEJ,MAFJ;AAGVK,QAAAA,iBAAiB,EAAE;AAHT,OAAd;AAKH,KAxDa;;AAAA,SA0DdC,OA1Dc,GA0DJP,KAAK,IAAI;AACf,UAAG,KAAKQ,KAAL,CAAWF,iBAAd,EAAiC;AAC7B,aAAKH,QAAL,CAAc;AACVG,UAAAA,iBAAiB,EAAE,KADT;AAEVD,UAAAA,YAAY,EAAE;AAFJ,SAAd;AAIH;AACJ,KAjEa;;AAAA,SA6EdI,YA7Ec,GA6EC,MAAM;AACjB,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKD,KAAL,CAAWP,MAAX,CAAkBS,IAAvB,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKF,KAAL,CAAWP,MAAX,CAAkBU,QAAvB,CALJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKH,KAAL,CAAWP,MAAX,CAAkBW,SAAvB,CANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,mBAAD;AACI,QAAA,EAAE,EAAE,KAAKJ,KAAL,CAAWP,MAAX,CAAkBY,EAD1B;AAEI,QAAA,YAAY,EAAE,KAAKC,YAFvB;AAGI,QAAA,eAAe,EAAE,KAAKC,eAH1B;AAII,QAAA,MAAM,EAAE,KAAKC,MAJjB;AAKI,QAAA,eAAe,EAAE,KAAKC,eAL1B;AAMI,QAAA,eAAe,EAAE,KAAKC,eAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAPJ,CADJ;AAoBH,KAlGa;;AAGV,SAAKV,KAAL,GAAa;AACTG,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,SAAS,EAAE,EAFF;AAGTX,MAAAA,MAAM,EAAE,EAHC;AAITI,MAAAA,YAAY,EAAE,EAJL;AAKTc,MAAAA,iBAAiB,EAAE,KALV;AAMTf,MAAAA,aAAa,EAAE,EANN;AAOTgB,MAAAA,cAAc,EAAE,KAPP;AAQTC,MAAAA,YAAY,EAAE,IARL;AASTC,MAAAA,YAAY,EAAE;AATL,KAAb;AAWA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKV,YAAL,GAAoB,KAAKA,YAAL,CAAkBU,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKT,eAAL,GAAuB,KAAKA,eAAL,CAAqBS,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKR,MAAL,GAAc,KAAKA,MAAL,CAAYQ,IAAZ,CAAiB,IAAjB,CAAd;AACA,SAAKP,eAAL,GAAuB,KAAKA,eAAL,CAAqBO,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKN,eAAL,GAAuB,KAAKA,eAAL,CAAqBM,IAArB,CAA0B,IAA1B,CAAvB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBlC,IAAAA,CAAC,CAAC,sCAAD,CAAD,CAA0CmC,GAA1C,CAA8C;AAC1C,gBAAU,OADgC;AAE1C,kBAAY;AAF8B,KAA9C;AAIH;;AAEDH,EAAAA,UAAU,CAACI,CAAD,EAAIC,GAAJ,EAASC,KAAT,EAAgB;AACtB,QAAG,KAAKrB,KAAL,CAAWa,YAAd,EAA4B;AAAA,YAChBS,MADgB,GACLD,KADK,CAChBC,MADgB;AAExB,YAAMC,GAAG,GAAGD,MAAM,CAACC,GAAP,EAAZ;AACA,YAAMC,GAAG,GAAGF,MAAM,CAACE,GAAP,EAAZ;AAEA,WAAK7B,QAAL,CAAc;AACVQ,QAAAA,QAAQ,EAAEoB,GADA;AAEVnB,QAAAA,SAAS,EAAEoB,GAFD;AAGVX,QAAAA,YAAY,EAAE;AAHJ,OAAd;AAMA9B,MAAAA,CAAC,CAAC0C,QAAD,CAAD,CAAYC,EAAZ,CAAe,eAAf,EAAgC,qBAAhC,EAAuD,UAAUC,KAAV,EAAiB;AACpE5C,QAAAA,CAAC,CAAC,OAAD,CAAD,CAAW6C,OAAX,CAAmB,OAAnB;AACH,OAFD;AAGA7C,MAAAA,CAAC,CAAC,qBAAD,CAAD,CAAyB8C,KAAzB,CAA+B,MAA/B;AACH,KAfD,MAeO;AACH1C,MAAAA,IAAI,CAAC,WAAD,EAAc,+BAAd,EAA+C,OAA/C,CAAJ;AACH;AACJ;;AAmBD2C,EAAAA,UAAU,GAAG;AACT,WACI,oBAAC,MAAD;AACI,MAAA,IAAI,EAAE,KAAK9B,KAAL,CAAWP,MAAX,CAAkBS,IAD5B;AAEI,MAAA,QAAQ,EAAE;AAAEqB,QAAAA,GAAG,EAAE,KAAKvB,KAAL,CAAWP,MAAX,CAAkBU,QAAzB;AAAmCqB,QAAAA,GAAG,EAAE,KAAKxB,KAAL,CAAWP,MAAX,CAAkBW;AAA1D,OAFd;AAGI,MAAA,OAAO,EAAE,KAAKb,aAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAOH;;AAyBDe,EAAAA,YAAY,CAACyB,YAAD,EAAe;AACvB,SAAKpC,QAAL,CAAc;AAAEF,MAAAA,MAAM,EAAEsC;AAAV,KAAd;AACH;;AAEDxB,EAAAA,eAAe,GAAG;AACd,SAAKZ,QAAL,CAAc;AAAEiB,MAAAA,cAAc,EAAE;AAAlB,KAAd;AACH;;AAEDH,EAAAA,eAAe,GAAG;AACd,SAAKd,QAAL,CAAc;AAAEkB,MAAAA,YAAY,EAAE;AAAhB,KAAd;AACH;;AAEDL,EAAAA,MAAM,GAAG;AACL,SAAKwB,QAAL,CAAcC,SAAd,GAA0B,EAA1B;AACH;;AAEDvB,EAAAA,eAAe,GAAG;AACd,SAAKf,QAAL,CAAc;AAAEmB,MAAAA,YAAY,EAAE;AAAhB,KAAd;AACH;;AAEDoB,EAAAA,MAAM,GAAG;AACL,QAAItB,cAAc,GAAG,KAAKZ,KAAL,CAAWY,cAAhC;AAEA,UAAMuB,QAAQ,GAAG;AACbC,MAAAA,QAAQ,EAAE,QADG;AAEbC,MAAAA,KAAK,EAAE,MAFM;AAGbC,MAAAA,MAAM,EAAE;AAHK,KAAjB;AAMA,QAAIC,aAAa,GACb;AAAK,MAAA,KAAK,EAAC,+BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,KAAK,EAAC,cAAX;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,KAAK,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK/C,KAAL,CAAW2B,CAAX,CAAa,SAAb,CADL,CADJ,CADJ,CADJ;AAUA,QAAIC,GAAG,GACH;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AACI,MAAA,MAAM,EAAE,KAAK5B,KAAL,CAAWgD,MADvB;AAEI,MAAA,IAAI,EAAE,CAFV;AAGI,MAAA,KAAK,EAAEL,QAHX;AAII,MAAA,aAAa,EAAE;AAAEZ,QAAAA,GAAG,EAAE,MAAP;AAAeC,QAAAA,GAAG,EAAE;AAApB,OAJnB;AAKI,MAAA,OAAO,EAAE,KAAKT,UALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOMH,cAAc,IAAI,KAAKkB,UAAL,EAPxB,EAQI,oBAAC,UAAD;AACI,MAAA,MAAM,EAAE,KAAK9B,KAAL,CAAWH,YADvB;AAEI,MAAA,OAAO,EAAE,KAAKG,KAAL,CAAWF,iBAFxB;AAGI,MAAA,OAAO,EAAE,KAAKC,OAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAqC,MAAA,IAAI,EAAC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKC,KAAL,CAAWJ,aAAX,CAAyBM,IAA9B,CADJ,CALJ,CARJ,CADJ,EAmBI,oBAAC,kBAAD;AACI,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG,QADzB;AAEI,MAAA,SAAS,EAAE,KAAKH,KAAL,CAAWI,SAF1B;AAGI,MAAA,YAAY,EAAE,KAAKE,YAHvB;AAII,MAAA,eAAe,EAAE,KAAKC,eAJ1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBJ,EAyBI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,iCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,CADJ,EAII;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKf,KAAL,CAAW2B,CAAX,CAAa,sBAAb,CADL,CAJJ,EAOI;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK3B,KAAL,CAAW2B,CAAX,CAAa,0BAAb,CADL,CAPJ,EAUI;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK3B,KAAL,CAAW2B,CAAX,CAAa,2BAAb,CADL,CAVJ,EAaI;AAAI,MAAA,KAAK,EAAC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK3B,KAAL,CAAW2B,CAAX,CAAa,wBAAb,CADL,CAbJ,CADJ,CADJ,EAoBI;AAAO,MAAA,GAAG,EAAGsB,EAAD,IAAQ,KAAKT,QAAL,GAAgBS,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM7B,cAAc,IAAI,KAAKX,YAAL,EADxB,CApBJ,CADJ,CAzBJ,CADJ;AAsDA,QAAIyC,OAAO,GAAG,KAAK1C,KAAL,CAAW2C,SAAX,GAAuBJ,aAAvB,GAAuCnB,GAArD;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMsB,OADN,CADJ;AAKH;;AAzM0C;;AA4M/C,eAAezD,OAAO,CAClBL,gBAAgB,CACfY,KAAD,KAAY;AACVoD,EAAAA,MAAM,EAAE,yCADE;AAEVC,EAAAA,QAAQ,EAAErD,KAAK,CAACqD;AAFN,CAAZ,CADgB,CADE,EAOlB7D,eAAe,CAAC,QAAD,CAPG,CAAP,CAQXI,gBARW,CAAf","sourcesContent":["import React from 'react';\nimport { Map, Marker, GoogleApiWrapper, InfoWindow } from 'google-maps-react';\nimport GoogleLogbookModal from '../logbook/GoogleLogbookModal';\nimport $ from 'jquery';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'redux';\nimport DeleteLogbookButton from '../logbook/DeleteLogbookButton';\nimport swal from 'sweetalert';\n\nclass GoogleLogbookMap extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            latitude: '',\n            longitude: '',\n            marker: {},\n            activeMarker: {},\n            showingInfoWIndow: false,\n            selectedPlace: {},\n            isFinishMarker: false,\n            isAccessible: true,\n            isDeletedRow: false\n        }\n        this.onMapClick = this.onMapClick.bind(this);\n        this.updateMarker = this.updateMarker.bind(this);\n        this.setFinishMarker = this.setFinishMarker.bind(this);\n        this.setRef = this.setRef.bind(this);\n        this.setIsAccessible = this.setIsAccessible.bind(this);\n        this.setIsDeletedRow = this.setIsDeletedRow.bind(this);\n    }\n\n    componentDidMount() {\n        $(\".add-dive-google-container div:first\").css({\n            \"height\": \"350px\",\n            \"position\": \"static\"\n        });\n    }\n\n    onMapClick(t, map, coord) {\n        if(this.state.isAccessible) {\n            const { latLng } = coord;\n            const lat = latLng.lat();\n            const lng = latLng.lng();\n\n            this.setState({ \n                latitude: lat,\n                longitude: lng,\n                isAccessible: false\n            });\n\n            $(document).on('show.bs.modal', \"#modalLogbookCenter\", function (event) {\n                $('#name').trigger('focus');\n            });\n            $(\"#modalLogbookCenter\").modal('show');\n        } else {\n            swal(\"No access\", \"You can not mark 2nd location\", \"error\");\n        }\n    }\n\n    onMarkerClick = (props, marker, e) => {\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true\n        });\n    }\n\n    onClose = props => {\n        if(this.state.showingInfoWindow) {\n            this.setState({\n                showingInfoWindow: false,\n                activeMarker: null\n            });\n        }\n    };\n\n    showMarker() {\n        return (\n            <Marker \n                name={this.state.marker.name}\n                position={{ lat: this.state.marker.latitude, lng: this.state.marker.longitude }}\n                onClick={this.onMarkerClick}\n            />\n        );\n    }\n\n    showTableRow = () => {\n        return (\n            <tr>\n                <th scope=\"row\">\n                    <b>1</b>\n                </th>\n                <td>{this.state.marker.name}</td>\n                <td>{this.state.marker.latitude}</td>\n                <td>{this.state.marker.longitude}</td>\n                <td>\n                    <DeleteLogbookButton \n                        id={this.state.marker.id}\n                        updateMarker={this.updateMarker}\n                        setFinishMarker={this.setFinishMarker}\n                        setRef={this.setRef}\n                        setIsAccessible={this.setIsAccessible}\n                        setIsDeletedRow={this.setIsDeletedRow}\n                    />\n                </td>\n            </tr>\n        );\n    }\n\n    updateMarker(markerObject) {\n        this.setState({ marker: markerObject });\n    }\n\n    setFinishMarker() {\n        this.setState({ isFinishMarker: true });\n    }\n\n    setIsAccessible() {\n        this.setState({ isAccessible: true });\n    }\n\n    setRef() {\n        this.tbodyRef.innerHTML = \"\";\n    }\n\n    setIsDeletedRow() {\n        this.setState({ isDeletedRow: true });\n    }\n\n    render() {\n        let isFinishMarker = this.state.isFinishMarker;\n\n        const mapStyle = {\n            position: 'static',\n            width: '100%',\n            height: '350px',\n        }\n\n        let loadingScreen = (\n            <div class=\"d-flex justify-content-center\">\n                <div class=\"spinner-grow\" role=\"status\">\n                    <span class=\"sr-only\">\n                        {this.props.t(\"loading\")}\n                    </span>\n                </div>\n            </div>\n        )\n\n        let map = (\n            <div className=\"add-dive-google-container\">\n                <Map\n                    google={this.props.google}\n                    zoom={5}\n                    style={mapStyle}\n                    initialCenter={{ lat: 48.023, lng: 14.426}}\n                    onClick={this.onMapClick}\n                >\n                    { isFinishMarker && this.showMarker() }\n                    <InfoWindow\n                        marker={this.state.activeMarker}\n                        visible={this.state.showingInfoWindow}\n                        onClose={this.onClose}\n                    >\n                        <div className=\"alert alert-success\" role=\"alert\">\n                            <h4>{this.state.selectedPlace.name}</h4>\n                        </div>\n                    </InfoWindow>\n                </Map>\n                <GoogleLogbookModal \n                    latitude={this.state.latitude}\n                    longitude={this.state.longitude}\n                    updateMarker={this.updateMarker}\n                    setFinishMarker={this.setFinishMarker}\n                />\n                <div className=\"add-dive-table\">\n                    <table className=\"table table-striped table-hover\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">\n                                    <b>#</b>\n                                </th>\n                                <th scope=\"col\">\n                                    {this.props.t(\"googleMap.table.name\")}\n                                </th>\n                                <th scope=\"col\">\n                                    {this.props.t(\"googleMap.table.latitude\")}\n                                </th>\n                                <th scope=\"col\">\n                                    {this.props.t(\"googleMap.table.longitude\")}\n                                </th>\n                                <th scope=\"col\">\n                                    {this.props.t(\"googleMap.table.delete\")}\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody ref={(el) => this.tbodyRef = el}>\n                            { isFinishMarker && this.showTableRow() }\n                        </tbody>\n                    </table>\n                </div>\n            </div>     \n        )\n        let content = this.state.isLoading ? loadingScreen : map;\n\n        return (\n            <div>\n                { content }\n            </div>\n        );\n    }\n}\n\nexport default compose(\n    GoogleApiWrapper(\n    (props) => ({\n      apiKey: 'AIzaSyBgb4kpatKEjsOGsxplxFyRfw1K_wGhLTo',\n      language: props.language,\n    }\n  )),\n    withTranslation(\"common\")\n  )(GoogleLogbookMap);"]},"metadata":{},"sourceType":"module"}