{"ast":null,"code":"var _jsxFileName = \"/home/msi/Pulpit/Divelog/reactapp/src/components/twitter/TwitterFriendsList.js\";\nimport React from 'react';\nimport '../../css/TwitterFriendsList.css';\nimport AuthService from '../../util/AuthService';\nimport Friend from './Friend';\nimport { BACKEND_API_URL } from '../../actions/types';\n\nclass TwitterFriendsList extends React.Component {\n  constructor() {\n    super();\n    this.isMountedFriendsList = false;\n    this.state = {\n      friends: [],\n      isRetrieved: false,\n      isEmptyFriendsList: false,\n      isRateLimitExceeded: false\n    };\n    this.isError = false;\n    this.Auth = new AuthService();\n    this.renderFriendsList = this.renderFriendsList.bind(this);\n  }\n\n  componentDidMount() {\n    this.isMountedFriendsList = true;\n    let jwtToken = this.Auth.getRightSocialToken();\n    fetch(`${BACKEND_API_URL}/twitter/friends/list/${jwtToken}`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      if (response.status === 429) {\n        this.setState({\n          isRateLimitExceeded: true\n        });\n        this.isError = true;\n        return;\n      }\n\n      return response.json();\n    }).then(json => {\n      if (this.isMountedFriendsList && !this.isError) {\n        if (json.length !== 0) {\n          json.map((friend, index) => {\n            const element = {\n              id: friend.id,\n              screenName: friend.screenName,\n              name: friend.name,\n              pictureUrl: friend[\"400x400ProfileImageURL\"]\n            };\n            this.setState({\n              friends: this.state.friends.concat(element)\n            });\n          });\n          this.setState({\n            isRetrieved: true\n          });\n        } else {\n          this.setState({\n            isEmptyFriendsList: true\n          });\n        }\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  componentWillUnmount() {\n    this.isMountedFriendsList = false;\n  }\n\n  renderFriendsList() {\n    return this.state.friends.map((friend, index) => {\n      return React.createElement(\"li\", {\n        className: \"list-group-item twitter-friends-list-hover\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Friend, {\n        key: index,\n        id: friend.id,\n        screenName: friend.screenName,\n        name: friend.name,\n        pictureUrl: friend.pictureUrl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }));\n    });\n  }\n\n  render() {\n    let isRetrieved = this.state.isRetrieved;\n    let isRateLimitExceeded = this.state.isRateLimitExceeded;\n    return React.createElement(\"ul\", {\n      className: \"list-group twitter-friends-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"list-group-item twitter-friend-invite-divelog-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Invite to divelog\")), isRetrieved && this.renderFriendsList(), isRateLimitExceeded && React.createElement(\"span\", {\n      style: {\n        color: \"red\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Twitter rate limit exceeded\"));\n  }\n\n}\n\nexport default TwitterFriendsList;","map":{"version":3,"sources":["/home/msi/Pulpit/Divelog/reactapp/src/components/twitter/TwitterFriendsList.js"],"names":["React","AuthService","Friend","BACKEND_API_URL","TwitterFriendsList","Component","constructor","isMountedFriendsList","state","friends","isRetrieved","isEmptyFriendsList","isRateLimitExceeded","isError","Auth","renderFriendsList","bind","componentDidMount","jwtToken","getRightSocialToken","fetch","method","headers","then","response","status","setState","json","length","map","friend","index","element","id","screenName","name","pictureUrl","concat","catch","err","console","log","componentWillUnmount","render","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../css/TwitterFriendsList.css';\nimport AuthService from '../../util/AuthService';\nimport Friend from './Friend';\nimport { BACKEND_API_URL } from '../../actions/types';\n\nclass TwitterFriendsList extends React.Component {\n    isMountedFriendsList = false;\n\n    constructor() {\n        super();\n\n        this.state = {\n            friends: [],\n            isRetrieved: false,\n            isEmptyFriendsList: false,\n            isRateLimitExceeded: false\n        }\n        this.isError = false;\n        this.Auth = new AuthService();\n        this.renderFriendsList = this.renderFriendsList.bind(this);\n    }\n\n    componentDidMount() {\n        this.isMountedFriendsList = true;\n\n        let jwtToken = this.Auth.getRightSocialToken();\n\n        fetch(`${BACKEND_API_URL}/twitter/friends/list/${jwtToken}`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        }).then(response => { \n            if(response.status === 429) {\n                this.setState({ isRateLimitExceeded: true });\n                this.isError = true;\n                return;\n            }\n            return response.json() \n        }).then(json => {\n            if(this.isMountedFriendsList && !this.isError) {\n                if(json.length !== 0) {\n                    json.map((friend, index) => {\n                        const element = {\n                            id: friend.id,\n                            screenName: friend.screenName,\n                            name: friend.name,\n                            pictureUrl: friend[\"400x400ProfileImageURL\"]\n                        }\n                        this.setState({ friends: this.state.friends.concat(element) });\n                    });\n                    this.setState({ isRetrieved: true });\n                } else {\n                    this.setState({ isEmptyFriendsList: true });\n                }\n            }\n        }).catch(err => {\n            console.log(err);\n        });\n    }\n\n    componentWillUnmount() {\n        this.isMountedFriendsList = false;\n    }\n\n    renderFriendsList() {\n        return this.state.friends.map((friend, index) => {\n            return (\n                <li className=\"list-group-item twitter-friends-list-hover\">\n                    <Friend \n                        key={index}\n                        id={friend.id}\n                        screenName={friend.screenName}\n                        name={friend.name}\n                        pictureUrl={friend.pictureUrl}\n                    />\n                </li>\n            );\n        });\n    }\n\n    render() {\n        let isRetrieved = this.state.isRetrieved;\n        let isRateLimitExceeded = this.state.isRateLimitExceeded;\n\n        return (\n            <ul className=\"list-group twitter-friends-list\">\n                <li className=\"list-group-item twitter-friend-invite-divelog-btn\">\n                    <button className=\"btn btn-success\">Invite to divelog</button>\n                </li>\n                { isRetrieved && this.renderFriendsList() }\n                { \n                    isRateLimitExceeded &&\n                    <span style={{ color: \"red\" }}>Twitter rate limit exceeded</span>\n                }\n            </ul>\n        );\n    }\n}\n\nexport default TwitterFriendsList;"]},"metadata":{},"sourceType":"module"}