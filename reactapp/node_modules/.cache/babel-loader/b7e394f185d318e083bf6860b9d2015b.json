{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/logbook/PDFTableButton.js\";\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport jsPDF from 'jspdf';\n\nclass PDFTableButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      partnerName: '',\n      partnerSurname: '',\n      marker: {},\n      entryTime: '',\n      exitTime: '',\n      averageDepth: 0.0,\n      maxDepth: 0.0,\n      visibility: 0.0,\n      waterTemperature: 0.0,\n      airTemperature: 0.0,\n      cylinderCapacity: '',\n      divingSuit: 'NONE',\n      waterType: 'NONE',\n      waterEntryType: 'NONE',\n      ballast: 0.0,\n      glovesType: 'NONE',\n      divingType: 'NONE',\n      comment: ''\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n\n  onClick() {\n    const id = this.props.id;\n    let jwtToken = localStorage.getItem(\"JwtToken\");\n    fetch(\"/pdf/logbook/\".concat(id, \"/\").concat(jwtToken), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'content-type': 'application/json'\n      }\n    }).then(response => response.json()).then(jsonData => {\n      let time = this.ConvertTime.convertTime(jsonData.entryTime, jsonData.exitTime, true);\n      const markerElement = {\n        id: jsonData.marker.id,\n        name: jsonData.marker.name,\n        latitude: jsonData.marker.latitude,\n        longitude: jsonData.marker.longitude\n      };\n      this.setState({\n        partnerName: jsonData.partnerName,\n        partnerSurname: jsonData.partnerSurname,\n        marker: markerElement,\n        entryTime: time[0],\n        exitTime: time[1],\n        averageDepth: jsonData.averageDepth,\n        maxDepth: jsonData.maxDepth,\n        visibility: jsonData.visibility,\n        waterTemperature: jsonData.waterTemperature,\n        airTemperature: jsonData.airTemperature,\n        cylinderCapacity: jsonData.cylinderCapacity,\n        divingSuit: jsonData.divingSuit,\n        waterType: jsonData.waterType,\n        waterEntryType: jsonData.waterEntryType,\n        ballast: jsonData.ballast,\n        glovesType: jsonData.glovesType,\n        divingType: jsonData.divingType,\n        comment: jsonData.comment\n      });\n    });\n  }\n\n  onClick() {}\n\n  render() {\n    return React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.onClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"PDF\");\n  }\n\n}\n\nexport default withTranslation(\"common\")(PDFTableButton);","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/logbook/PDFTableButton.js"],"names":["React","withTranslation","jsPDF","PDFTableButton","Component","constructor","props","state","partnerName","partnerSurname","marker","entryTime","exitTime","averageDepth","maxDepth","visibility","waterTemperature","airTemperature","cylinderCapacity","divingSuit","waterType","waterEntryType","ballast","glovesType","divingType","comment","onClick","bind","id","jwtToken","localStorage","getItem","fetch","method","headers","then","response","json","jsonData","time","ConvertTime","convertTime","markerElement","name","latitude","longitude","setState","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport jsPDF from 'jspdf';\n\nclass PDFTableButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            partnerName: '',\n            partnerSurname: '',\n            marker: {},\n            entryTime: '',\n            exitTime: '',\n            averageDepth: 0.0,\n            maxDepth: 0.0,\n            visibility: 0.0,\n            waterTemperature: 0.0,\n            airTemperature: 0.0,\n            cylinderCapacity: '',\n            divingSuit: 'NONE',\n            waterType: 'NONE',\n            waterEntryType: 'NONE',\n            ballast: 0.0,\n            glovesType: 'NONE',\n            divingType: 'NONE',\n            comment: ''\n        }\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick() {\n        const id = this.props.id;\n        let jwtToken = localStorage.getItem(\"JwtToken\");\n\n        fetch(`/pdf/logbook/${id}/${jwtToken}`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'content-type': 'application/json'\n            }\n        })\n        .then(response => response.json())\n        .then(jsonData => {\n            let time = this.ConvertTime.convertTime(jsonData.entryTime, jsonData.exitTime, true);\n\n            const markerElement = {\n                id: jsonData.marker.id,\n                name: jsonData.marker.name,\n                latitude: jsonData.marker.latitude,\n                longitude: jsonData.marker.longitude\n            }\n\n            this.setState({\n                partnerName: jsonData.partnerName,\n                partnerSurname: jsonData.partnerSurname,\n                marker: markerElement,\n                entryTime: time[0],\n                exitTime: time[1],\n                averageDepth: jsonData.averageDepth,\n                maxDepth: jsonData.maxDepth,\n                visibility: jsonData.visibility,\n                waterTemperature: jsonData.waterTemperature,\n                airTemperature: jsonData.airTemperature,\n                cylinderCapacity: jsonData.cylinderCapacity,\n                divingSuit: jsonData.divingSuit,\n                waterType: jsonData.waterType,\n                waterEntryType: jsonData.waterEntryType,\n                ballast: jsonData.ballast,\n                glovesType: jsonData.glovesType,\n                divingType: jsonData.divingType,\n                comment: jsonData.comment\n            });\n        }); \n    }\n\n    onClick() {\n\n    }\n\n    render() {\n        return (\n            <button className=\"btn btn-primary\"\n                onClick={this.onClick}\n            >\n                PDF\n            </button>\n        );\n    }\n}\n\nexport default withTranslation(\"common\")(PDFTableButton);"]},"metadata":{},"sourceType":"module"}