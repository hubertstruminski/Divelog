{"ast":null,"code":"var _jsxFileName = \"/home/msi/Pulpit/Divelog/reactapp/src/components/twitter/twitter-home/TwitterHome.js\";\nimport React from 'react';\nimport '../../../css/TimelineLikes.css';\nimport withAuth from '../../../util/withAuth';\nimport AuthService from '../../../util/AuthService';\nimport TwitterCategoriesCard from '../TwitterCategoriesCard';\nimport SearchTwitterPeople from '../SearchTwitterPeople';\nimport AvailableTrends from '../AvailableTrends';\nimport TwitterFriendsList from '../TwitterFriendsList';\nimport $ from 'jquery';\nimport TwitterHomeAdd from './TwitterHomeAdd';\nimport { BACKEND_API_URL } from '../../../actions/types';\n\nclass TwitterHome extends React.Component {\n  constructor(props) {\n    super(props);\n    this.isMountedTwitter = false;\n    this.state = {\n      accessToken: '',\n      email: '',\n      name: '',\n      userID: '',\n      pictureUrl: '',\n      providerId: '',\n      screenName: '',\n      tokenSecret: '',\n      tweets: '',\n      isTweetsRetrieved: false,\n      isLoading: true\n    };\n    this.Auth = new AuthService();\n    this.addNewTweet = this.addNewTweet.bind(this);\n  }\n\n  componentDidMount() {\n    this.isMountedTwitter = true;\n    let jwtToken = this.Auth.getRightSocialToken();\n    fetch(`${BACKEND_API_URL}/getuserdata/${jwtToken}`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(jsonData => {\n      if (this.isMountedTwitter) {\n        this.setState({\n          accessToken: jsonData.accessToken,\n          email: jsonData.email,\n          name: jsonData.name,\n          twitterUserID: jsonData.twitterUserID,\n          pictureUrl: jsonData.pictureUrl,\n          providerId: jsonData.providerId,\n          screenName: jsonData.screenName,\n          tokenSecret: jsonData.tokenSecret\n        }, () => {\n          fetch(`${BACKEND_API_URL}/twitter/home/timeline/${jwtToken}`, {\n            method: 'GET',\n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json'\n            }\n          }).then(response => {\n            console.log(response.status);\n            return response.text();\n          }).then(text => {\n            this.setState({\n              tweets: text,\n              isLoading: false\n            }, () => {\n              $(\".home-timeline-container\").css({\n                display: \"block\"\n              });\n              $(\".home-timeline-container\").html(text);\n              $(\".twitter-tweet\").attr(\"data-width\", \"520px\");\n            });\n          });\n        });\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  addNewTweet(newTweet) {\n    this.setState({\n      tweets: newTweet + this.state.tweets\n    }, () => {\n      $(\".home-timeline-container\").html(this.state.tweets);\n      $(\".twitter-tweet\").attr(\"data-width\", \"520px\");\n    });\n  }\n\n  componentWillUnmount() {\n    this.isMountedTwitter = false;\n  }\n\n  render() {\n    let isLoading = this.state.isLoading;\n    return React.createElement(\"div\", {\n      className: \"twitter-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-grid-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-grid-item-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-left-categories-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-profil-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.state.name), React.createElement(TwitterCategoriesCard, {\n      pictureUrl: this.state.pictureUrl,\n      screenName: this.state.screenName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"twitter-home-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(TwitterHomeAdd, {\n      pictureUrl: this.state.pictureUrl,\n      addNewTweet: this.addNewTweet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"home-timeline-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, isLoading && React.createElement(\"div\", {\n      className: \"spinner-border text-primary\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      class: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Loading...\")))), React.createElement(\"div\", {\n      className: \"twitter-grid-item-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-rl-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-groups-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(SearchTwitterPeople, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }), React.createElement(AvailableTrends, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"twitter-rr-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-friends-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default withAuth(TwitterHome, {\n  twitterHome: true\n});","map":{"version":3,"sources":["/home/msi/Pulpit/Divelog/reactapp/src/components/twitter/twitter-home/TwitterHome.js"],"names":["React","withAuth","AuthService","TwitterCategoriesCard","SearchTwitterPeople","AvailableTrends","TwitterFriendsList","$","TwitterHomeAdd","BACKEND_API_URL","TwitterHome","Component","constructor","props","isMountedTwitter","state","accessToken","email","name","userID","pictureUrl","providerId","screenName","tokenSecret","tweets","isTweetsRetrieved","isLoading","Auth","addNewTweet","bind","componentDidMount","jwtToken","getRightSocialToken","fetch","method","headers","then","response","json","jsonData","setState","twitterUserID","console","log","status","text","css","display","html","attr","catch","err","newTweet","componentWillUnmount","render","twitterHome"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../../css/TimelineLikes.css';\nimport withAuth from '../../../util/withAuth';\nimport AuthService from '../../../util/AuthService';\nimport TwitterCategoriesCard from '../TwitterCategoriesCard';\nimport SearchTwitterPeople from '../SearchTwitterPeople';\nimport AvailableTrends from '../AvailableTrends';\nimport TwitterFriendsList from '../TwitterFriendsList';\nimport $ from 'jquery';\nimport TwitterHomeAdd from './TwitterHomeAdd';\nimport { BACKEND_API_URL } from '../../../actions/types';\n\nclass TwitterHome extends React.Component {\n    isMountedTwitter = false;\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            accessToken: '',\n            email: '',\n            name: '',\n            userID: '',\n            pictureUrl: '',\n            providerId: '',\n            screenName: '',\n            tokenSecret: '',\n            tweets: '',\n            isTweetsRetrieved: false,\n            isLoading: true\n        }\n        this.Auth = new AuthService();\n\n        this.addNewTweet = this.addNewTweet.bind(this);\n    }\n\n    componentDidMount() {\n        this.isMountedTwitter = true;\n\n        let jwtToken = this.Auth.getRightSocialToken();\n\n        fetch(`${BACKEND_API_URL}/getuserdata/${jwtToken}`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(response => response.json())\n        .then(jsonData => {\n            if(this.isMountedTwitter) {\n                this.setState({\n                    accessToken: jsonData.accessToken,\n                    email: jsonData.email,\n                    name: jsonData.name,\n                    twitterUserID: jsonData.twitterUserID,\n                    pictureUrl: jsonData.pictureUrl,\n                    providerId: jsonData.providerId,\n                    screenName: jsonData.screenName,\n                    tokenSecret: jsonData.tokenSecret\n                }, () => {\n                    fetch(`${BACKEND_API_URL}/twitter/home/timeline/${jwtToken}`, {\n                        method: 'GET',\n                        headers: {\n                            'Accept': 'application/json',\n                            'Content-Type': 'application/json'\n                        }\n                    }).then(response => {\n                        console.log(response.status);\n                        return response.text();\n                    }).then(text => {\n                        this.setState({ \n                            tweets: text,\n                            isLoading: false\n                        }, () => {\n                            $(\".home-timeline-container\").css({ display: \"block\" });\n                            $(\".home-timeline-container\").html(text);\n                            $(\".twitter-tweet\").attr(\"data-width\", \"520px\");\n                        });                      \n                    });\n                });\n            }\n        }).catch(err => {\n            console.log(err);\n        });   \n    }\n\n    addNewTweet(newTweet) {\n        this.setState({ tweets: newTweet + this.state.tweets }, () => {\n            $(\".home-timeline-container\").html(this.state.tweets);\n            $(\".twitter-tweet\").attr(\"data-width\", \"520px\");\n        });\n    }\n\n    componentWillUnmount() {\n        this.isMountedTwitter = false;\n    }\n\n    render() {\n        let isLoading = this.state.isLoading;\n        return (\n            <div className=\"twitter-container\">\n                <div className=\"twitter-grid-container\">\n                    <div className=\"twitter-grid-item-1\">\n                        <div className=\"twitter-left-categories-container\">\n                            <div className=\"twitter-profil-container\">\n                                { this.state.name }\n                            </div>\n                            <TwitterCategoriesCard\n                                pictureUrl={this.state.pictureUrl}\n                                screenName={this.state.screenName}\n                            />    \n                        </div>\n                    </div>\n                    <div className=\"twitter-home-container\">\n                        <TwitterHomeAdd \n                            pictureUrl={this.state.pictureUrl}\n                            addNewTweet={this.addNewTweet}\n                        />\n                        <div className=\"home-timeline-container\">\n                            { isLoading &&\n                                <div \n                                    className='spinner-border text-primary' \n                                    role='status'\n                                >\n                                    <span class='sr-only'>\n                                        Loading...\n                                    </span>\n                                </div>\n                            }\n                        </div>\n                    </div>\n                    <div className=\"twitter-grid-item-3\">\n                        <div className=\"twitter-rl-container\">\n                            <div className=\"twitter-groups-container\">\n                                <SearchTwitterPeople />\n                                <AvailableTrends />\n                            </div>\n                        </div>\n                        <div className=\"twitter-rr-container\">\n                            <div className=\"twitter-friends-container\">\n                                {/* <TwitterFriendsList /> */}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withAuth(TwitterHome, { twitterHome: true });"]},"metadata":{},"sourceType":"module"}