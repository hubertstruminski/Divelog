{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/twitter/AvailableTrends.js\";\nimport React from 'react';\nimport '../../css/AvailableTrends.css';\nimport AuthService from '../../util/AuthService';\nimport swal from 'sweetalert';\n\nclass AvailableTrends extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      longitude: 0.0,\n      latitude: 0.0,\n      isGeolocationRejected: false,\n      isGeolocationNotSupported: false\n    };\n    this.Auth = new AuthService();\n    this.twitterJwtToken = this.Auth.getTwitterToken();\n    this.geolocationError = this.geolocationError.bind(this);\n    this.geolocationSuccess = this.geolocationSuccess.bind(this);\n  }\n\n  componentDidMount() {\n    if (!navigator.geolocation) {\n      this.setState({\n        isGeolocationNotSupported: true\n      });\n    } else {\n      navigator.geolocation.getCurrentPosition(this.geolocationSuccess, this.geolocationError);\n    }\n  }\n\n  geolocationError() {\n    this.setState({\n      isGeolocationRejected: true\n    });\n  }\n\n  geolocationSuccess(position) {\n    this.setState({\n      latitude: position.coords.latitude,\n      longitude: position.coords.longitude\n    }, () => {\n      fetch(\"/twitter/available/trends/\".concat(this.state.latitude, \"/\").concat(this.state.longitude, \"/\").concat(this.twitterJwtToken), {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json, text/plain, */*',\n          'content-type': 'application/json'\n        }\n      }).then(response => response.json()).then(json => {\n        console.log(json);\n      });\n    });\n  }\n\n  rejectGeolocation(isGeolocationRejected) {\n    if (isGeolocationRejected) {\n      return React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Location process rejected.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), \"Unable to retrieve twitter trends.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), \"Turn on your location.\");\n    }\n\n    return null;\n  }\n\n  render() {\n    let isGeolocationRejected = this.state.isGeolocationRejected;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, isGeolocationRejected && React.createElement(\"div\", {\n      className: \"geolocation-twitter-trends-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.rejectGeolocation(isGeolocationRejected))));\n  }\n\n}\n\nexport default AvailableTrends;","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/twitter/AvailableTrends.js"],"names":["React","AuthService","swal","AvailableTrends","Component","constructor","props","state","longitude","latitude","isGeolocationRejected","isGeolocationNotSupported","Auth","twitterJwtToken","getTwitterToken","geolocationError","bind","geolocationSuccess","componentDidMount","navigator","geolocation","setState","getCurrentPosition","position","coords","fetch","method","headers","then","response","json","console","log","rejectGeolocation","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,+BAAP;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,MAAMC,eAAN,SAA8BH,KAAK,CAACI,SAApC,CAA8C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,GADF;AAETC,MAAAA,QAAQ,EAAE,GAFD;AAGTC,MAAAA,qBAAqB,EAAE,KAHd;AAITC,MAAAA,yBAAyB,EAAE;AAJlB,KAAb;AAMA,SAAKC,IAAL,GAAY,IAAIX,WAAJ,EAAZ;AACA,SAAKY,eAAL,GAAuB,KAAKD,IAAL,CAAUE,eAAV,EAAvB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBD,IAAxB,CAA6B,IAA7B,CAA1B;AACH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChB,QAAG,CAACC,SAAS,CAACC,WAAd,EAA2B;AACvB,WAAKC,QAAL,CAAc;AAAEV,QAAAA,yBAAyB,EAAE;AAA7B,OAAd;AACH,KAFD,MAEO;AACHQ,MAAAA,SAAS,CAACC,WAAV,CAAsBE,kBAAtB,CAAyC,KAAKL,kBAA9C,EAAkE,KAAKF,gBAAvE;AACH;AAEJ;;AAEDA,EAAAA,gBAAgB,GAAG;AACf,SAAKM,QAAL,CAAc;AAAEX,MAAAA,qBAAqB,EAAE;AAAzB,KAAd;AACH;;AAEDO,EAAAA,kBAAkB,CAACM,QAAD,EAAW;AACzB,SAAKF,QAAL,CAAc;AACVZ,MAAAA,QAAQ,EAAEc,QAAQ,CAACC,MAAT,CAAgBf,QADhB;AAEVD,MAAAA,SAAS,EAAEe,QAAQ,CAACC,MAAT,CAAgBhB;AAFjB,KAAd,EAGG,MAAM;AACLiB,MAAAA,KAAK,qCAA8B,KAAKlB,KAAL,CAAWE,QAAzC,cAAqD,KAAKF,KAAL,CAAWC,SAAhE,cAA6E,KAAKK,eAAlF,GAAqG;AACtGa,QAAAA,MAAM,EAAE,KAD8F;AAEtGC,QAAAA,OAAO,EAAE;AACL,oBAAU,mCADL;AAEL,0BAAgB;AAFX;AAF6F,OAArG,CAAL,CAMGC,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANpB,EAOCF,IAPD,CAOME,IAAI,IAAI;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,OATD;AAUH,KAdD;AAeH;;AAEDG,EAAAA,iBAAiB,CAACvB,qBAAD,EAAwB;AACrC,QAAGA,qBAAH,EAA0B;AACtB,aACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,wCAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,2BADJ;AASH;;AACD,WAAO,IAAP;AACH;;AAGDwB,EAAAA,MAAM,GAAG;AACL,QAAIxB,qBAAqB,GAAG,KAAKH,KAAL,CAAWG,qBAAvC;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMA,qBAAqB,IACnB;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKuB,iBAAL,CAAuBvB,qBAAvB,CADL,CAFR,CADJ,CADJ;AAYH;;AA9EyC;;AAiF9C,eAAeP,eAAf","sourcesContent":["import React from 'react';\nimport '../../css/AvailableTrends.css';\nimport AuthService from '../../util/AuthService';\nimport swal from 'sweetalert';\n\nclass AvailableTrends extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            longitude: 0.0,\n            latitude: 0.0,\n            isGeolocationRejected: false,\n            isGeolocationNotSupported: false\n        }\n        this.Auth = new AuthService();\n        this.twitterJwtToken = this.Auth.getTwitterToken();\n        this.geolocationError = this.geolocationError.bind(this);\n        this.geolocationSuccess = this.geolocationSuccess.bind(this);\n    }\n\n    componentDidMount() {\n        if(!navigator.geolocation) {\n            this.setState({ isGeolocationNotSupported: true });\n        } else {\n            navigator.geolocation.getCurrentPosition(this.geolocationSuccess, this.geolocationError);\n        }\n        \n    }\n\n    geolocationError() {\n        this.setState({ isGeolocationRejected: true });\n    }\n\n    geolocationSuccess(position) {\n        this.setState({ \n            latitude: position.coords.latitude,\n            longitude: position.coords.longitude\n        }, () => {\n            fetch(`/twitter/available/trends/${this.state.latitude}/${this.state.longitude}/${this.twitterJwtToken}`, {\n                method: 'GET',\n                headers: {\n                    'Accept': 'application/json, text/plain, */*',\n                    'content-type': 'application/json'\n                }\n            }).then(response => response.json())\n            .then(json => {\n                console.log(json);\n            });\n        });\n    }\n\n    rejectGeolocation(isGeolocationRejected) {\n        if(isGeolocationRejected) {\n            return (\n                <div className=\"alert alert-danger\">\n                    Location process rejected.\n                    <br />\n                    Unable to retrieve twitter trends.\n                    <br />\n                    Turn on your location.\n                </div>\n            );\n        }\n        return null;\n    }\n\n\n    render() {\n        let isGeolocationRejected = this.state.isGeolocationRejected;\n\n        return (\n            <div>\n                <ul className=\"list-group\">\n                    { isGeolocationRejected &&\n                        <div className=\"geolocation-twitter-trends-box\">\n                            {this.rejectGeolocation(isGeolocationRejected)}\n                        </div>\n                    }\n\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default AvailableTrends;"]},"metadata":{},"sourceType":"module"}