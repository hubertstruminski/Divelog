{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/Layout/TwitterGroupsCard.js\";\nimport React from 'react';\nimport '../../css/TwitterGroupsCard.css';\nimport AuthService from '../../util/AuthService';\nimport axios from 'axios';\nimport $ from 'jquery;';\n\nclass TwitterGroupsCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchPeople: '',\n      timeInterval: 0,\n      searchPeopleList: [],\n      isSearched: false\n    };\n    this.Auth = new AuthService();\n    this.twitterJwtToken = this.Auth.getTwitterToken();\n    this.onTwitterSearchChange = this.onTwitterSearchChange.bind(this);\n    this.getUsers = this.getUsers.bind(this);\n  }\n\n  onTwitterSearchChange(e) {\n    this.setState({\n      searchPeople: e.target.value\n    }, () => {\n      if (this.state.searchPeople && this.state.searchPeople.length > 1) {\n        if (this.state.searchPeople.length % 2 == 0) {\n          this.getUsers();\n        }\n      } else if (!this.state.searchPeople) {\n        console.log(\"error -> ...\");\n      }\n    });\n  }\n\n  getUsers() {\n    let searchPeople = this.state.searchPeople;\n    axios({\n      url: \"/twitter/users/search/\".concat(this.state.searchPeople, \"/\").concat(this.twitterJwtToken),\n      method: 'POST',\n      body: searchPeople,\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'content-type': 'application/json'\n      }\n    }).then(response => {\n      console.log(response);\n      response.data.map((person, index) => {\n        const element = {\n          id: person.id,\n          name: person.name,\n          pictureUrl: person['400x400ProfileImageURL'],\n          screenName: person.screenName,\n          verified: person.verified\n        };\n        this.setState({\n          searchPeopleList: this.state.searchPeopleList.concat(element)\n        });\n      });\n      this.setState({\n        isSearched: true\n      });\n    });\n  }\n\n  getPeopleList() {\n    return this.state.searchPeopleList.map((person, index) => {\n      return React.createElement(\"li\", {\n        className: \"list-group-item list-group-search-person\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"search-li-item-float search-1-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: person.pictureUrl,\n        className: \"search-picture-person\",\n        alt: \"Person\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"search-li-item-float search-2-div\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, person.name, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), \"@\", person.screenName));\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      id: \"search-twitter-people\",\n      className: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.searchPeople,\n      placeholder: \"Search twitter people\",\n      className: \"form-control input-search-twitter\",\n      onChange: this.onTwitterSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default TwitterGroupsCard;","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/Layout/TwitterGroupsCard.js"],"names":["React","AuthService","axios","$","TwitterGroupsCard","Component","constructor","props","state","searchPeople","timeInterval","searchPeopleList","isSearched","Auth","twitterJwtToken","getTwitterToken","onTwitterSearchChange","bind","getUsers","e","setState","target","value","length","console","log","url","method","body","headers","then","response","data","map","person","index","element","id","name","pictureUrl","screenName","verified","concat","getPeopleList","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../css/TwitterGroupsCard.css';\nimport AuthService from '../../util/AuthService';\nimport axios from 'axios';\nimport $ from 'jquery;'\n\nclass TwitterGroupsCard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchPeople: '',\n            timeInterval: 0,\n            searchPeopleList: [],\n            isSearched: false\n        }\n        this.Auth = new AuthService();\n        this.twitterJwtToken = this.Auth.getTwitterToken();\n\n        this.onTwitterSearchChange = this.onTwitterSearchChange.bind(this);\n        this.getUsers = this.getUsers.bind(this);\n    }\n\n    onTwitterSearchChange(e) {\n        this.setState({\n            searchPeople: e.target.value\n        }, () => {\n            if(this.state.searchPeople && this.state.searchPeople.length > 1) {\n                if(this.state.searchPeople.length % 2 == 0) {\n                    this.getUsers();\n                }\n            } else if(!this.state.searchPeople) {\n                console.log(\"error -> ...\");\n            }\n        });\n    }\n\n    getUsers() {\n        let searchPeople = this.state.searchPeople;\n        axios({ \n            url: `/twitter/users/search/${this.state.searchPeople}/${this.twitterJwtToken}`,\n            method: 'POST',\n            body: searchPeople,\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'content-type': 'application/json'\n            }\n        }).then(response => {\n            console.log(response);\n            response.data.map((person, index) => {\n                const element = {\n                    id: person.id,\n                    name: person.name,\n                    pictureUrl: person['400x400ProfileImageURL'],\n                    screenName: person.screenName,\n                    verified: person.verified\n                }\n                this.setState({ searchPeopleList: this.state.searchPeopleList.concat(element) });\n            }); \n            this.setState({ isSearched: true });\n        });\n    }\n\n    getPeopleList() {\n        return this.state.searchPeopleList.map((person, index) => {\n            return (\n                <li className=\"list-group-item list-group-search-person\">\n                    <div className=\"search-li-item-float search-1-div\">\n                        <img src={person.pictureUrl} className=\"search-picture-person\" alt=\"Person\" />\n                    </div>\n                    <div className=\"search-li-item-float search-2-div\">\n                        {person.name}\n                        <br />\n                        @{person.screenName}\n                    </div>\n                </li>\n            );\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <ul className=\"list-group\">\n                    <li id=\"search-twitter-people\" className=\"list-group-item\">\n                        <input \n                            type=\"text\"\n                            value={this.state.searchPeople}\n                            placeholder=\"Search twitter people\"\n                            className=\"form-control input-search-twitter\"\n                            onChange={this.onTwitterSearchChange}\n                        />\n                    </li>\n                    <li>\n\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default TwitterGroupsCard;"]},"metadata":{},"sourceType":"module"}