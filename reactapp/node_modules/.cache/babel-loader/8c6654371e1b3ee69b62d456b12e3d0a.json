{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/Divelog/reactapp/src/components/twitter/twitter-explore/TwitterExplore.js\";\nimport React from 'react';\nimport '../../../css/twitter-explore/TwitterExplore.css';\nimport withAuth from '../../../util/withAuth';\nimport AuthService from '../../../util/AuthService';\nimport TwitterCategoriesCard from '../TwitterCategoriesCard';\nimport SearchTwitterPeople from '../SearchTwitterPeople';\nimport AvailableTrends from '../AvailableTrends';\nimport TwitterExploreSearch from './TwitterExploreSearch';\nimport $ from 'jquery';\nimport { BACKEND_API_URL } from '../../../actions/types';\nimport swal from 'sweetalert';\n\nclass TwitterExplore extends React.Component {\n  constructor(props) {\n    super(props);\n    this.isMountedTwitterExplore = false;\n    this.state = {\n      accessToken: '',\n      email: '',\n      name: '',\n      twitterUserID: '',\n      pictureUrl: '',\n      providerId: '',\n      screenName: '',\n      tokenSecret: '',\n      searchTweets: ''\n    };\n    this.Auth = new AuthService();\n    this.addNewTweet = this.addNewTweet.bind(this);\n  }\n\n  componentDidMount() {\n    this.isMountedTwitterExplore = true;\n    console.log(\"HUBERT STRUMIÅƒSKI\");\n    console.log(this.props);\n    let jwtToken = this.Auth.getRightSocialToken();\n    fetch(\"\".concat(BACKEND_API_URL, \"/getuserdata/\").concat(jwtToken), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      return response.json();\n    }).then(jsonData => {\n      if (this.isMountedTwitterExplore) {\n        this.setState({\n          accessToken: jsonData.accessToken,\n          email: jsonData.email,\n          name: jsonData.name,\n          twitterUserID: jsonData.twitterUserID,\n          pictureUrl: jsonData.pictureUrl,\n          providerId: jsonData.providerId,\n          screenName: jsonData.screenName,\n          tokenSecret: jsonData.tokenSecret\n        });\n      }\n    }).catch(err => {\n      swal(\"Error\", \"Can not retrieve user data.\", \"error\");\n    });\n  }\n\n  addNewTweet(newTweets) {\n    this.setState({\n      searchTweets: newTweets\n    }, () => {\n      $(\".twitter-explore-search-tweets-container\").html(this.state.searchTweets);\n      $(\".twitter-tweet\").attr(\"data-width\", \"520px\");\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"twitter-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-grid-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-grid-item-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-left-categories-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-profil-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.name), React.createElement(TwitterCategoriesCard, {\n      pictureUrl: this.state.pictureUrl,\n      screenName: this.state.screenName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"feed-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(TwitterExploreSearch, {\n      addNewTweet: this.addNewTweet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"twitter-explore-search-tweets-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"twitter-grid-item-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-rl-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-groups-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(SearchTwitterPeople, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(AvailableTrends, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"twitter-rr-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-friends-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    })))));\n  }\n\n} // export default withAuth(TwitterExplore, {  twitterExplore: true });\n\n\nexport default TwitterExplore;","map":{"version":3,"sources":["/home/huber/Pulpit/Divelog/reactapp/src/components/twitter/twitter-explore/TwitterExplore.js"],"names":["React","withAuth","AuthService","TwitterCategoriesCard","SearchTwitterPeople","AvailableTrends","TwitterExploreSearch","$","BACKEND_API_URL","swal","TwitterExplore","Component","constructor","props","isMountedTwitterExplore","state","accessToken","email","name","twitterUserID","pictureUrl","providerId","screenName","tokenSecret","searchTweets","Auth","addNewTweet","bind","componentDidMount","console","log","jwtToken","getRightSocialToken","fetch","method","headers","then","response","json","jsonData","setState","catch","err","newTweets","html","attr","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../../css/twitter-explore/TwitterExplore.css';\nimport withAuth from '../../../util/withAuth';\nimport AuthService from '../../../util/AuthService';\nimport TwitterCategoriesCard from '../TwitterCategoriesCard';\nimport SearchTwitterPeople from '../SearchTwitterPeople';\nimport AvailableTrends from '../AvailableTrends';\nimport TwitterExploreSearch from './TwitterExploreSearch';\nimport $ from 'jquery';\nimport { BACKEND_API_URL } from '../../../actions/types';\nimport swal from 'sweetalert';\n\nclass TwitterExplore extends React.Component {\n    isMountedTwitterExplore = false;\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            accessToken: '',\n            email: '',\n            name: '',\n            twitterUserID: '',\n            pictureUrl: '',\n            providerId: '',\n            screenName: '',\n            tokenSecret: '',\n            searchTweets: ''\n        }\n        this.Auth = new AuthService();\n        this.addNewTweet = this.addNewTweet.bind(this);\n    }\n\n    componentDidMount() {\n        this.isMountedTwitterExplore = true;\n\n        console.log(\"HUBERT STRUMIÅƒSKI\");\n        console.log(this.props);\n\n        let jwtToken = this.Auth.getRightSocialToken();\n\n        fetch(`${BACKEND_API_URL}/getuserdata/${jwtToken}`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        })\n        .then(response => { return response.json() })\n        .then(jsonData => {\n            if(this.isMountedTwitterExplore) {\n                this.setState({\n                    accessToken: jsonData.accessToken,\n                    email: jsonData.email,\n                    name: jsonData.name,\n                    twitterUserID: jsonData.twitterUserID,\n                    pictureUrl: jsonData.pictureUrl,\n                    providerId: jsonData.providerId,\n                    screenName: jsonData.screenName,\n                    tokenSecret: jsonData.tokenSecret\n                });\n            }\n        }).catch(err => {\n            swal(\"Error\", \"Can not retrieve user data.\", \"error\");\n        });\n\n        \n    }\n\n    addNewTweet(newTweets) {\n        this.setState({ searchTweets: newTweets }, () => {\n            $(\".twitter-explore-search-tweets-container\").html(this.state.searchTweets);\n            $(\".twitter-tweet\").attr(\"data-width\", \"520px\");\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"twitter-container\">\n                <div className=\"twitter-grid-container\">\n                    <div className=\"twitter-grid-item-1\">\n                        <div className=\"twitter-left-categories-container\">\n                            <div className=\"twitter-profil-container\">\n                                { this.state.name }\n                            </div>\n                            <TwitterCategoriesCard\n                                pictureUrl={this.state.pictureUrl}\n                                screenName={this.state.screenName}\n                            />\n                        </div>\n                    </div>\n                    <div className=\"feed-container\">\n                        <TwitterExploreSearch \n                            addNewTweet={this.addNewTweet}\n                        />\n                        <div className=\"twitter-explore-search-tweets-container\"></div>\n                    </div>\n                    <div className=\"twitter-grid-item-3\">\n                        <div className=\"twitter-rl-container\">\n                            <div className=\"twitter-groups-container\">\n                                    <SearchTwitterPeople />\n                                    <AvailableTrends />\n                            </div>\n                        </div>\n                        <div className=\"twitter-rr-container\">\n                            <div className=\"twitter-friends-container\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n// export default withAuth(TwitterExplore, {  twitterExplore: true });\nexport default TwitterExplore;"]},"metadata":{},"sourceType":"module"}