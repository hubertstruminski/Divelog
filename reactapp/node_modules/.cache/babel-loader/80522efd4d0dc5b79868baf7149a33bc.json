{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/logbook/AddDive.js\";\nimport React from 'react';\nimport '../../css/AddDive.css';\nimport GoogleLogbookMap from './GoogleLogbookMap';\nimport AuthService from '../../util/AuthService';\nimport axios from 'axios';\nimport { withRouter } from 'react-router';\nimport swal from 'sweetalert';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport { GET_ERRORS } from '../../actions/types';\n\nclass AddDive extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      partnerName: '',\n      partnerSurname: '',\n      marker: {},\n      entryTime: '',\n      exitTime: '',\n      averageDepth: 0.0,\n      maxDepth: 0.0,\n      visibility: 0.0,\n      waterTemperature: 0.0,\n      airTemperature: 0.0,\n      cylinderCapacity: '',\n      divingSuit: 'NONE',\n      waterType: 'NONE',\n      waterEntryType: 'NONE',\n      ballast: 0.0,\n      glovesType: 'NONE',\n      divingType: 'NONE',\n      comment: '',\n      errors: {}\n    };\n    this.Auth = new AuthService();\n    this.onChange = this.onChange.bind(this);\n    this.setMarker = this.setMarker.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  setMarker(newMarker) {\n    this.setState({\n      marker: newMarker\n    });\n  }\n\n  onSubmit(e) {\n    try {\n      e.preventDefault();\n      let jwtToken = this.Auth.getToken();\n      const logbookObject = {\n        partnerName: this.state.partnerName,\n        partnerSurname: this.state.partnerSurname,\n        marker: this.state.marker,\n        entryTime: this.state.entryTime,\n        exitTime: this.state.exitTime,\n        averageDepth: this.state.averageDepth,\n        maxDepth: this.state.maxDepth,\n        visibility: this.state.visibility,\n        waterTemperature: this.state.waterTemperature,\n        airTemperature: this.state.airTemperature,\n        cylinderCapacity: this.state.cylinderCapacity,\n        divingSuit: this.state.divingSuit,\n        waterType: this.state.waterType,\n        waterEntryType: this.state.waterEntryType,\n        ballast: this.state.ballast,\n        glovesType: this.state.glovesType,\n        divingType: this.state.divingType,\n        comment: this.state.comment\n      };\n      axios({\n        method: 'POST',\n        url: \"/add/logbook/\".concat(jwtToken),\n        data: logbookObject,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\"\n        }\n      }).then(response => {\n        console.log(response);\n\n        if (this.state.errors != null) {\n          this.props.history.push(\"/logbook\");\n        }\n      }).catch(err => {\n        dispatchEvent({\n          type: GET_ERRORS,\n          payload: err.response.data\n        });\n      });\n    } catch (error) {\n      swal(\"Error\", \"Something goes wrong.\", \"error\");\n    }\n  }\n\n  render() {\n    const errors = this.state.errors;\n    return React.createElement(\"div\", {\n      className: \"add-dive-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"add-dive-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Add dive to logbook\"), React.createElement(\"div\", {\n      className: \"add-dive-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"add-dive-box dive-shadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"partnerName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"Partner's name\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"partnerName\",\n      placeholder: \"Enter partner's name\",\n      name: \"partnerName\",\n      value: this.state.partnerName,\n      onChange: this.onChange,\n      className: classnames(\"form-control\", {\n        \"is-invalid\": errors.partnerName\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, errors.partnerName)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"partnerSurname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Partner's surname\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"partnerSurname\",\n      placeholder: \"Enter partner's surname\",\n      name: \"partnerSurname\",\n      value: this.state.partnerSurname,\n      onChange: this.onChange,\n      className: classnames(\"form-control\", {\n        \"is-invalid\": errors.partnerSurname\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, errors.partnerSurname)), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"entryTime\",\n      className: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Entry time\"), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"datetime-local\",\n      className: \"form-control\",\n      id: \"entryTime\",\n      name: \"entryTime\",\n      value: this.state.entryTime,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"exitTime\",\n      className: \"col-sm-2 col-form-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Exit time\"), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"datetime-local\",\n      className: \"form-control\",\n      id: \"exitTime\",\n      name: \"exitTime\",\n      value: this.state.exitTime,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"avgDepth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Average depth [m]\"), React.createElement(\"input\", {\n      type: \"number\",\n      step: \"0.1\",\n      min: \"1\",\n      className: \"form-control\",\n      id: \"avgDepth\",\n      name: \"averageDepth\",\n      value: this.state.averageDepth,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"maxDepth\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Maximum depth [m]\"), React.createElement(\"input\", {\n      type: \"number\",\n      step: \"0.1\",\n      min: \"1\",\n      className: \"form-control\",\n      id: \"maxDepth\",\n      name: \"maxDepth\",\n      value: this.state.maxDepth,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"visibility\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, \"Visibility [m]\"), React.createElement(\"input\", {\n      type: \"number\",\n      step: \"0.1\",\n      min: \"0\",\n      className: \"form-control\",\n      id: \"visibility\",\n      name: \"visibility\",\n      value: this.state.visibility,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"waterTemperature\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Temperature of water [\", React.createElement(\"sup\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"o\"), \"C]\"), React.createElement(\"input\", {\n      type: \"number\",\n      step: \"0.1\",\n      min: \"-5\",\n      className: \"form-control\",\n      id: \"waterTemperature\",\n      name: \"waterTemperature\",\n      value: this.state.waterTemperature,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"airTemperature\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"Temperature of air [\", React.createElement(\"sup\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, \"o\"), \"C]\"), React.createElement(\"input\", {\n      type: \"number\",\n      step: \"0.1\",\n      min: \"-100\",\n      className: \"form-control\",\n      id: \"airTemperature\",\n      name: \"airTemperature\",\n      value: this.state.airTemperature,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group col-md-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"cylinder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, \"Cylinder capacity\"), React.createElement(\"select\", {\n      id: \"cylinder\",\n      name: \"cylinderCapacity\",\n      value: this.state.cylinderCapacity,\n      onChange: this.onChange,\n      className: classnames(\"custom-select mr-sm-2\", {\n        \"is-invalid\": errors.cylinderCapacity\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"NONE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"NONE\"), React.createElement(\"option\", {\n      value: \"10L\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, \"10L\"), React.createElement(\"option\", {\n      value: \"12L\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, \"12L\"), React.createElement(\"option\", {\n      value: \"15L\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, \"15L\"), React.createElement(\"option\", {\n      value: \"18L\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \"18L\"), React.createElement(\"option\", {\n      value: \"TWINSET\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Twinset\"), React.createElement(\"option\", {\n      value: \"REBREATHER\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, \"Rebreather\")), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, errors.cylinderCapacity)), React.createElement(\"div\", {\n      className: \"form-group col-md-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"suit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, \"Suit\"), React.createElement(\"select\", {\n      id: \"suit\",\n      name: \"divingSuit\",\n      value: this.state.divingSuit,\n      onChange: this.onChange,\n      className: classnames(\"custom-select mr-sm-2\", {\n        \"is-invalid\": errors.divingSuit\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"NONE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"NONE\"), React.createElement(\"option\", {\n      value: \"DRY\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, \"Dry suit\"), React.createElement(\"option\", {\n      value: \"SEMIARID\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, \"Semiarid suit\"), React.createElement(\"option\", {\n      value: \"WET\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"Wet suit\")), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, errors.divingSuit)), React.createElement(\"div\", {\n      className: \"form-group col-md-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"waterType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, \"Water type\"), React.createElement(\"select\", {\n      id: \"waterType\",\n      name: \"waterType\",\n      value: this.state.waterType,\n      onChange: this.onChange,\n      className: classnames(\"custom-select mr-sm-2\", {\n        \"is-invalid\": errors.waterType\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"NONE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, \"NONE\"), React.createElement(\"option\", {\n      value: \"SWEET\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"Sweet water\"), React.createElement(\"option\", {\n      value: \"SALT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"Salt water\")), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, errors.waterType))), React.createElement(\"div\", {\n      className: \"form-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"waterEntryType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, \"Entry type to water\"), React.createElement(\"select\", {\n      id: \"waterEntryType\",\n      name: \"waterEntryType\",\n      value: this.state.waterEntryType,\n      onChange: this.onChange,\n      className: classnames(\"custom-select mr-sm-2\", {\n        \"is-invalid\": errors.waterEntryType\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"NONE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"NONE\"), React.createElement(\"option\", {\n      value: \"COAST\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, \"COAST\"), React.createElement(\"option\", {\n      value: \"BOAT\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, \"BOAT\")), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, errors.waterEntryType)), React.createElement(\"div\", {\n      className: \"form-group col-md-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"glovesType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, \"Gloves type\"), React.createElement(\"select\", {\n      id: \"glovesType\",\n      name: \"glovesType\",\n      value: this.state.glovesType,\n      onChange: this.onChange,\n      className: classnames(\"custom-select mr-sm-2\", {\n        \"is-invalid\": errors.glovesType\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"NONE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, \"NONE\"), React.createElement(\"option\", {\n      value: \"WET\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, \"WET\"), React.createElement(\"option\", {\n      value: \"DRY\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, \"DRY\"), React.createElement(\"option\", {\n      defaultValue: \"NONE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }, \"NONE\")), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, errors.glovesType))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"ballast\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, \"Ballast [kg]\"), React.createElement(\"input\", {\n      type: \"number\",\n      step: \"0.5\",\n      min: \"0\",\n      className: \"form-control\",\n      id: \"ballast\",\n      name: \"ballast\",\n      value: this.state.ballast,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"divingType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370\n      },\n      __self: this\n    }, \"Diving type\"), React.createElement(\"select\", {\n      id: \"divingType\",\n      name: \"divingType\",\n      value: this.state.divingType,\n      onChange: this.onChange,\n      className: classnames(\"custom-select mr-sm-2\", {\n        \"is-invalid\": errors.divingType\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"NONE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, \"NONE\"), React.createElement(\"option\", {\n      value: \"RECREATIONAL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382\n      },\n      __self: this\n    }, \"Recreational diving\"), React.createElement(\"option\", {\n      value: \"TECHNICAL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, \"Technical diving\"), React.createElement(\"option\", {\n      value: \"CAVE\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, \"Cave diving\"), React.createElement(\"option\", {\n      value: \"WRECK\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }, \"Wreck diving\")), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, errors.divingType)), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"googleLogbookMap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, \"Location\"), React.createElement(GoogleLogbookMap, {\n      setMarker: this.setMarker,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, \"Comment\"), React.createElement(\"textarea\", {\n      className: \"form-control\",\n      id: \"comment\",\n      rows: \"7\",\n      name: \"comment\",\n      value: this.state.comment,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"btn-add-dive-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary btn-lg btn-add-dive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, \"Confirm\"))))));\n  }\n\n}\n\nAddDive.propTypes = {\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, null)(withRouter(AddDive));","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/logbook/AddDive.js"],"names":["React","GoogleLogbookMap","AuthService","axios","withRouter","swal","PropTypes","connect","classnames","GET_ERRORS","AddDive","Component","constructor","state","partnerName","partnerSurname","marker","entryTime","exitTime","averageDepth","maxDepth","visibility","waterTemperature","airTemperature","cylinderCapacity","divingSuit","waterType","waterEntryType","ballast","glovesType","divingType","comment","errors","Auth","onChange","bind","setMarker","onSubmit","componentWillReceiveProps","nextProps","setState","e","target","name","value","newMarker","preventDefault","jwtToken","getToken","logbookObject","method","url","data","headers","then","response","console","log","props","history","push","catch","err","dispatchEvent","type","payload","error","render","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../css/AddDive.css';\nimport GoogleLogbookMap from './GoogleLogbookMap';\nimport AuthService from '../../util/AuthService';\nimport axios from 'axios';\nimport { withRouter } from 'react-router';\nimport swal from 'sweetalert';  \nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';          \nimport { GET_ERRORS } from '../../actions/types';\n\nclass AddDive extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            partnerName: '',\n            partnerSurname: '',\n            marker: {},\n            entryTime: '',\n            exitTime: '',\n            averageDepth: 0.0,\n            maxDepth: 0.0,\n            visibility: 0.0,\n            waterTemperature: 0.0,\n            airTemperature: 0.0,\n            cylinderCapacity: '',\n            divingSuit: 'NONE',\n            waterType: 'NONE',\n            waterEntryType: 'NONE',\n            ballast: 0.0,\n            glovesType: 'NONE',\n            divingType: 'NONE',\n            comment: '',\n            errors: {}\n        }\n        this.Auth = new AuthService();\n\n        this.onChange = this.onChange.bind(this);\n        this.setMarker = this.setMarker.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.errors) {\n            this.setState({ errors: nextProps.errors });\n        }\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    setMarker(newMarker) {\n        this.setState({ marker: newMarker });\n    }\n\n    onSubmit(e) {\n        try {\n            e.preventDefault();\n            let jwtToken = this.Auth.getToken();\n            \n            const logbookObject = {\n                partnerName: this.state.partnerName,\n                partnerSurname: this.state.partnerSurname,\n                marker: this.state.marker,\n                entryTime: this.state.entryTime,\n                exitTime: this.state.exitTime,\n                averageDepth: this.state.averageDepth,\n                maxDepth: this.state.maxDepth,\n                visibility: this.state.visibility,\n                waterTemperature: this.state.waterTemperature,\n                airTemperature: this.state.airTemperature,    \n                cylinderCapacity: this.state.cylinderCapacity,\n                divingSuit: this.state.divingSuit,\n                waterType: this.state.waterType,\n                waterEntryType: this.state.waterEntryType,\n                ballast: this.state.ballast,\n                glovesType: this.state.glovesType,\n                divingType: this.state.divingType,\n                comment: this.state.comment\n            }\n\n            axios({\n                method: 'POST',\n                url: `/add/logbook/${jwtToken}`,\n                data: logbookObject,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\"\n                }\n            }).then(response => {\n                console.log(response);\n                if(this.state.errors != null) {\n                    this.props.history.push(\"/logbook\");\n                }\n            }).catch(err => {\n                dispatchEvent({\n                    type: GET_ERRORS,\n                    payload: err.response.data\n                })\n            });\n            \n        } catch(error) {\n            swal(\"Error\", \"Something goes wrong.\", \"error\");\n        }\n    }\n\n    render() {\n        const { errors } = this.state;\n\n        return (\n            <div className=\"add-dive-container\">\n                <div className=\"add-dive-title\">\n                    Add dive to logbook\n                </div>\n                <div className=\"add-dive-center\">\n                    <div className=\"add-dive-box dive-shadow\">\n                        <form onSubmit={this.onSubmit}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"partnerName\">Partner's name</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"partnerName\" \n                                    placeholder=\"Enter partner's name\"\n                                    name=\"partnerName\"\n                                    value={this.state.partnerName}\n                                    onChange={this.onChange}\n                                    className={classnames(\"form-control\",  {\n                                        \"is-invalid\": errors.partnerName\n                                    })}\n                                />\n                                <div className=\"invalid-feedback\">{errors.partnerName}</div>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"partnerSurname\">Partner's surname</label>\n                                <input \n                                    type=\"text\" \n                                    id=\"partnerSurname\" \n                                    placeholder=\"Enter partner's surname\" \n                                    name=\"partnerSurname\"\n                                    value={this.state.partnerSurname}\n                                    onChange={this.onChange}\n                                    className={classnames(\"form-control\",  {\n                                        \"is-invalid\": errors.partnerSurname\n                                    })}\n                                />\n                                <div className=\"invalid-feedback\">{errors.partnerSurname}</div>\n                            </div>\n\n                            <div className=\"form-group row\">\n                                <label htmlFor=\"entryTime\" className=\"col-sm-2 col-form-label\">Entry time</label>\n                                <div className=\"col-sm-10\">\n                                    <input \n                                        type=\"datetime-local\" \n                                        className=\"form-control\" \n                                        id=\"entryTime\"\n                                        name=\"entryTime\"\n                                        value={this.state.entryTime}\n                                        onChange={this.onChange} \n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"form-group row\">\n                                <label htmlFor=\"exitTime\" className=\"col-sm-2 col-form-label\">Exit time</label>\n                                <div className=\"col-sm-10\">\n                                    <input \n                                        type=\"datetime-local\" \n                                        className=\"form-control\" \n                                        id=\"exitTime\" \n                                        name=\"exitTime\"\n                                        value={this.state.exitTime}\n                                        onChange={this.onChange}\n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"avgDepth\">Average depth [m]</label>\n                                <input \n                                    type=\"number\" \n                                    step=\"0.1\" \n                                    min=\"1\" \n                                    className=\"form-control\" \n                                    id=\"avgDepth\" \n                                    name=\"averageDepth\"\n                                    value={this.state.averageDepth}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"maxDepth\">Maximum depth [m]</label>\n                                <input \n                                    type=\"number\" \n                                    step=\"0.1\" min=\"1\"\n                                    className=\"form-control\" \n                                    id=\"maxDepth\" \n                                    name=\"maxDepth\"\n                                    value={this.state.maxDepth}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"visibility\">Visibility [m]</label>\n                                <input \n                                    type=\"number\" \n                                    step=\"0.1\" \n                                    min=\"0\" \n                                    className=\"form-control\" \n                                    id=\"visibility\" \n                                    name=\"visibility\"\n                                    value={this.state.visibility}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"waterTemperature\">Temperature of water [<sup>o</sup>C]</label>\n                                <input \n                                    type=\"number\" \n                                    step=\"0.1\" \n                                    min=\"-5\" \n                                    className=\"form-control\" \n                                    id=\"waterTemperature\" \n                                    name=\"waterTemperature\"\n                                    value={this.state.waterTemperature}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"airTemperature\">Temperature of air [<sup>o</sup>C]</label>\n                                <input \n                                    type=\"number\" \n                                    step=\"0.1\" \n                                    min=\"-100\" \n                                    className=\"form-control\" \n                                    id=\"airTemperature\" \n                                    name=\"airTemperature\"\n                                    value={this.state.airTemperature}\n                                    onChange={this.onChange}\n                                />\n                            </div>\n\n                            <div className=\"form-row\">\n                                <div className=\"form-group col-md-5\">\n                                    <label htmlFor=\"cylinder\">Cylinder capacity</label>\n                                    <select \n                                        id=\"cylinder\"\n                                        name=\"cylinderCapacity\"\n                                        value={this.state.cylinderCapacity}\n                                        onChange={this.onChange}\n                                        className={classnames(\"custom-select mr-sm-2\",  {\n                                            \"is-invalid\": errors.cylinderCapacity\n                                        })}\n                                    >\n                                        <option value=\"NONE\">NONE</option>\n                                        {/* <option defaultValue>Choose cylinder...</option> */}\n                                        <option value=\"10L\">10L</option>\n                                        <option value=\"12L\">12L</option>\n                                        <option value=\"15L\">15L</option>\n                                        <option value=\"18L\">18L</option>\n                                        <option value=\"TWINSET\">Twinset</option>\n                                        <option value=\"REBREATHER\">Rebreather</option>\n                                    </select>\n                                    <div className=\"invalid-feedback\">{errors.cylinderCapacity}</div>\n                                </div>\n\n                                <div className=\"form-group col-md-3\">\n                                    <label htmlFor=\"suit\">Suit</label>\n                                    <select \n                                        id=\"suit\"\n                                        name=\"divingSuit\"\n                                        value={this.state.divingSuit}\n                                        onChange={this.onChange}\n                                        className={classnames(\"custom-select mr-sm-2\",  {\n                                            \"is-invalid\": errors.divingSuit\n                                        })}\n                                    >\n                                        <option value=\"NONE\">NONE</option>\n                                        {/* <option defaultValue>Choose suit...</option> */}\n                                        <option value=\"DRY\">Dry suit</option>\n                                        <option value=\"SEMIARID\">Semiarid suit</option>\n                                        <option value=\"WET\">Wet suit</option>\n                                    </select>\n                                    <div className=\"invalid-feedback\">{errors.divingSuit}</div>\n                                </div>\n\n                                <div className=\"form-group col-md-4\">\n                                    <label htmlFor=\"waterType\">Water type</label>\n                                    <select \n                                        id=\"waterType\"\n                                        name=\"waterType\"\n                                        value={this.state.waterType}\n                                        onChange={this.onChange}\n                                        className={classnames(\"custom-select mr-sm-2\",  {\n                                            \"is-invalid\": errors.waterType\n                                        })}\n                                    >\n                                        <option value=\"NONE\">NONE</option>\n                                        {/* <option defaultValue>Choose water type...</option> */}\n                                        <option value=\"SWEET\">Sweet water</option>\n                                        <option value=\"SALT\">Salt water</option>\n                                    </select>\n                                    <div className=\"invalid-feedback\">{errors.waterType}</div>\n                                </div>\n                            </div>\n\n                            <div className=\"form-row\">\n                                <div className=\"form-group col-md-6\">\n                                    <label htmlFor=\"waterEntryType\">Entry type to water</label>\n                                    <select  \n                                        id=\"waterEntryType\"\n                                        name=\"waterEntryType\"\n                                        value={this.state.waterEntryType}\n                                        onChange={this.onChange}\n                                        className={classnames(\"custom-select mr-sm-2\",  {\n                                            \"is-invalid\": errors.waterEntryType\n                                        })}\n                                    >\n                                        <option value=\"NONE\">NONE</option>\n                                        {/* <option defaultValue>Choose entry type...</option> */}\n                                        <option value=\"COAST\">COAST</option>\n                                        <option value=\"BOAT\">BOAT</option>\n                                    </select>\n                                    <div className=\"invalid-feedback\">{errors.waterEntryType}</div>\n                                </div>\n\n                                <div className=\"form-group col-md-6\">\n                                    <label htmlFor=\"glovesType\">Gloves type</label>\n                                    <select \n                                        id=\"glovesType\"\n                                        name=\"glovesType\"\n                                        value={this.state.glovesType}\n                                        onChange={this.onChange}\n                                        className={classnames(\"custom-select mr-sm-2\",  {\n                                            \"is-invalid\": errors.glovesType\n                                        })}\n                                    >\n                                        <option value=\"NONE\">NONE</option>\n                                        {/* <option defaultValue>Choose gloves type...</option> */}\n                                        <option value=\"WET\">WET</option>\n                                        <option value=\"DRY\">DRY</option>\n                                        <option defaultValue=\"NONE\">NONE</option>\n                                    </select>\n                                    <div className=\"invalid-feedback\">{errors.glovesType}</div>\n                                </div>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"ballast\">Ballast [kg]</label>\n                                <input \n                                    type=\"number\" \n                                    step=\"0.5\" \n                                    min=\"0\" \n                                    className=\"form-control\" \n                                    id=\"ballast\"\n                                    name=\"ballast\"\n                                    value={this.state.ballast}\n                                    onChange={this.onChange} \n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"divingType\">Diving type</label>\n                                <select \n                                    id=\"divingType\"\n                                    name=\"divingType\"\n                                    value={this.state.divingType}\n                                    onChange={this.onChange}\n                                    className={classnames(\"custom-select mr-sm-2\",  {\n                                        \"is-invalid\": errors.divingType\n                                    })}\n                                >\n                                    <option value=\"NONE\">NONE</option>\n                                    {/* <option defaultValue>Choose diving type...</option> */}\n                                    <option value=\"RECREATIONAL\">Recreational diving</option>\n                                    <option value=\"TECHNICAL\">Technical diving</option>\n                                    <option value=\"CAVE\">Cave diving</option>\n                                    <option value=\"WRECK\">Wreck diving</option>\n                                </select>\n                                <div className=\"invalid-feedback\">{errors.divingType}</div>\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"googleLogbookMap\">Location</label>\n                                <GoogleLogbookMap \n                                    setMarker={this.setMarker}\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <label htmlFor=\"comment\">Comment</label>\n                                <textarea \n                                    className=\"form-control\" \n                                    id=\"comment\" \n                                    rows=\"7\"\n                                    name=\"comment\"\n                                    value={this.state.comment}\n                                    onChange={this.onChange}\n                                >\n                                </textarea>\n                            </div>\n\n                            <div className=\"btn-add-dive-center\">\n                                <button type=\"submit\" className=\"btn btn-primary btn-lg btn-add-dive\">\n                                    Confirm\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAddDive.propTypes = {\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    errors: state.errors\n})\n\nexport default connect(mapStateToProps, null)(withRouter(AddDive));"]},"metadata":{},"sourceType":"module"}