{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/forum/AddTopic.js\";\nimport React from 'react';\nimport '../../css/AddTopic.css';\nimport $ from 'jquery';\nimport Unsplash from 'unsplash-js';\nimport { Redirect } from 'react-router-dom';\nimport ReactFilestack from 'filestack-react';\nimport swal from 'sweetalert';\n\nclass AddTopic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      message: '',\n      isInvalidTitle: false,\n      isInvalidMessage: false,\n      files: [],\n      nameFiles: [],\n      isUploaded: false\n    };\n    this.errors = [];\n    this.onChange = this.onChange.bind(this);\n    this.onSubmitForm = this.onSubmitForm.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n    this.responseFilestack = this.responseFilestack.bind(this);\n    this.onErrorFilestack = this.onErrorFilestack.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  showInvalidTitle(isInvalidTitle) {\n    if (isInvalidTitle) {\n      return React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Title length must be between 10 and 160 characters.\");\n    }\n\n    return null;\n  }\n\n  showInvalidMessage(isInvalidMessage) {\n    if (isInvalidMessage) {\n      return React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Message length must be minimum 10 characters.\");\n    }\n\n    return null;\n  }\n\n  showFileNames(isUploaded) {\n    if (isUploaded) {\n      return React.createElement(\"div\", {\n        className: \"alert alert-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.state.nameFiles.map((name, index) => {\n        React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, name);\n      }));\n    }\n\n    return null;\n  }\n\n  validateForm(e) {\n    if (this.state.title.length < 10 || this.state.title.length > 160) {\n      e.preventDefault();\n      this.setState({\n        isInvalidTitle: true\n      });\n      this.errors.push(true);\n    }\n\n    if (this.state.message.length < 10) {\n      e.preventDefault();\n      this.setState({\n        isInvalidMessage: true\n      });\n      this.errors.push(true);\n    }\n  }\n\n  onSubmitForm(e) {\n    e.preventDefault();\n    this.validateForm(e);\n\n    if (this.errors.length === 0) {}\n  }\n\n  responseFilestack(response) {\n    console.log(response);\n    response.filesUploaded.map((file, index) => {\n      const element = {\n        objectId: file.uploadId,\n        url: file.url,\n        size: file.size,\n        name: file.originalFile.name,\n        type: file.originalFile.type\n      };\n      this.setState({\n        files: this.state.files.concat(element),\n        nameFiles: this.state.nameFiles.concat(file.originalFile.name),\n        isUploaded: true\n      });\n    });\n  }\n\n  onErrorFilestack() {\n    swal(\"Error\", \"Something goes wrong.\", \"error\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"add-topic-container add-topic-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"new-topic-box new-topic-box-shadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"new-topic-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Add new topic\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmitForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"input\", {\n      className: \"form-control form-control-lg\",\n      type: \"text\",\n      id: \"title\",\n      name: \"title\",\n      placeholder: \"Enter title\",\n      value: this.state.title,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), this.showInvalidTitle(this.state.isInvalidTitle), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Message\"), React.createElement(\"textarea\", {\n      className: \"form-control form-control-lg\",\n      id: \"message\",\n      name: \"message\",\n      value: this.state.message,\n      onChange: this.onChange,\n      rows: \"17\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })), this.showInvalidMessage(this.state.isInvalidMessage), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Upload data\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(ReactFilestack, {\n      apikey: \"Abn3RoxlVQeWNtMpk2Gflz\",\n      onSuccess: this.responseFilestack,\n      onError: this.onErrorFilestack,\n      componentDisplayMode: {\n        type: 'button',\n        customText: 'Upload files',\n        customClass: 'btn btn-warning btn-upload'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), this.showFileNames(this.state.isUploaded), React.createElement(\"div\", {\n      style: {\n        clear: \"both\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary new-topic-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Publicate\"))));\n  }\n\n}\n\nexport default AddTopic;","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/forum/AddTopic.js"],"names":["React","$","Unsplash","Redirect","ReactFilestack","swal","AddTopic","Component","constructor","props","state","title","message","isInvalidTitle","isInvalidMessage","files","nameFiles","isUploaded","errors","onChange","bind","onSubmitForm","validateForm","responseFilestack","onErrorFilestack","e","setState","target","name","value","showInvalidTitle","showInvalidMessage","showFileNames","map","index","length","preventDefault","push","response","console","log","filesUploaded","file","element","objectId","uploadId","url","size","originalFile","type","concat","render","customText","customClass","clear"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../css/AddTopic.css';\nimport $ from 'jquery';\nimport Unsplash from 'unsplash-js';\nimport { Redirect } from 'react-router-dom';\nimport ReactFilestack from 'filestack-react';\nimport swal from 'sweetalert';\n\nclass AddTopic extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n            title: '',\n            message: '',\n            isInvalidTitle: false,\n            isInvalidMessage: false,\n            files: [],\n            nameFiles: [],\n            isUploaded: false\n        }\n        this.errors = [];\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmitForm = this.onSubmitForm.bind(this);\n        this.validateForm = this.validateForm.bind(this);\n        this.responseFilestack = this.responseFilestack.bind(this);\n        this.onErrorFilestack = this.onErrorFilestack.bind(this);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    showInvalidTitle(isInvalidTitle) {\n        if(isInvalidTitle) {\n            return (\n                <div className=\"alert alert-danger\">\n                    Title length must be between 10 and 160 characters.\n                </div>\n            );\n        }\n        return null;\n    }\n\n    showInvalidMessage(isInvalidMessage) {\n        if(isInvalidMessage) {\n            return (\n                <div className=\"alert alert-danger\">\n                    Message length must be minimum 10 characters.\n                </div>\n            );\n        }\n        return null;\n    }\n\n    showFileNames(isUploaded) {\n        if(isUploaded) {\n            return (\n                <div className=\"alert alert-success\">\n                    { this.state.nameFiles.map((name, index) => {\n                        <p>{name}</p>\n                    })}\n                </div>\n            );\n        }\n        return null;\n    }\n\n    validateForm(e) {\n        if(this.state.title.length < 10 || this.state.title.length > 160) {\n            e.preventDefault();\n            this.setState({ isInvalidTitle: true });\n            this.errors.push(true);\n        }\n\n        if(this.state.message.length < 10) {\n            e.preventDefault();\n            this.setState({ isInvalidMessage: true });\n            this.errors.push(true);\n        }\n    }\n\n    onSubmitForm(e) {\n        e.preventDefault();\n\n        this.validateForm(e);\n\n        if(this.errors.length === 0) {\n\n        }\n    }\n\n    responseFilestack(response) {\n        console.log(response);\n        response.filesUploaded.map((file, index) => {\n            const element = {\n                objectId: file.uploadId,\n                url: file.url,\n                size: file.size,\n                name: file.originalFile.name,\n                type: file.originalFile.type\n            };\n            this.setState({ \n                files: this.state.files.concat(element),\n                nameFiles: this.state.nameFiles.concat(file.originalFile.name),\n                isUploaded: true\n            });\n        });\n    }\n\n    onErrorFilestack() {\n        swal(\"Error\", \"Something goes wrong.\", \"error\");\n    }\n\n    render() {\n        return (\n            <div className=\"add-topic-container add-topic-center\">\n                <div className=\"new-topic-box new-topic-box-shadow\">\n                    <div className=\"new-topic-title\">\n                        Add new topic\n                    </div>\n\n                    <form onSubmit={this.onSubmitForm}>\n                        <div className=\"form-group\">\n                            <label for=\"title\">Title</label>\n                            <input \n                                className=\"form-control form-control-lg\"\n                                type=\"text\"\n                                id=\"title\"\n                                name=\"title\"\n                                placeholder=\"Enter title\"\n                                value={this.state.title}\n                                onChange={this.onChange}\n                            />\n                        </div>\n                        { this.showInvalidTitle(this.state.isInvalidTitle) }\n\n                        <div className=\"form-group\">\n                            <label for=\"message\">Message</label>\n                            <textarea\n                                className=\"form-control form-control-lg\"\n                                id=\"message\"\n                                name=\"message\"\n                                value={this.state.message}\n                                onChange={this.onChange}\n                                rows=\"17\"\n                            >\n                            </textarea>\n                        </div>\n                        { this.showInvalidMessage(this.state.isInvalidMessage) }\n\n                        <div className=\"form-group\">\n                            <label>Upload data</label>\n                            <br />\n                            <ReactFilestack\n                                apikey=\"Abn3RoxlVQeWNtMpk2Gflz\"\n                                onSuccess={this.responseFilestack}\n                                onError={this.onErrorFilestack}\n                                componentDisplayMode={{\n                                    type: 'button',\n                                    customText: 'Upload files',\n                                    customClass: 'btn btn-warning btn-upload'\n                                }}\n                            />\n                            { this.showFileNames(this.state.isUploaded) }\n                            <div style={{ clear: \"both\" }}></div>\n                        </div>\n\n                        <button type=\"submit\" className=\"btn btn-primary new-topic-btn\">\n                            Publicate\n                        </button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default AddTopic;"]},"metadata":{},"sourceType":"module"}