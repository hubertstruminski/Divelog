{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/twitter/AvailableTrends.js\";\nimport React from 'react';\nimport '../../css/AvailableTrends.css';\nimport AuthService from '../../util/AuthService';\nimport swal from 'sweetalert';\n\nclass AvailableTrends extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      longitude: 0.0,\n      latitude: 0.0,\n      isGeolocationRejected: false\n    };\n    this.Auth = new AuthService();\n    this.twitterJwtToken = this.Auth.getTwitterToken();\n    this.geolocationError = this.geolocationError.bind(this);\n  }\n\n  componentDidMount() {\n    let latitude = this.state.latitude;\n    let longitude = this.state.longitude;\n\n    if (!navigator.geolocation) {} else {\n      navigator.geolocation.getCurrentPosition(this.success, this.geolocationError);\n    }\n\n    fetch(\"/twitter/available/trends/\".concat(this.state.latitude, \"/\").concat(this.state.longitude, \"/\").concat(this.twitterJwtToken), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'content-type': 'application/json'\n      }\n    }).then(response => response.json()).then(json => {\n      console.log(json);\n    });\n  }\n\n  geolocationError() {\n    this.setState({\n      isGeolocationRejected: true\n    });\n    swal(\"Warning\", \"Location process rejected. Unable to retrieve twitter trends. Delete cookies to retrieve trends.\", \"info\");\n  }\n\n  success(position) {\n    alert(position.coords.latitude);\n  }\n\n  rejectGeolocation(isGeolocationRejected) {\n    if (isGeolocationRejected) {\n      return React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Unable to retrieve trends.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), \"Turn on your location.\");\n    }\n\n    return null;\n  }\n\n  render() {\n    let isGeolocationRejected = this.state.isGeolocationRejected;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"geolocation-twitter-trends-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, isGeolocationRejected && this.rejectGeolocation(isGeolocationRejected))));\n  }\n\n}\n\nexport default AvailableTrends;","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/twitter/AvailableTrends.js"],"names":["React","AuthService","swal","AvailableTrends","Component","constructor","props","state","longitude","latitude","isGeolocationRejected","Auth","twitterJwtToken","getTwitterToken","geolocationError","bind","componentDidMount","navigator","geolocation","getCurrentPosition","success","fetch","method","headers","then","response","json","console","log","setState","position","alert","coords","rejectGeolocation","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,+BAAP;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,MAAMC,eAAN,SAA8BH,KAAK,CAACI,SAApC,CAA8C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,GADF;AAETC,MAAAA,QAAQ,EAAE,GAFD;AAGTC,MAAAA,qBAAqB,EAAE;AAHd,KAAb;AAKA,SAAKC,IAAL,GAAY,IAAIV,WAAJ,EAAZ;AACA,SAAKW,eAAL,GAAuB,KAAKD,IAAL,CAAUE,eAAV,EAAvB;AACA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIP,QAAQ,GAAG,KAAKF,KAAL,CAAWE,QAA1B;AACA,QAAID,SAAS,GAAG,KAAKD,KAAL,CAAWC,SAA3B;;AACA,QAAG,CAACS,SAAS,CAACC,WAAd,EAA2B,CAE1B,CAFD,MAEO;AACHD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,KAAKC,OAA9C,EAAuD,KAAKN,gBAA5D;AACH;;AACDO,IAAAA,KAAK,qCAA8B,KAAKd,KAAL,CAAWE,QAAzC,cAAqD,KAAKF,KAAL,CAAWC,SAAhE,cAA6E,KAAKI,eAAlF,GAAqG;AACtGU,MAAAA,MAAM,EAAE,KAD8F;AAEtGC,MAAAA,OAAO,EAAE;AACL,kBAAU,mCADL;AAEL,wBAAgB;AAFX;AAF6F,KAArG,CAAL,CAMGC,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANpB,EAOCF,IAPD,CAOME,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,KATD;AAUH;;AAEDZ,EAAAA,gBAAgB,GAAG;AACf,SAAKe,QAAL,CAAc;AAAEnB,MAAAA,qBAAqB,EAAE;AAAzB,KAAd;AACAR,IAAAA,IAAI,CAAC,SAAD,EAAY,kGAAZ,EAAgH,MAAhH,CAAJ;AACH;;AAEDkB,EAAAA,OAAO,CAACU,QAAD,EAAW;AACdC,IAAAA,KAAK,CAACD,QAAQ,CAACE,MAAT,CAAgBvB,QAAjB,CAAL;AACH;;AAEDwB,EAAAA,iBAAiB,CAACvB,qBAAD,EAAwB;AACrC,QAAGA,qBAAH,EAA0B;AACtB,aACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,2BADJ;AAOH;;AACD,WAAO,IAAP;AACH;;AAGDwB,EAAAA,MAAM,GAAG;AACL,QAAIxB,qBAAqB,GAAG,KAAKH,KAAL,CAAWG,qBAAvC;AAEA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACMA,qBAAqB,IAAI,KAAKuB,iBAAL,CAAuBvB,qBAAvB,CAD/B,CADJ,CADJ,CADJ;AASH;;AArEyC;;AAwE9C,eAAeP,eAAf","sourcesContent":["import React from 'react';\nimport '../../css/AvailableTrends.css';\nimport AuthService from '../../util/AuthService';\nimport swal from 'sweetalert';\n\nclass AvailableTrends extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            longitude: 0.0,\n            latitude: 0.0,\n            isGeolocationRejected: false\n        }\n        this.Auth = new AuthService();\n        this.twitterJwtToken = this.Auth.getTwitterToken();\n        this.geolocationError = this.geolocationError.bind(this);\n    }\n\n    componentDidMount() {\n        let latitude = this.state.latitude;\n        let longitude = this.state.longitude\n        if(!navigator.geolocation) {\n\n        } else {\n            navigator.geolocation.getCurrentPosition(this.success, this.geolocationError);\n        }\n        fetch(`/twitter/available/trends/${this.state.latitude}/${this.state.longitude}/${this.twitterJwtToken}`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'content-type': 'application/json'\n            }\n        }).then(response => response.json())\n        .then(json => {\n            console.log(json);\n        });\n    }\n\n    geolocationError() {\n        this.setState({ isGeolocationRejected: true });\n        swal(\"Warning\", \"Location process rejected. Unable to retrieve twitter trends. Delete cookies to retrieve trends.\", \"info\");  \n    }\n\n    success(position) {\n        alert(position.coords.latitude);\n    }\n\n    rejectGeolocation(isGeolocationRejected) {\n        if(isGeolocationRejected) {\n            return (\n                <div className=\"alert alert-danger\">\n                    Unable to retrieve trends.\n                    <br />\n                    Turn on your location.\n                </div>\n            );\n        }\n        return null;\n    }\n\n\n    render() {\n        let isGeolocationRejected = this.state.isGeolocationRejected;\n\n        return (\n            <div>\n                <ul className=\"list-group\">\n                    <div className=\"geolocation-twitter-trends-box\">\n                        { isGeolocationRejected && this.rejectGeolocation(isGeolocationRejected) }\n                    </div>\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default AvailableTrends;"]},"metadata":{},"sourceType":"module"}