{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/Divelog/reactapp/src/components/twitter/twitter-messages/SingleMessage.js\";\nimport React from 'react';\nimport '../../../css/twitter-messages/SingleMessage.css';\nimport $ from 'jquery';\nimport ConvertDMTime from '../../../util/ConvertDMTime';\nimport axios from 'axios';\nimport AuthService from '../../../util/AuthService';\nimport { BACKEND_API_URL } from '../../../actions/types';\n\nclass SingleMessage extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isRecipient: false,\n      isPhotoMessage: false,\n      mediaUrls: [],\n      mediaUrl: ''\n    };\n    this.Auth = new AuthService();\n    this.convertTime = new ConvertDMTime();\n  }\n\n  componentDidMount() {\n    let jwtToken = this.Auth.getRightSocialToken();\n    this.props.mediaEntities.map((media, index) => {\n      if (media.type === \"photo\") {\n        axios({\n          url: \"\".concat(BACKEND_API_URL, \"/twitter/direct/message/person/photo/retrieve/\").concat(jwtToken),\n          method: 'POST',\n          data: media.mediaUrl,\n          headers: {\n            'Accept': 'application/json, text/plain, */*',\n            'Content-Type': 'application/json'\n          }\n        }).then(response => {\n          return response.blob();\n        }).then(blob => {\n          this.setState({\n            mediaUrl: URL.createObjectURL(blob),\n            isPhotoMessage: true\n          });\n        });\n      }\n    });\n\n    if (this.props.senderId === this.props.twitterOwnerId) {\n      $(\".twitter-single-message-wrapper:eq(\".concat(this.props.index, \")\")).css({\n        \"justify-content\": \"flex-end\"\n      });\n      $(\".twitter-single-message-container:eq(\".concat(this.props.index, \")\")).css({\n        \"text-align\": \"right\"\n      });\n      $(\".twitter-single-message-text:eq(\".concat(this.props.index, \")\")).css({\n        \"background-color\": \"#00A4EF\",\n        \"border-radius\": \"25px 25px 0 25px\"\n      });\n      $(\".twitter-single-message-text:eq(\".concat(this.props.index, \")\")).hover(function () {\n        $(this).css({\n          \"background-color\": \"#0094D8\"\n        });\n      }, function () {\n        $(this).css({\n          \"background-color\": \"#00A4EF\"\n        });\n      });\n    } else {\n      this.setState({\n        isRecipient: true\n      }, () => {\n        $(\".twitter-single-message-wrapper:eq(\".concat(this.props.index, \")\")).css({\n          \"justify-content\": \"flex-start\"\n        });\n        $(\".twitter-single-message-container:eq(\".concat(this.props.index, \")\")).css({\n          \"text-align\": \"left\"\n        });\n        $(\".twitter-single-message-text:eq(\".concat(this.props.index, \")\")).css({\n          \"background-color\": \"#E5ECF0\",\n          \"border-radius\": \"25px 25px 25px 0\"\n        });\n      });\n    }\n\n    let wrapper = $(\".twitter-single-message-wrapper:eq(\".concat(this.props.index, \")\"));\n    console.log(wrapper);\n  }\n\n  render() {\n    let isPhotoMessage = this.state.isPhotoMessage;\n    let isRecipient = this.state.isRecipient;\n    let createdAt = this.convertTime.formatDate(this.props.createdAt, true);\n    return React.createElement(React.Fragment, null, isPhotoMessage && React.createElement(\"img\", {\n      className: \"twitter-dm-photo-message\",\n      src: this.state.mediaUrl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"twitter-single-message-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, isRecipient && React.createElement(\"img\", {\n      src: this.props.pictureUrl,\n      alt: \"Avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"twitter-single-message-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-single-message-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.props.text), createdAt)));\n  }\n\n}\n\nexport default SingleMessage;","map":{"version":3,"sources":["/home/huber/Pulpit/Divelog/reactapp/src/components/twitter/twitter-messages/SingleMessage.js"],"names":["React","$","ConvertDMTime","axios","AuthService","BACKEND_API_URL","SingleMessage","Component","constructor","state","isRecipient","isPhotoMessage","mediaUrls","mediaUrl","Auth","convertTime","componentDidMount","jwtToken","getRightSocialToken","props","mediaEntities","map","media","index","type","url","method","data","headers","then","response","blob","setState","URL","createObjectURL","senderId","twitterOwnerId","css","hover","wrapper","console","log","render","createdAt","formatDate","pictureUrl","text"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../../css/twitter-messages/SingleMessage.css';\nimport $ from 'jquery';\nimport ConvertDMTime from '../../../util/ConvertDMTime';\nimport axios from 'axios';\nimport AuthService from '../../../util/AuthService';\nimport { BACKEND_API_URL } from '../../../actions/types';\n\nclass SingleMessage extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            isRecipient: false,\n            isPhotoMessage: false,\n            mediaUrls: [],\n            mediaUrl: ''\n        }\n        this.Auth = new AuthService();\n        this.convertTime = new ConvertDMTime();\n    }\n\n    componentDidMount() {\n        let jwtToken = this.Auth.getRightSocialToken();\n        this.props.mediaEntities.map((media, index) => {\n            if(media.type === \"photo\") {\n                axios({\n                    url: `${BACKEND_API_URL}/twitter/direct/message/person/photo/retrieve/${jwtToken}`,\n                    method: 'POST',\n                    data: media.mediaUrl,\n                    headers: {\n                        'Accept': 'application/json, text/plain, */*',\n                        'Content-Type': 'application/json'\n                    }\n                }).then(response => {\n                    return response.blob();\n                }).then(blob => {\n                    this.setState({\n                        mediaUrl: URL.createObjectURL(blob),\n                        isPhotoMessage: true\n                    });\n                })\n\n            }\n        })\n\n        if(this.props.senderId === this.props.twitterOwnerId) {\n            $(`.twitter-single-message-wrapper:eq(${this.props.index})`).css({ \"justify-content\": \"flex-end\" });\n            $(`.twitter-single-message-container:eq(${this.props.index})`).css({ \"text-align\": \"right\" });\n            $(`.twitter-single-message-text:eq(${this.props.index})`).css({ \"background-color\": \"#00A4EF\", \"border-radius\": \"25px 25px 0 25px\" });\n            $(`.twitter-single-message-text:eq(${this.props.index})`).hover(function() {\n                $(this).css({\"background-color\": \"#0094D8\"});\n            }, function() {\n                $(this).css({\"background-color\": \"#00A4EF\"});\n            });\n        } else {\n            this.setState({ isRecipient: true }, () => {\n                $(`.twitter-single-message-wrapper:eq(${this.props.index})`).css({ \"justify-content\": \"flex-start\" });\n                $(`.twitter-single-message-container:eq(${this.props.index})`).css({ \"text-align\": \"left\" });\n                $(`.twitter-single-message-text:eq(${this.props.index})`).css({ \"background-color\": \"#E5ECF0\", \"border-radius\": \"25px 25px 25px 0\" });\n            })\n        }\n        let wrapper = $(`.twitter-single-message-wrapper:eq(${this.props.index})`);\n        console.log(wrapper);\n    }\n    render() {\n        let isPhotoMessage = this.state.isPhotoMessage;\n        let isRecipient = this.state.isRecipient;\n        let createdAt = this.convertTime.formatDate(this.props.createdAt, true);\n        return (\n            <>\n                {\n                    isPhotoMessage && <img className=\"twitter-dm-photo-message\" src={this.state.mediaUrl} />\n                }\n                <div className=\"twitter-single-message-wrapper\">\n                    { isRecipient &&\n                        <img src={this.props.pictureUrl} alt=\"Avatar\" />\n                    }\n                    <div className=\"twitter-single-message-container\">\n                        <div className=\"twitter-single-message-text\">\n                            { this.props.text }\n                        </div>\n                            { createdAt }\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default SingleMessage;"]},"metadata":{},"sourceType":"module"}