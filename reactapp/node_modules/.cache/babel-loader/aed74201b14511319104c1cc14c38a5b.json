{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/forum/Topic.js\";\nimport React from 'react';\nimport '../../css/Topic.css';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport $ from 'jquery';\nimport { withTranslation } from 'react-i18next';\n\nclass Topic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numberDisplays: 0,\n      numberComments: 0,\n      likes: 0,\n      vote: 0,\n      isUpVoted: false,\n      isDownVoted: false\n    };\n    this.onTopicClick = this.onTopicClick.bind(this);\n    this.onUpVote = this.onUpVote.bind(this);\n    this.onDownVote = this.onDownVote.bind(this);\n    this.fetchTopicData = this.fetchTopicData.bind(this);\n  }\n\n  componentDidMount() {\n    let jwtToken = this.Auth.getRightSocialToken();\n    let topicId = this.props.id;\n    fetch(\"/get/topic/number/comments/\".concat(topicId, \"/\").concat(jwtToken), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'content-type': 'application/json'\n      }\n    }).then(response => response.json()).then(jsonData => {\n      this.setState({\n        numberDisplays: jsonData.numberDisplay,\n        numberComments: jsonData.numberComments,\n        likes: jsonData.likes,\n        vote: jsonData.vote\n      }, () => {\n        if (this.state.vote === 1) {\n          console.log(this.props.count);\n          $(\".grid-topic-one:eq(\".concat(this.props.count, \") > div:eq(0) > i\")).css({\n            \"color\": \"red\"\n          });\n          $(\".grid-topic-one:eq(\".concat(this.props.count, \") > div:eq(2) > i\")).css({\n            \"color\": \"white\"\n          });\n          this.setState({\n            isUpVoted: true,\n            isDownVoted: false\n          });\n        } else if (this.state.vote === -1) {\n          console.log(this.props.count);\n          $(\".grid-topic-one:eq(\".concat(this.props.count, \") > div:eq(2) > i\")).css({\n            \"color\": \"red\"\n          });\n          $(\".grid-topic-one:eq(\".concat(this.props.count, \") > div:eq(0) > i\")).css({\n            \"color\": \"white\"\n          });\n          this.setState({\n            isDownVoted: true,\n            isUpVoted: false\n          });\n        } else {\n          console.log(this.props.count);\n          $(\".grid-topic-one:eq(\".concat(this.props.count, \") > div:eq(0) > i\")).css({\n            \"color\": \"white\"\n          });\n          $(\".grid-topic-one:eq(\".concat(this.props.count, \") > div:eq(2) > i\")).css({\n            \"color\": \"white\"\n          });\n          this.setState({\n            isDownVoted: false,\n            isUpVoted: false\n          });\n        }\n      });\n    });\n  }\n\n  onTopicClick(e) {\n    e.preventDefault();\n    this.props.history.push(\"/topic/\".concat(this.props.id, \"/\").concat(this.props.languageForum, \"/posts\"));\n  }\n\n  onUpVote() {\n    let jwtToken = localStorage.getItem(\"JwtToken\");\n\n    if (!this.state.isUpVoted) {\n      let isUpVoted = true;\n      axios({\n        method: 'PUT',\n        url: \"/topic/likes/vote/\".concat(this.props.id, \"/\").concat(jwtToken),\n        data: isUpVoted,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\"\n        }\n      }).then(response => {\n        if (response.status !== 200) {\n          swal(this.props.t(\"error-500.title\"), this.props.t(\"error-500.message\"), \"error\");\n        } else {\n          this.setState({\n            numberDisplays: 0,\n            numberComments: 0,\n            likes: 0,\n            isUpVoted: true,\n            isDownVoted: false\n          }, () => {\n            $(\".grid-topic-one:eq(\".concat(this.props.count, \") > div:eq(0) > i\")).css({\n              \"color\": \"red\"\n            });\n            $(\".grid-topic-one:eq(\".concat(this.props.count, \") > div:eq(2) > i\")).css({\n              \"color\": \"white\"\n            });\n            this.fetchTopicData();\n          });\n        }\n      });\n    }\n  }\n\n  onDownVote() {\n    let jwtToken = localStorage.getItem(\"JwtToken\");\n\n    if (!this.state.isDownVoted) {\n      let isUpVoted = false;\n      axios({\n        method: 'PUT',\n        url: \"/topic/likes/vote/\".concat(this.props.id, \"/\").concat(jwtToken),\n        data: isUpVoted,\n        headers: {\n          \"Accept\": \"application/json\",\n          \"Content-type\": \"application/json\"\n        }\n      }).then(response => {\n        if (response.status !== 200) {\n          swal(this.props.t(\"error-500.title\"), this.props.t(\"error-500.message\"), \"error\");\n        } else {\n          this.setState({\n            numberDisplays: 0,\n            numberComments: 0,\n            likes: 0,\n            isDownVoted: true,\n            isUpVoted: false\n          }, () => {\n            $(\".grid-topic-one:eq(\".concat(this.props.count, \") > div:eq(0) > i\")).css({\n              \"color\": \"white\"\n            });\n            $(\".grid-topic-one:eq(\".concat(this.props.count, \") > div:eq(2) > i\")).css({\n              \"color\": \"red\"\n            });\n            this.fetchTopicData();\n          });\n        }\n      });\n    }\n  }\n\n  fetchTopicData() {\n    let jwtToken = localStorage.getItem(\"JwtToken\");\n    let topicId = this.props.id;\n    fetch(\"/get/topic/number/comments/\".concat(topicId, \"/\").concat(jwtToken), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'content-type': 'application/json'\n      }\n    }).then(response => response.json()).then(jsonData => {\n      this.setState({\n        numberDisplays: jsonData.numberDisplay,\n        numberComments: jsonData.numberComments,\n        likes: jsonData.likes,\n        vote: jsonData.vote\n      }, () => {\n        if (this.state.vote === 1) {\n          $(\".grid-topic-one:eq(\".concat(this.props.count, \") > div:eq(0) > i\")).css({\n            \"color\": \"red\"\n          });\n          $(\".grid-topic-one:eq(\".concat(this.props.count, \") > div:eq(2) > i\")).css({\n            \"color\": \"white\"\n          });\n          this.setState({\n            isUpVoted: true,\n            isDownVoted: false\n          });\n        } else if (this.state.vote === -1) {\n          $(\".grid-topic-one:eq(\".concat(this.props.count, \") > div:eq(2) > i\")).css({\n            \"color\": \"red\"\n          });\n          $(\".grid-topic-one:eq(\".concat(this.props.count, \") > div:eq(0) > i\")).css({\n            \"color\": \"white\"\n          });\n          this.setState({\n            isDownVoted: true,\n            isUpVoted: false\n          });\n        } else {\n          $(\".grid-topic-one:eq(\".concat(this.props.count, \") > div:eq(0) > i\")).css({\n            \"color\": \"white\"\n          });\n          $(\".grid-topic-one:eq(\".concat(this.props.count, \") > div:eq(2) > i\")).css({\n            \"color\": \"white\"\n          });\n          this.setState({\n            isDownVoted: false,\n            isUpVoted: false\n          });\n        }\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"topic-container \".concat(this.props.isLeft ? 'topic-container-border-left' : 'topic-container-border-right'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"topic-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"grid-topic-one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-chevron-circle-up like-icon\",\n      onClick: this.onUpVote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"counter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, this.state.likes), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fas fa-chevron-circle-down like-icon\",\n      onClick: this.onDownVote,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"grid-topic-two\",\n      onClick: this.onTopicClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title-topic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, this.props.title), React.createElement(\"div\", {\n      className: \"owner-topic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"floating-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, this.props.owner), React.createElement(\"span\", {\n      className: \"floating-div float-two-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, this.props.createdAt), React.createElement(\"div\", {\n      style: {\n        clear: 'both'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"grid-topic-three\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, this.state.numberComments, \" \", this.props.t(\"forum.topic.comments\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), this.state.numberDisplays, \" \", this.props.t(\"forum.topic.display\")))));\n  }\n\n}\n\nexport default withTranslation(\"common\")(withRouter(Topic));","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/forum/Topic.js"],"names":["React","withRouter","axios","swal","$","withTranslation","Topic","Component","constructor","props","state","numberDisplays","numberComments","likes","vote","isUpVoted","isDownVoted","onTopicClick","bind","onUpVote","onDownVote","fetchTopicData","componentDidMount","jwtToken","Auth","getRightSocialToken","topicId","id","fetch","method","headers","then","response","json","jsonData","setState","numberDisplay","console","log","count","css","e","preventDefault","history","push","languageForum","localStorage","getItem","url","data","status","t","render","isLeft","title","owner","createdAt","clear"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,eAAT,QAAgC,eAAhC;;AAEA,MAAMC,KAAN,SAAoBN,KAAK,CAACO,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAE,CADP;AAETC,MAAAA,cAAc,EAAE,CAFP;AAGTC,MAAAA,KAAK,EAAE,CAHE;AAITC,MAAAA,IAAI,EAAE,CAJG;AAKTC,MAAAA,SAAS,EAAE,KALF;AAMTC,MAAAA,WAAW,EAAE;AANJ,KAAb;AAQA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKG,cAAL,GAAsB,KAAKA,cAAL,CAAoBH,IAApB,CAAyB,IAAzB,CAAtB;AACH;;AAEDI,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,QAAQ,GAAG,KAAKC,IAAL,CAAUC,mBAAV,EAAf;AACA,QAAIC,OAAO,GAAG,KAAKjB,KAAL,CAAWkB,EAAzB;AAEAC,IAAAA,KAAK,sCAA+BF,OAA/B,cAA0CH,QAA1C,GAAsD;AACvDM,MAAAA,MAAM,EAAE,KAD+C;AAEvDC,MAAAA,OAAO,EAAE;AACL,kBAAU,mCADL;AAEL,wBAAgB;AAFX;AAF8C,KAAtD,CAAL,CAMGC,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANpB,EAOCF,IAPD,CAOMG,QAAQ,IAAI;AACd,WAAKC,QAAL,CAAc;AACVxB,QAAAA,cAAc,EAAEuB,QAAQ,CAACE,aADf;AAEVxB,QAAAA,cAAc,EAAEsB,QAAQ,CAACtB,cAFf;AAGVC,QAAAA,KAAK,EAAEqB,QAAQ,CAACrB,KAHN;AAIVC,QAAAA,IAAI,EAAEoB,QAAQ,CAACpB;AAJL,OAAd,EAKG,MAAM;AACL,YAAG,KAAKJ,KAAL,CAAWI,IAAX,KAAoB,CAAvB,EAA0B;AACtBuB,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAK7B,KAAL,CAAW8B,KAAvB;AACAnC,UAAAA,CAAC,8BAAuB,KAAKK,KAAL,CAAW8B,KAAlC,uBAAD,CAA6DC,GAA7D,CAAiE;AAAE,qBAAS;AAAX,WAAjE;AACApC,UAAAA,CAAC,8BAAuB,KAAKK,KAAL,CAAW8B,KAAlC,uBAAD,CAA6DC,GAA7D,CAAiE;AAAE,qBAAS;AAAX,WAAjE;AACA,eAAKL,QAAL,CAAc;AACVpB,YAAAA,SAAS,EAAE,IADD;AAEVC,YAAAA,WAAW,EAAE;AAFH,WAAd;AAIH,SARD,MAQO,IAAG,KAAKN,KAAL,CAAWI,IAAX,KAAoB,CAAC,CAAxB,EAA2B;AAC9BuB,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAK7B,KAAL,CAAW8B,KAAvB;AACAnC,UAAAA,CAAC,8BAAuB,KAAKK,KAAL,CAAW8B,KAAlC,uBAAD,CAA6DC,GAA7D,CAAiE;AAAE,qBAAS;AAAX,WAAjE;AACApC,UAAAA,CAAC,8BAAuB,KAAKK,KAAL,CAAW8B,KAAlC,uBAAD,CAA6DC,GAA7D,CAAiE;AAAE,qBAAS;AAAX,WAAjE;AACA,eAAKL,QAAL,CAAc;AACVnB,YAAAA,WAAW,EAAE,IADH;AAEVD,YAAAA,SAAS,EAAE;AAFD,WAAd;AAIH,SARM,MAQA;AACHsB,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAK7B,KAAL,CAAW8B,KAAvB;AACAnC,UAAAA,CAAC,8BAAuB,KAAKK,KAAL,CAAW8B,KAAlC,uBAAD,CAA6DC,GAA7D,CAAiE;AAAE,qBAAS;AAAX,WAAjE;AACApC,UAAAA,CAAC,8BAAuB,KAAKK,KAAL,CAAW8B,KAAlC,uBAAD,CAA6DC,GAA7D,CAAiE;AAAE,qBAAS;AAAX,WAAjE;AACA,eAAKL,QAAL,CAAc;AACVnB,YAAAA,WAAW,EAAE,KADH;AAEVD,YAAAA,SAAS,EAAE;AAFD,WAAd;AAIH;AACJ,OA/BD;AAgCH,KAxCD;AAyCH;;AAEDE,EAAAA,YAAY,CAACwB,CAAD,EAAI;AACZA,IAAAA,CAAC,CAACC,cAAF;AACA,SAAKjC,KAAL,CAAWkC,OAAX,CAAmBC,IAAnB,kBAAkC,KAAKnC,KAAL,CAAWkB,EAA7C,cAAmD,KAAKlB,KAAL,CAAWoC,aAA9D;AACH;;AAED1B,EAAAA,QAAQ,GAAG;AACP,QAAII,QAAQ,GAAGuB,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAf;;AACA,QAAG,CAAC,KAAKrC,KAAL,CAAWK,SAAf,EAA0B;AACtB,UAAIA,SAAS,GAAG,IAAhB;AACAb,MAAAA,KAAK,CAAC;AACF2B,QAAAA,MAAM,EAAE,KADN;AAEFmB,QAAAA,GAAG,8BAAuB,KAAKvC,KAAL,CAAWkB,EAAlC,cAAwCJ,QAAxC,CAFD;AAGF0B,QAAAA,IAAI,EAAElC,SAHJ;AAIFe,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB;AAFX;AAJP,OAAD,CAAL,CAQGC,IARH,CAQQC,QAAQ,IAAI;AAChB,YAAGA,QAAQ,CAACkB,MAAT,KAAoB,GAAvB,EAA4B;AACxB/C,UAAAA,IAAI,CAAC,KAAKM,KAAL,CAAW0C,CAAX,CAAa,iBAAb,CAAD,EAAkC,KAAK1C,KAAL,CAAW0C,CAAX,CAAa,mBAAb,CAAlC,EAAqE,OAArE,CAAJ;AACH,SAFD,MAEO;AACH,eAAKhB,QAAL,CAAc;AACVxB,YAAAA,cAAc,EAAE,CADN;AAEVC,YAAAA,cAAc,EAAE,CAFN;AAGVC,YAAAA,KAAK,EAAE,CAHG;AAIVE,YAAAA,SAAS,EAAE,IAJD;AAKVC,YAAAA,WAAW,EAAE;AALH,WAAd,EAMG,MAAM;AACLZ,YAAAA,CAAC,8BAAuB,KAAKK,KAAL,CAAW8B,KAAlC,uBAAD,CAA6DC,GAA7D,CAAiE;AAAE,uBAAS;AAAX,aAAjE;AACApC,YAAAA,CAAC,8BAAuB,KAAKK,KAAL,CAAW8B,KAAlC,uBAAD,CAA6DC,GAA7D,CAAiE;AAAE,uBAAS;AAAX,aAAjE;AACA,iBAAKnB,cAAL;AACH,WAVD;AAWH;AACJ,OAxBD;AAyBH;AACJ;;AAEDD,EAAAA,UAAU,GAAG;AACT,QAAIG,QAAQ,GAAGuB,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAf;;AACA,QAAG,CAAC,KAAKrC,KAAL,CAAWM,WAAf,EAA4B;AACxB,UAAID,SAAS,GAAG,KAAhB;AACAb,MAAAA,KAAK,CAAC;AACF2B,QAAAA,MAAM,EAAE,KADN;AAEFmB,QAAAA,GAAG,8BAAuB,KAAKvC,KAAL,CAAWkB,EAAlC,cAAwCJ,QAAxC,CAFD;AAGF0B,QAAAA,IAAI,EAAElC,SAHJ;AAIFe,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB;AAFX;AAJP,OAAD,CAAL,CAQGC,IARH,CAQQC,QAAQ,IAAI;AAChB,YAAGA,QAAQ,CAACkB,MAAT,KAAoB,GAAvB,EAA4B;AACxB/C,UAAAA,IAAI,CAAC,KAAKM,KAAL,CAAW0C,CAAX,CAAa,iBAAb,CAAD,EAAkC,KAAK1C,KAAL,CAAW0C,CAAX,CAAa,mBAAb,CAAlC,EAAqE,OAArE,CAAJ;AACH,SAFD,MAEO;AACH,eAAKhB,QAAL,CAAc;AACVxB,YAAAA,cAAc,EAAE,CADN;AAEVC,YAAAA,cAAc,EAAE,CAFN;AAGVC,YAAAA,KAAK,EAAE,CAHG;AAIVG,YAAAA,WAAW,EAAE,IAJH;AAKVD,YAAAA,SAAS,EAAE;AALD,WAAd,EAMG,MAAM;AACLX,YAAAA,CAAC,8BAAuB,KAAKK,KAAL,CAAW8B,KAAlC,uBAAD,CAA6DC,GAA7D,CAAiE;AAAE,uBAAS;AAAX,aAAjE;AACApC,YAAAA,CAAC,8BAAuB,KAAKK,KAAL,CAAW8B,KAAlC,uBAAD,CAA6DC,GAA7D,CAAiE;AAAE,uBAAS;AAAX,aAAjE;AACA,iBAAKnB,cAAL;AACH,WAVD;AAWH;AACJ,OAxBD;AAyBH;AACJ;;AAEDA,EAAAA,cAAc,GAAG;AACb,QAAIE,QAAQ,GAAGuB,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAf;AACA,QAAIrB,OAAO,GAAG,KAAKjB,KAAL,CAAWkB,EAAzB;AAEAC,IAAAA,KAAK,sCAA+BF,OAA/B,cAA0CH,QAA1C,GAAsD;AACvDM,MAAAA,MAAM,EAAE,KAD+C;AAEvDC,MAAAA,OAAO,EAAE;AACL,kBAAU,mCADL;AAEL,wBAAgB;AAFX;AAF8C,KAAtD,CAAL,CAMGC,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANpB,EAOCF,IAPD,CAOMG,QAAQ,IAAI;AACd,WAAKC,QAAL,CAAc;AACVxB,QAAAA,cAAc,EAAEuB,QAAQ,CAACE,aADf;AAEVxB,QAAAA,cAAc,EAAEsB,QAAQ,CAACtB,cAFf;AAGVC,QAAAA,KAAK,EAAEqB,QAAQ,CAACrB,KAHN;AAIVC,QAAAA,IAAI,EAAEoB,QAAQ,CAACpB;AAJL,OAAd,EAKG,MAAM;AACL,YAAG,KAAKJ,KAAL,CAAWI,IAAX,KAAoB,CAAvB,EAA0B;AACtBV,UAAAA,CAAC,8BAAuB,KAAKK,KAAL,CAAW8B,KAAlC,uBAAD,CAA6DC,GAA7D,CAAiE;AAAE,qBAAS;AAAX,WAAjE;AACApC,UAAAA,CAAC,8BAAuB,KAAKK,KAAL,CAAW8B,KAAlC,uBAAD,CAA6DC,GAA7D,CAAiE;AAAE,qBAAS;AAAX,WAAjE;AACA,eAAKL,QAAL,CAAc;AACVpB,YAAAA,SAAS,EAAE,IADD;AAEVC,YAAAA,WAAW,EAAE;AAFH,WAAd;AAIH,SAPD,MAOO,IAAG,KAAKN,KAAL,CAAWI,IAAX,KAAoB,CAAC,CAAxB,EAA2B;AAC9BV,UAAAA,CAAC,8BAAuB,KAAKK,KAAL,CAAW8B,KAAlC,uBAAD,CAA6DC,GAA7D,CAAiE;AAAE,qBAAS;AAAX,WAAjE;AACApC,UAAAA,CAAC,8BAAuB,KAAKK,KAAL,CAAW8B,KAAlC,uBAAD,CAA6DC,GAA7D,CAAiE;AAAE,qBAAS;AAAX,WAAjE;AACA,eAAKL,QAAL,CAAc;AACVnB,YAAAA,WAAW,EAAE,IADH;AAEVD,YAAAA,SAAS,EAAE;AAFD,WAAd;AAIH,SAPM,MAOA;AACHX,UAAAA,CAAC,8BAAuB,KAAKK,KAAL,CAAW8B,KAAlC,uBAAD,CAA6DC,GAA7D,CAAiE;AAAE,qBAAS;AAAX,WAAjE;AACApC,UAAAA,CAAC,8BAAuB,KAAKK,KAAL,CAAW8B,KAAlC,uBAAD,CAA6DC,GAA7D,CAAiE;AAAE,qBAAS;AAAX,WAAjE;AACA,eAAKL,QAAL,CAAc;AACVnB,YAAAA,WAAW,EAAE,KADH;AAEVD,YAAAA,SAAS,EAAE;AAFD,WAAd;AAIH;AACJ,OA5BD;AA6BH,KArCD;AAsCH;;AAEDqC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,4BAAqB,KAAK3C,KAAL,CAAW4C,MAAX,GAAoB,6BAApB,GAAoD,8BAAzE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,SAAS,EAAC,oCADd;AAEI,MAAA,OAAO,EAAE,KAAKlC,QAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAQI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKT,KAAL,CAAWG,KADjB,CARJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,SAAS,EAAC,sCADd;AAEI,MAAA,OAAO,EAAE,KAAKO,UAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAXJ,CADJ,EAoBI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,OAAO,EAAE,KAAKH,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKR,KAAL,CAAW6C,KADjB,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAK7C,KAAL,CAAW8C,KADjB,CADJ,EAKI;AAAM,MAAA,SAAS,EAAC,8BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK9C,KAAL,CAAW+C,SADhB,CALJ,EASI;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,CAJJ,CApBJ,EAoCI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAK/C,KAAL,CAAWE,cADjB,OACoC,KAAKH,KAAL,CAAW0C,CAAX,CAAa,sBAAb,CADpC,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGM,KAAKzC,KAAL,CAAWC,cAHjB,OAGoC,KAAKF,KAAL,CAAW0C,CAAX,CAAa,qBAAb,CAHpC,CADJ,CApCJ,CADJ,CADJ;AAgDH;;AAnO+B;;AAsOpC,eAAe9C,eAAe,CAAC,QAAD,CAAf,CAA0BJ,UAAU,CAACK,KAAD,CAApC,CAAf","sourcesContent":["import React from 'react';\nimport '../../css/Topic.css';\nimport { withRouter } from 'react-router';\nimport axios from 'axios';\nimport swal from 'sweetalert';\nimport $ from 'jquery';\nimport { withTranslation } from 'react-i18next';\n\nclass Topic extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            numberDisplays: 0,\n            numberComments: 0,\n            likes: 0,\n            vote: 0,\n            isUpVoted: false,\n            isDownVoted: false\n        }\n        this.onTopicClick = this.onTopicClick.bind(this);\n        this.onUpVote = this.onUpVote.bind(this);\n        this.onDownVote = this.onDownVote.bind(this);\n        this.fetchTopicData = this.fetchTopicData.bind(this);\n    }\n\n    componentDidMount() {\n        let jwtToken = this.Auth.getRightSocialToken();\n        let topicId = this.props.id;\n\n        fetch(`/get/topic/number/comments/${topicId}/${jwtToken}`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'content-type': 'application/json'\n            }\n        }).then(response => response.json())\n        .then(jsonData => {\n            this.setState({\n                numberDisplays: jsonData.numberDisplay,\n                numberComments: jsonData.numberComments,\n                likes: jsonData.likes,\n                vote: jsonData.vote\n            }, () => {\n                if(this.state.vote === 1) {\n                    console.log(this.props.count);\n                    $(`.grid-topic-one:eq(${this.props.count}) > div:eq(0) > i`).css({ \"color\": \"red\" });\n                    $(`.grid-topic-one:eq(${this.props.count}) > div:eq(2) > i`).css({ \"color\": \"white\" });\n                    this.setState({ \n                        isUpVoted: true,\n                        isDownVoted: false\n                    });\n                } else if(this.state.vote === -1) {\n                    console.log(this.props.count);\n                    $(`.grid-topic-one:eq(${this.props.count}) > div:eq(2) > i`).css({ \"color\": \"red\" });\n                    $(`.grid-topic-one:eq(${this.props.count}) > div:eq(0) > i`).css({ \"color\": \"white\" });\n                    this.setState({ \n                        isDownVoted: true,\n                        isUpVoted: false \n                    });\n                } else {\n                    console.log(this.props.count);\n                    $(`.grid-topic-one:eq(${this.props.count}) > div:eq(0) > i`).css({ \"color\": \"white\" });\n                    $(`.grid-topic-one:eq(${this.props.count}) > div:eq(2) > i`).css({ \"color\": \"white\" });\n                    this.setState({ \n                        isDownVoted: false,\n                        isUpVoted: false\n                    });\n                }\n            });\n        });\n    }\n\n    onTopicClick(e) {\n        e.preventDefault();\n        this.props.history.push(`/topic/${this.props.id}/${this.props.languageForum}/posts`);\n    }\n\n    onUpVote() {\n        let jwtToken = localStorage.getItem(\"JwtToken\");\n        if(!this.state.isUpVoted) {\n            let isUpVoted = true;    \n            axios({\n                method: 'PUT',\n                url: `/topic/likes/vote/${this.props.id}/${jwtToken}`,\n                data: isUpVoted,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\"\n                }\n            }).then(response => {\n                if(response.status !== 200) {\n                    swal(this.props.t(\"error-500.title\"), this.props.t(\"error-500.message\"), \"error\");\n                } else {\n                    this.setState({\n                        numberDisplays: 0,\n                        numberComments: 0,\n                        likes: 0,\n                        isUpVoted: true,\n                        isDownVoted: false\n                    }, () => {\n                        $(`.grid-topic-one:eq(${this.props.count}) > div:eq(0) > i`).css({ \"color\": \"red\" });\n                        $(`.grid-topic-one:eq(${this.props.count}) > div:eq(2) > i`).css({ \"color\": \"white\"});\n                        this.fetchTopicData();\n                    });\n                }\n            });\n        } \n    }\n\n    onDownVote() {\n        let jwtToken = localStorage.getItem(\"JwtToken\");\n        if(!this.state.isDownVoted) {\n            let isUpVoted = false;\n            axios({\n                method: 'PUT',\n                url: `/topic/likes/vote/${this.props.id}/${jwtToken}`,\n                data: isUpVoted,\n                headers: {\n                    \"Accept\": \"application/json\",\n                    \"Content-type\": \"application/json\"\n                }\n            }).then(response => {\n                if(response.status !== 200) {\n                    swal(this.props.t(\"error-500.title\"), this.props.t(\"error-500.message\"), \"error\");\n                } else {\n                    this.setState({\n                        numberDisplays: 0,\n                        numberComments: 0,\n                        likes: 0,\n                        isDownVoted: true,\n                        isUpVoted: false\n                    }, () => {\n                        $(`.grid-topic-one:eq(${this.props.count}) > div:eq(0) > i`).css({ \"color\": \"white\" });\n                        $(`.grid-topic-one:eq(${this.props.count}) > div:eq(2) > i`).css({ \"color\": \"red\"});\n                        this.fetchTopicData();\n                    });\n                }\n            });\n        }\n    }\n\n    fetchTopicData() {\n        let jwtToken = localStorage.getItem(\"JwtToken\"); \n        let topicId = this.props.id;\n        \n        fetch(`/get/topic/number/comments/${topicId}/${jwtToken}`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'content-type': 'application/json'\n            }\n        }).then(response => response.json())\n        .then(jsonData => {\n            this.setState({\n                numberDisplays: jsonData.numberDisplay,\n                numberComments: jsonData.numberComments,\n                likes: jsonData.likes,\n                vote: jsonData.vote\n            }, () => {\n                if(this.state.vote === 1) {\n                    $(`.grid-topic-one:eq(${this.props.count}) > div:eq(0) > i`).css({ \"color\": \"red\" });\n                    $(`.grid-topic-one:eq(${this.props.count}) > div:eq(2) > i`).css({ \"color\": \"white\" });\n                    this.setState({ \n                        isUpVoted: true,\n                        isDownVoted: false\n                    });\n                } else if(this.state.vote === -1) {\n                    $(`.grid-topic-one:eq(${this.props.count}) > div:eq(2) > i`).css({ \"color\": \"red\" });\n                    $(`.grid-topic-one:eq(${this.props.count}) > div:eq(0) > i`).css({ \"color\": \"white\" });\n                    this.setState({ \n                        isDownVoted: true,\n                        isUpVoted: false\n                    });\n                } else {\n                    $(`.grid-topic-one:eq(${this.props.count}) > div:eq(0) > i`).css({ \"color\": \"white\" });\n                    $(`.grid-topic-one:eq(${this.props.count}) > div:eq(2) > i`).css({ \"color\": \"white\" });\n                    this.setState({ \n                        isDownVoted: false,\n                        isUpVoted: false\n                    });\n                }\n            });\n        });\n    }\n\n    render() {\n        return(\n            <div className={`topic-container ${this.props.isLeft ? 'topic-container-border-left' : 'topic-container-border-right'}`}>\n                <div className=\"topic-body\">\n                    <div className=\"grid-topic-one\">\n                        <div>\n                            <i \n                                className=\"fas fa-chevron-circle-up like-icon\"\n                                onClick={this.onUpVote}\n                            >\n                            </i>\n                        </div>\n                        <div className=\"counter\">\n                            { this.state.likes }\n                        </div>\n                        <div>\n                            <i \n                                className=\"fas fa-chevron-circle-down like-icon\"\n                                onClick={this.onDownVote}\n                            >\n                            </i>\n                        </div>\n                    </div>\n                    <div className=\"grid-topic-two\" onClick={this.onTopicClick}>\n                        <div className=\"title-topic\">\n                            { this.props.title }\n                        </div>\n                        <div className=\"owner-topic\">\n                            <span className=\"floating-div\">\n                                { this.props.owner }\n                            </span>\n\n                            <span className=\"floating-div float-two-right\">\n                                {this.props.createdAt }\n                            </span>\n\n                            <div style={{ clear: 'both' }}></div>\n                        </div>\n                    </div>\n                    <div className=\"grid-topic-three\">\n                        <div>\n                            { this.state.numberComments } { this.props.t(\"forum.topic.comments\") }\n                            <br />\n                            { this.state.numberDisplays } { this.props.t(\"forum.topic.display\") }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation(\"common\")(withRouter(Topic));"]},"metadata":{},"sourceType":"module"}