{"ast":null,"code":"import { BACKEND_API_URL } from '../actions/types';\nimport AuthService from '../util/AuthService';\nexport default class TwitterExploreSearchRequestMethod {\n  constructor() {\n    this.Auth = new AuthService();\n  }\n\n  searchTweets(e, props, searchInputString) {\n    if (e.keyCode === 13) {\n      props.addNewTweet(\"<div class='spinner-border text-primary twitter-explore-search-spinner' role='status'><span class='sr-only'>Loading...</span></div>\");\n      let jwtToken = this.Auth.getRightSocialToken();\n      axios({\n        url: \"\".concat(BACKEND_API_URL, \"/twitter/search/tweets/\").concat(jwtToken),\n        method: 'POST',\n        data: searchInputString,\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        if (response.status !== 200) {\n          swal(\"Error\", \"Internal server error\", \"error\");\n        } else {\n          props.addNewTweet(response.data);\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  }\n\n}","map":{"version":3,"sources":["/home/huber/Pulpit/Divelog/reactapp/src/util/TwitterExploreSearchRequestMethod.js"],"names":["BACKEND_API_URL","AuthService","TwitterExploreSearchRequestMethod","constructor","Auth","searchTweets","e","props","searchInputString","keyCode","addNewTweet","jwtToken","getRightSocialToken","axios","url","method","data","headers","then","response","status","swal","catch","err","console","log"],"mappings":"AAAA,SAASA,eAAT,QAAgC,kBAAhC;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA,eAAe,MAAMC,iCAAN,CAAwC;AACnDC,EAAAA,WAAW,GAAG;AACV,SAAKC,IAAL,GAAY,IAAIH,WAAJ,EAAZ;AACH;;AAEDI,EAAAA,YAAY,CAACC,CAAD,EAAIC,KAAJ,EAAWC,iBAAX,EAA8B;AACtC,QAAGF,CAAC,CAACG,OAAF,KAAc,EAAjB,EAAqB;AACjBF,MAAAA,KAAK,CAACG,WAAN,CAAkB,qIAAlB;AACA,UAAIC,QAAQ,GAAG,KAAKP,IAAL,CAAUQ,mBAAV,EAAf;AAEAC,MAAAA,KAAK,CAAC;AACFC,QAAAA,GAAG,YAAKd,eAAL,oCAA8CW,QAA9C,CADD;AAEFI,QAAAA,MAAM,EAAE,MAFN;AAGFC,QAAAA,IAAI,EAAER,iBAHJ;AAIFS,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB;AAFX;AAJP,OAAD,CAAL,CAQGC,IARH,CAQQC,QAAQ,IAAI;AAChB,YAAGA,QAAQ,CAACC,MAAT,KAAoB,GAAvB,EAA4B;AACxBC,UAAAA,IAAI,CAAC,OAAD,EAAU,uBAAV,EAAmC,OAAnC,CAAJ;AACH,SAFD,MAEO;AACHd,UAAAA,KAAK,CAACG,WAAN,CAAkBS,QAAQ,CAACH,IAA3B;AACH;AACJ,OAdD,EAcGM,KAdH,CAcSC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OAhBD;AAiBH;AACJ;;AA5BkD","sourcesContent":["import { BACKEND_API_URL } from '../actions/types';\nimport AuthService from '../util/AuthService';\n\nexport default class TwitterExploreSearchRequestMethod {\n    constructor() {\n        this.Auth = new AuthService();\n    }\n\n    searchTweets(e, props, searchInputString) {\n        if(e.keyCode === 13) {\n            props.addNewTweet(\"<div class='spinner-border text-primary twitter-explore-search-spinner' role='status'><span class='sr-only'>Loading...</span></div>\");\n            let jwtToken = this.Auth.getRightSocialToken();\n\n            axios({\n                url: `${BACKEND_API_URL}/twitter/search/tweets/${jwtToken}`,\n                method: 'POST',\n                data: searchInputString,\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            }).then(response => {\n                if(response.status !== 200) {\n                    swal(\"Error\", \"Internal server error\", \"error\");\n                } else {\n                    props.addNewTweet(response.data);\n                }\n            }).catch(err => {\n                console.log(err);\n            });\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}