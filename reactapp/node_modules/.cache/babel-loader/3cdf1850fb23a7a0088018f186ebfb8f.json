{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/forum/TopicWithPosts.js\";\nimport React from 'react';\nimport '../../css/TopicWithPosts.css';\n\nclass TopicWithPosts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mainPost: {}\n    };\n    this.files = [];\n  }\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    fetch(\"/get/topic/posts/\".concat(id), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'content-type': 'application/json'\n      }\n    }).then(response => response.json()).then(jsonData => {\n      this.files = [];\n      jsonData.files.map((file, index) => {\n        const element = {\n          id: file.id,\n          objectId: file.objectId,\n          url: file.url,\n          size: file.size,\n          name: file.name,\n          type: file.type\n        };\n        this.files.push(element);\n      });\n      const element = {\n        title: jsonData.title,\n        message: jsonData.message,\n        createdAt: jsonData.createdAt,\n        owner: jsonData.user.name,\n        pictureUrl: jsonData.user.pictureUrl,\n        files: this.files\n      };\n      this.setState({\n        mainPost: element\n      });\n      console.log(this.state.mainPost);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"topic-posts-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TopicWithPosts;","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/forum/TopicWithPosts.js"],"names":["React","TopicWithPosts","Component","constructor","props","state","mainPost","files","componentDidMount","id","match","params","fetch","method","headers","then","response","json","jsonData","map","file","index","element","objectId","url","size","name","type","push","title","message","createdAt","owner","user","pictureUrl","setState","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,8BAAP;;AAEA,MAAMC,cAAN,SAA6BD,KAAK,CAACE,SAAnC,CAA6C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAIA,SAAKC,KAAL,GAAa,EAAb;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,EAAE,GAAG,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,CAAwBF,EAAjC;AAEAG,IAAAA,KAAK,4BAAqBH,EAArB,GAA2B;AAC5BI,MAAAA,MAAM,EAAE,KADoB;AAE5BC,MAAAA,OAAO,EAAE;AACL,kBAAU,mCADL;AAEL,wBAAgB;AAFX;AAFmB,KAA3B,CAAL,CAMGC,IANH,CAMQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANpB,EAOCF,IAPD,CAOMG,QAAQ,IAAI;AACd,WAAKX,KAAL,GAAa,EAAb;AAEAW,MAAAA,QAAQ,CAACX,KAAT,CAAeY,GAAf,CAAmB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAChC,cAAMC,OAAO,GAAG;AACZb,UAAAA,EAAE,EAAEW,IAAI,CAACX,EADG;AAEZc,UAAAA,QAAQ,EAAEH,IAAI,CAACG,QAFH;AAGZC,UAAAA,GAAG,EAAEJ,IAAI,CAACI,GAHE;AAIZC,UAAAA,IAAI,EAAEL,IAAI,CAACK,IAJC;AAKZC,UAAAA,IAAI,EAAEN,IAAI,CAACM,IALC;AAMZC,UAAAA,IAAI,EAAEP,IAAI,CAACO;AANC,SAAhB;AAQA,aAAKpB,KAAL,CAAWqB,IAAX,CAAgBN,OAAhB;AACH,OAVD;AAYA,YAAMA,OAAO,GAAG;AACZO,QAAAA,KAAK,EAAEX,QAAQ,CAACW,KADJ;AAEZC,QAAAA,OAAO,EAAEZ,QAAQ,CAACY,OAFN;AAGZC,QAAAA,SAAS,EAAEb,QAAQ,CAACa,SAHR;AAIZC,QAAAA,KAAK,EAAEd,QAAQ,CAACe,IAAT,CAAcP,IAJT;AAKZQ,QAAAA,UAAU,EAAEhB,QAAQ,CAACe,IAAT,CAAcC,UALd;AAMZ3B,QAAAA,KAAK,EAAE,KAAKA;AANA,OAAhB;AAQA,WAAK4B,QAAL,CAAc;AAAE7B,QAAAA,QAAQ,EAAEgB;AAAZ,OAAd;AACAc,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhC,KAAL,CAAWC,QAAvB;AACH,KAhCD;AAiCH;;AAEDgC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAOH;;AAzDwC;;AA4D7C,eAAerC,cAAf","sourcesContent":["import React from 'react';\nimport '../../css/TopicWithPosts.css';\n\nclass TopicWithPosts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            mainPost: {}\n        }\n\n        this.files = []\n    }\n\n    componentDidMount() {\n        let id = this.props.match.params.id;\n\n        fetch(`/get/topic/posts/${id}`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'content-type': 'application/json'\n            }\n        }).then(response => response.json())\n        .then(jsonData => {\n            this.files = [];\n            \n            jsonData.files.map((file, index) => {\n                const element = {\n                    id: file.id,\n                    objectId: file.objectId,\n                    url: file.url,\n                    size: file.size,\n                    name: file.name,\n                    type: file.type\n                }\n                this.files.push(element);\n            });\n\n            const element = {\n                title: jsonData.title,\n                message: jsonData.message,\n                createdAt: jsonData.createdAt,\n                owner: jsonData.user.name,\n                pictureUrl: jsonData.user.pictureUrl,\n                files: this.files\n            }\n            this.setState({ mainPost: element });\n            console.log(this.state.mainPost);\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"topic-posts-container\">\n                <div>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TopicWithPosts;"]},"metadata":{},"sourceType":"module"}