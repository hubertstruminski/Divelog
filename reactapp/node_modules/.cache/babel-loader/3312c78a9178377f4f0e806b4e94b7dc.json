{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/logbook/Logbook.js\";\nimport React from 'react';\nimport '../../css/Logbook.css';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom';\n\nclass Logbook extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      logbooks: [],\n      isEmptyLogbook: false\n    };\n    this.showTableRows = this.showTableRows.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    let jwtToken = localStorage.getItem(\"JwtToken\");\n    fetch(\"/get/logbook/\".concat(jwtToken), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'content-type': 'application/json'\n      }\n    }).then(response => response.json()).then(jsonData => {\n      console.log(jsonData);\n    });\n  }\n\n  showTableRows() {\n    if (this.state.logbooks.length === 0) {\n      this.setState({\n        isEmptyLogbook: true\n      });\n    } else {\n      if (this.state.isEmptyLogbook === true) {\n        this.setState({\n          isEmptyLogbook: false\n        });\n      }\n\n      let rowNumber = 0;\n      return this.state.logbooks.map((logbook, index) => {\n        return React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, ++rowNumber), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, logbook.partnerName), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, logbook.partnerSurname), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, logbook.entryTime), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, logbook.exitTime), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, logbook.marker.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, logbook.averageDepth), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, logbook.maxDepth), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, logbook.airTemperature), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, logbook.waterTemperature), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, logbook.divingType), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"PDF\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"DELETE\")));\n      });\n    }\n  }\n\n  showTable() {\n    return React.createElement(\"div\", {\n      className: \"table-center table-margin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table table-hover table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      className: \"table-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"td\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Partner's name\"), React.createElement(\"td\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Partner's surname\"), React.createElement(\"td\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Entry time\"), React.createElement(\"td\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Exit time\"), React.createElement(\"td\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Location\"), React.createElement(\"td\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Average depth\"), React.createElement(\"td\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Maximum depth\"), React.createElement(\"td\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Air temperature\"), React.createElement(\"td\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Water temperature\"), React.createElement(\"td\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Diving type\"), React.createElement(\"td\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"PDF\"), React.createElement(\"td\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"DELETE\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.showTableRows()))));\n  }\n\n  onSubmit() {\n    React.createElement(Redirect, {\n      to: \"/add/dive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    let isEmptyLogbook = this.state.isEmptyLogbook;\n    return React.createElement(\"div\", {\n      className: \"logbook-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"logbook-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Add dive to logbook\")), React.createElement(Link, {\n      to: \"/add/dive\",\n      className: \"add-link\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Add dive\")), isEmptyLogbook && this.showTable(), React.createElement(NoLogbookData, {\n      isEmptyLogbook: this.state.isEmptyLogbook,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction NoLogbookData(props) {\n  if (!props.isEmptyLogbook) {\n    return React.createElement(\"div\", {\n      className: \"no-data-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"alert alert-danger no-data-margin no-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"No data in your logbook.\"));\n  }\n\n  return null;\n}\n\nexport default Logbook;","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/logbook/Logbook.js"],"names":["React","Link","Redirect","Logbook","Component","constructor","state","logbooks","isEmptyLogbook","showTableRows","bind","onSubmit","componentDidMount","jwtToken","localStorage","getItem","fetch","method","headers","then","response","json","jsonData","console","log","length","setState","rowNumber","map","logbook","index","partnerName","partnerSurname","entryTime","exitTime","marker","name","averageDepth","maxDepth","airTemperature","waterTemperature","divingType","showTable","render","NoLogbookData","props"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../css/Logbook.css';\nimport { Link } from 'react-router-dom';\nimport { Redirect } from 'react-router-dom';\n\nclass Logbook extends React.Component {\n    constructor() {\n        super();\n        \n        this.state = {\n            logbooks: [],\n            isEmptyLogbook: false\n        }\n        this.showTableRows = this.showTableRows.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        let jwtToken = localStorage.getItem(\"JwtToken\");\n\n        fetch(`/get/logbook/${jwtToken}`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'content-type': 'application/json'\n            }\n        }).then(response => response.json())\n        .then(jsonData => {\n            console.log(jsonData);\n        });\n    }\n\n    showTableRows() {\n        if(this.state.logbooks.length === 0) {\n            this.setState({ isEmptyLogbook: true });\n        } else {\n            if(this.state.isEmptyLogbook === true) {\n                this.setState({ isEmptyLogbook: false });\n            }\n            let rowNumber = 0;\n            return this.state.logbooks.map((logbook, index) => {\n                return (\n                    <tr key={index}>\n                        <th scope=\"row\">{++rowNumber}</th>\n                        <td>{logbook.partnerName}</td>\n                        <td>{logbook.partnerSurname}</td>\n                        <td>{logbook.entryTime}</td>\n                        <td>{logbook.exitTime}</td>\n                        <td>{logbook.marker.name}</td>\n                        <td>{logbook.averageDepth}</td>\n                        <td>{logbook.maxDepth}</td>\n                        <td>{logbook.airTemperature}</td>\n                        <td>{logbook.waterTemperature}</td>\n                        <td>{logbook.divingType}</td>\n                        <td>\n                            <button className=\"btn btn-primary\">\n                                PDF\n                            </button>\n                        </td>\n                        <td>\n                            <button className=\"btn btn-danger\">\n                                DELETE\n                            </button>\n                        </td>\n                    </tr>\n                );\n            })\n        }\n    }\n\n    showTable() {\n        return (\n            <div className=\"table-center table-margin\">\n                <div className=\"table-responsive\">\n                    <table className=\"table table-hover table-striped\">\n                        <thead>\n                            <tr className=\"table-success\">\n                                <td scope=\"col\">#</td>\n                                <td scope=\"col\">Partner's name</td>\n                                <td scope=\"col\">Partner's surname</td>\n                                <td scope=\"col\">Entry time</td>\n                                <td scope=\"col\">Exit time</td>\n                                <td scope=\"col\">Location</td>\n                                <td scope=\"col\">Average depth</td>\n                                <td scope=\"col\">Maximum depth</td>\n                                <td scope=\"col\">Air temperature</td>\n                                <td scope=\"col\">Water temperature</td>\n                                <td scope=\"col\">Diving type</td>\n                                <td scope=\"col\">PDF</td>\n                                <td scope=\"col\">DELETE</td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            { this.showTableRows() }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n\n    onSubmit() {\n        <Redirect to=\"/add/dive\" />\n    }\n\n    render() {\n        let isEmptyLogbook = this.state.isEmptyLogbook;\n\n        return (\n            <div className=\"logbook-container\">\n                <div className=\"logbook-center\">\n                    <form onSubmit={this.onSubmit}>\n                        <button className=\"btn btn-primary\">\n                            Add dive to logbook\n                        </button>\n                    </form>\n                    <Link \n                        to=\"/add/dive\"\n                        className=\"add-link\"\n                    >\n                        Add dive\n                    </Link>\n                </div>\n                { isEmptyLogbook && this.showTable() }        \n                <NoLogbookData isEmptyLogbook={this.state.isEmptyLogbook} />\n            </div>\n        );\n    }\n}\n\nfunction NoLogbookData(props) {\n    if(!props.isEmptyLogbook) {\n        return (\n            <div className=\"no-data-center\">\n                <div className=\"alert alert-danger no-data-margin no-data\">\n                    No data in your logbook.\n                </div>\n            </div>\n        );\n    }\n    return null;\n}\n\nexport default Logbook;"]},"metadata":{},"sourceType":"module"}