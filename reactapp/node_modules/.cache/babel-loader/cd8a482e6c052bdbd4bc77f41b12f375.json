{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/Divelog/reactapp/src/components/twitter/twitter-home/TwitterHome.js\";\nimport React from 'react';\nimport '../../../css/TimelineLikes.css';\nimport withAuth from '../../../util/withAuth';\nimport AuthService from '../../../util/AuthService';\nimport TwitterCategoriesCard from '../TwitterCategoriesCard';\nimport SearchTwitterPeople from '../SearchTwitterPeople';\nimport AvailableTrends from '../AvailableTrends';\nimport TwitterFriendsList from '../TwitterFriendsList';\nimport $ from 'jquery';\nimport TwitterHomeAdd from './TwitterHomeAdd';\nimport { BACKEND_API_URL } from '../../../actions/types';\n\nclass TwitterHome extends React.Component {\n  constructor(props) {\n    super(props);\n    this.isMountedTwitter = false;\n    this.state = {\n      accessToken: '',\n      email: '',\n      name: '',\n      userID: '',\n      pictureUrl: '',\n      providerId: '',\n      screenName: '',\n      tokenSecret: '',\n      tweets: '',\n      isTweetsRetrieved: false\n    };\n    this.Auth = new AuthService();\n    this.addNewTweet = this.addNewTweet.bind(this);\n  }\n\n  componentDidMount() {\n    this.isMountedTwitter = true;\n    let jwtToken = this.Auth.getRightSocialToken();\n    this.setState({\n      isLoading: true\n    }, () => {\n      fetch(\"\".concat(BACKEND_API_URL, \"/getuserdata/\").concat(jwtToken), {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(response => response.json()).then(jsonData => {\n        if (this.isMountedTwitter) {\n          this.setState({\n            accessToken: jsonData.accessToken,\n            email: jsonData.email,\n            name: jsonData.name,\n            twitterUserID: jsonData.twitterUserID,\n            pictureUrl: jsonData.pictureUrl,\n            providerId: jsonData.providerId,\n            screenName: jsonData.screenName,\n            tokenSecret: jsonData.tokenSecret\n          }, () => {\n            fetch(\"\".concat(BACKEND_API_URL, \"/twitter/home/timeline/\").concat(jwtToken), {\n              method: 'GET',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              }\n            }).then(response => {\n              return response.text();\n            }).then(text => {\n              this.setState({\n                tweets: text,\n                isLoading: false\n              }, () => {\n                $(\".home-timeline-container\").html(text);\n                $(\".twitter-tweet\").attr(\"data-width\", \"520px\");\n              });\n            });\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n  }\n\n  addNewTweet(newTweet) {\n    this.setState({\n      tweets: newTweet + this.state.tweets\n    }, () => {\n      $(\".home-timeline-container\").html(this.state.tweets);\n      $(\".twitter-tweet\").attr(\"data-width\", \"520px\");\n    });\n  }\n\n  componentWillUnmount() {\n    this.isMountedTwitter = false;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"twitter-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-grid-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-grid-item-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-left-categories-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-profil-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, this.state.name), React.createElement(TwitterCategoriesCard, {\n      pictureUrl: this.state.pictureUrl,\n      screenName: this.state.screenName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"twitter-home-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(TwitterHomeAdd, {\n      pictureUrl: this.state.pictureUrl,\n      addNewTweet: this.addNewTweet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"home-timeline-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"twitter-grid-item-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-rl-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-groups-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(SearchTwitterPeople, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(AvailableTrends, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"twitter-rr-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-friends-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default withAuth(TwitterHome, {\n  twitterHome: true\n});","map":{"version":3,"sources":["/home/huber/Pulpit/Divelog/reactapp/src/components/twitter/twitter-home/TwitterHome.js"],"names":["React","withAuth","AuthService","TwitterCategoriesCard","SearchTwitterPeople","AvailableTrends","TwitterFriendsList","$","TwitterHomeAdd","BACKEND_API_URL","TwitterHome","Component","constructor","props","isMountedTwitter","state","accessToken","email","name","userID","pictureUrl","providerId","screenName","tokenSecret","tweets","isTweetsRetrieved","Auth","addNewTweet","bind","componentDidMount","jwtToken","getRightSocialToken","setState","isLoading","fetch","method","headers","then","response","json","jsonData","twitterUserID","text","html","attr","catch","err","console","log","newTweet","componentWillUnmount","render","twitterHome"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../../css/TimelineLikes.css';\nimport withAuth from '../../../util/withAuth';\nimport AuthService from '../../../util/AuthService';\nimport TwitterCategoriesCard from '../TwitterCategoriesCard';\nimport SearchTwitterPeople from '../SearchTwitterPeople';\nimport AvailableTrends from '../AvailableTrends';\nimport TwitterFriendsList from '../TwitterFriendsList';\nimport $ from 'jquery';\nimport TwitterHomeAdd from './TwitterHomeAdd';\nimport { BACKEND_API_URL } from '../../../actions/types';\n\nclass TwitterHome extends React.Component {\n    isMountedTwitter = false;\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            accessToken: '',\n            email: '',\n            name: '',\n            userID: '',\n            pictureUrl: '',\n            providerId: '',\n            screenName: '',\n            tokenSecret: '',\n            tweets: '',\n            isTweetsRetrieved: false\n        }\n        this.Auth = new AuthService();\n\n        this.addNewTweet = this.addNewTweet.bind(this);\n    }\n\n    componentDidMount() {\n        this.isMountedTwitter = true;\n        let jwtToken = this.Auth.getRightSocialToken();\n\n        this.setState({ isLoading: true }, () => {\n            fetch(`${BACKEND_API_URL}/getuserdata/${jwtToken}`, {\n                method: 'GET',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            })\n            .then(response => response.json())\n            .then(jsonData => {\n                if(this.isMountedTwitter) {\n                    this.setState({\n                        accessToken: jsonData.accessToken,\n                        email: jsonData.email,\n                        name: jsonData.name,\n                        twitterUserID: jsonData.twitterUserID,\n                        pictureUrl: jsonData.pictureUrl,\n                        providerId: jsonData.providerId,\n                        screenName: jsonData.screenName,\n                        tokenSecret: jsonData.tokenSecret\n                    }, () => {\n                        fetch(`${BACKEND_API_URL}/twitter/home/timeline/${jwtToken}`, {\n                            method: 'GET',\n                            headers: {\n                                'Accept': 'application/json',\n                                'Content-Type': 'application/json'\n                            }\n                        }).then(response => {\n                            return response.text();\n                        }).then(text => {\n                            this.setState({ \n                                tweets: text,\n                                isLoading: false\n                            }, () => {\n                                $(\".home-timeline-container\").html(text);\n                                $(\".twitter-tweet\").attr(\"data-width\", \"520px\");\n                            });                      \n                        });\n                    });\n                }\n            }).catch(err => {\n                console.log(err);\n            });\n        });\n\n        \n    }\n\n    addNewTweet(newTweet) {\n        this.setState({ tweets: newTweet + this.state.tweets }, () => {\n            $(\".home-timeline-container\").html(this.state.tweets);\n            $(\".twitter-tweet\").attr(\"data-width\", \"520px\");\n        });\n    }\n\n    componentWillUnmount() {\n        this.isMountedTwitter = false;\n    }\n\n    render() {\n        return (\n            <div className=\"twitter-container\">\n                <div className=\"twitter-grid-container\">\n                    <div className=\"twitter-grid-item-1\">\n                        <div className=\"twitter-left-categories-container\">\n                            <div className=\"twitter-profil-container\">\n                                { this.state.name }\n                            </div>\n                            <TwitterCategoriesCard\n                                pictureUrl={this.state.pictureUrl}\n                                screenName={this.state.screenName}\n                            />    \n                        </div>\n                    </div>\n                    <div className=\"twitter-home-container\">\n                        <TwitterHomeAdd \n                            pictureUrl={this.state.pictureUrl}\n                            addNewTweet={this.addNewTweet}\n                        />\n                        <div className=\"home-timeline-container\">\n\n                        </div>\n                    </div>\n                    <div className=\"twitter-grid-item-3\">\n                        <div className=\"twitter-rl-container\">\n                            <div className=\"twitter-groups-container\">\n                                <SearchTwitterPeople />\n                                <AvailableTrends />\n                            </div>\n                        </div>\n                        <div className=\"twitter-rr-container\">\n                            <div className=\"twitter-friends-container\">\n                                {/* <TwitterFriendsList /> */}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withAuth(TwitterHome, { twitterHome: true });"]},"metadata":{},"sourceType":"module"}