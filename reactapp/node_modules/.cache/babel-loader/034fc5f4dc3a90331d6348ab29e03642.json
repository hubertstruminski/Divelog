{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/forum/Post.js\";\nimport React from 'react';\nimport '../../css/TopicWithPosts.css';\nimport ReactPlayer from 'react-player';\nimport swal from 'sweetalert';\n\nclass Post extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      isOwner: false\n    };\n    this.addImages = this.addImages.bind(this);\n    this.addVideos = this.addVideos.bind(this);\n    this.onDeleteClick = this.onDeleteClick.bind(this);\n  }\n\n  componentDidMount() {\n    let jwtToken = localStorage.getItem(\"JwtToken\");\n    fetch(\"/getuserdata/\".concat(jwtToken), {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(response => response.json()).then(jsonData => {\n      this.setState({\n        email: jsonData.email\n      }, () => {\n        if (this.props.user.email === this.state.email) {\n          this.setState({\n            isOwner: true\n          });\n        }\n      });\n    });\n  }\n\n  addImages() {\n    return this.props.files.map((file, index) => {\n      if (file.type.includes('image')) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }), React.createElement(\"img\", {\n          src: file.url,\n          alt: file.name,\n          className: \"attachment-images\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }), file.name, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }));\n      }\n    });\n  }\n\n  addVideos() {\n    return this.props.files.map((file, index) => {\n      if (file.type.includes('video')) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }), React.createElement(ReactPlayer, {\n          url: file.url,\n          playing: true,\n          controls: \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }), file.name, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }));\n      }\n    });\n  }\n\n  onDeleteClick() {\n    let postId = this.props.id;\n    let jwtToken = localStorage.getItem(\"JwtToken\");\n    fetch(\"/delete/post/\".concat(postId, \"/\").concat(jwtToken), {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'content-type': 'application/json'\n      }\n    }).then(response => {\n      if (response.status !== 200) {\n        swal(\"Error\", \"Something goes wrong.\", \"error\");\n      } else {\n        this.props.fetchTopicAndPosts();\n        swal(\"Success\", \"Post has been removed successfully.\", \"success\");\n      }\n    });\n  }\n\n  render() {\n    let isOwner = this.state.isOwner;\n    return React.createElement(\"div\", {\n      className: \"main-post-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main-post-container post-margin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main-post-grid-one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main-post-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.props.createdAt), React.createElement(\"div\", {\n      className: \"main-post-avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.user.pictureUrl,\n      alt: \"Avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"main-post-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.props.user.name)), React.createElement(\"div\", {\n      className: \"main-post-grid-two\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main-post-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, this.props.message), React.createElement(\"div\", {\n      className: \"main-post-attachments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.addImages(), this.addVideos()), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, isOwner && React.createElement(React.Fragment, null, React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"EDIT\"), React.createElement(\"button\", {\n      className: \"btn btn-danger\",\n      onClick: this.onDeleteClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"DELETE\"))))));\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/forum/Post.js"],"names":["React","ReactPlayer","swal","Post","Component","constructor","props","state","email","isOwner","addImages","bind","addVideos","onDeleteClick","componentDidMount","jwtToken","localStorage","getItem","fetch","method","headers","then","response","json","jsonData","setState","user","files","map","file","index","type","includes","url","name","postId","id","status","fetchTopicAndPosts","render","createdAt","pictureUrl","message"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../css/TopicWithPosts.css';\nimport ReactPlayer from 'react-player';\nimport swal from 'sweetalert';\n\nclass Post extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            isOwner: false\n        }\n        this.addImages = this.addImages.bind(this);\n        this.addVideos = this.addVideos.bind(this);\n        this.onDeleteClick = this.onDeleteClick.bind(this);\n    }\n\n    componentDidMount() {\n        let jwtToken = localStorage.getItem(\"JwtToken\");\n\n        fetch(`/getuserdata/${jwtToken}`, {\n            method: 'GET',\n            headers: {\n              'content-type': 'application/json'\n            }\n        })\n        .then(response => response.json())\n        .then(jsonData => {\n            this.setState({ email: jsonData.email }, () => {\n                if(this.props.user.email === this.state.email) {\n                    this.setState({ isOwner: true });\n                }\n            });\n        }); \n    }\n\n    addImages() {\n        return this.props.files.map((file, index) => {\n            if(file.type.includes('image')) {\n                return (\n                    <div>\n                        <br />\n                        <img \n                            src={file.url} \n                            alt={file.name} \n                            className=\"attachment-images\"\n                        />\n                        <br />\n                        { file.name }\n                        <br />\n                    </div>\n                );\n            }\n        });\n    }\n\n    addVideos() {\n        return this.props.files.map((file, index) => {\n            if(file.type.includes('video')) {\n                return (\n                    <div>\n                        <br />\n                        <ReactPlayer \n                            url={file.url} \n                            playing\n                            controls=\"true\"\n                        />\n                        <br />\n                        { file.name }\n                        <br />\n                    </div>\n                );\n            }\n        })\n    }\n\n    onDeleteClick() {\n        let postId = this.props.id;\n        let jwtToken = localStorage.getItem(\"JwtToken\");\n\n        fetch(`/delete/post/${postId}/${jwtToken}`, {\n            method: 'DELETE',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'content-type': 'application/json'\n            }\n        }).then(response => {\n            if(response.status !== 200) {\n                swal(\"Error\", \"Something goes wrong.\", \"error\");\n            } else {\n                this.props.fetchTopicAndPosts();\n                swal(\"Success\", \"Post has been removed successfully.\", \"success\");\n            }\n        });\n    }\n\n    render() {\n        let isOwner = this.state.isOwner;\n\n        return (\n            <div className=\"main-post-center\">\n                <div className=\"main-post-container post-margin\">\n                    <div className=\"main-post-grid-one\">\n                        <div className=\"main-post-header\">\n                            { this.props.createdAt }\n                        </div>\n                        <div className=\"main-post-avatar\">\n                            <img src={this.props.user.pictureUrl} alt=\"Avatar\" />\n                        </div>\n                        <div className=\"main-post-footer\">\n                            { this.props.user.name }\n                        </div>\n                    </div>\n                    <div className=\"main-post-grid-two\">\n                        <div className=\"main-post-message\">\n                            { this.props.message }\n                        </div>\n                        <div className=\"main-post-attachments\">\n                            { this.addImages() }\n                            { this.addVideos() }\n                        </div>\n                \n                        <div>\n                            { isOwner &&\n                                <>\n                                    <hr />\n                                    <button className=\"btn btn-warning\">\n                                        EDIT\n                                    </button>\n                                \n                                    <button \n                                        className=\"btn btn-danger\"\n                                        onClick={this.onDeleteClick}\n                                    >\n                                        DELETE\n                                    </button>\n                                </>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Post;"]},"metadata":{},"sourceType":"module"}