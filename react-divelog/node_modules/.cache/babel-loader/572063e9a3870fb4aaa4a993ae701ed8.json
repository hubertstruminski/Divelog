{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/forum/AddPosts.js\";\nimport React from 'react';\nimport '../../css/AddPosts.css';\nimport ReactFilestack from 'filestack-react';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport { withRouter } from 'react-router';\n\nclass AddPosts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: '',\n      isInvalidMessage: false,\n      successFiles: [],\n      successNameFiles: [],\n      isSuccessUploaded: false,\n      isFailureUploaded: false,\n      failureNameFiles: []\n    };\n    this.errors = [];\n    this.onChange = this.onChange.bind(this);\n    this.onSubmitForm = this.onSubmitForm.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n    this.responseFilestack = this.responseFilestack.bind(this);\n    this.onErrorFilestack = this.onErrorFilestack.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  showInvalidMessage(isInvalidMessage) {\n    if (isInvalidMessage) {\n      return React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Message length must be minimum 10 characters.\");\n    }\n\n    return null;\n  }\n\n  showSuccessUploadedFiles(isSuccessUploaded) {\n    if (isSuccessUploaded) {\n      return React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Success uploaded files:\", this.state.successNameFiles.map((name, index) => {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, name);\n      }));\n    }\n\n    return null;\n  }\n\n  showFailureUploadedFiles(isFailureUploaded) {\n    if (isFailureUploaded) {\n      return React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Failure uploaded files:\", this.state.failureNameFiles.map((name, index) => {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, name);\n      }));\n    }\n\n    return null;\n  }\n\n  validateForm(e) {\n    if (this.state.message.length < 10) {\n      e.preventDefault();\n      this.setState({\n        isInvalidMessage: true\n      });\n      this.errors.push(true);\n    }\n  }\n\n  onSubmitForm(e) {\n    e.preventDefault();\n    this.validateForm(e);\n\n    if (this.errors.length === 0) {\n      let jwtToken = localStorage.getItem(\"JwtToken\");\n      let topicId = this.props.topicId;\n      let languageForum = this.props.languageForum;\n      const post = {\n        message: this.state.message,\n        languageForum: languageForum,\n        topicId: topicId,\n        jwtToken: jwtToken,\n        files: this.state.successFiles,\n        isPostOwner: true\n      };\n      axios({\n        url: \"/add/post\",\n        method: 'POST',\n        data: JSON.stringify(post),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        if (response.status !== 200) {\n          swal(\"Error\", \"Something goes wrong.\", \"error\");\n        } else {// this.props.history.push(\"/forum\");\n        }\n      });\n    }\n  }\n\n  responseFilestack(response) {\n    response.filesUploaded.map((file, index) => {\n      const element = {\n        objectId: file.uploadId,\n        url: file.url,\n        size: file.size,\n        name: file.originalFile.name,\n        type: file.originalFile.type\n      };\n      this.setState({\n        successFiles: this.state.successFiles.concat(element),\n        successNameFiles: this.state.successNameFiles.concat(file.originalFile.name),\n        isSuccessUploaded: true\n      });\n    });\n    response.filesFailed.map((file, index) => {\n      this.setState({\n        failureNameFiles: this.state.failureNameFiles.concat(file.originalFile.name)\n      });\n    });\n  }\n\n  onErrorFilestack() {\n    swal(\"Error\", \"Something goes wrong.\", \"error\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"add-post-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"new-post-box new-post-box-shadow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"new-post-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Add new post\"), React.createElement(\"form\", {\n      onSubmit: this.onSubmitForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"new-post-label\",\n      for: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Message\"), React.createElement(\"textarea\", {\n      className: \"form-control form-control-lg new-post-textarea\",\n      id: \"message\",\n      name: \"message\",\n      value: this.state.message,\n      onChange: this.onChange,\n      rows: \"5\",\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), this.showInvalidMessage(this.state.isInvalidMessage), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"new-post-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Upload data\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(ReactFilestack, {\n      apikey: \"Abn3RoxlVQeWNtMpk2Gflz\",\n      onSuccess: this.responseFilestack,\n      onError: this.onErrorFilestack,\n      componentDisplayMode: {\n        type: 'button',\n        customText: 'Upload files',\n        customClass: 'btn btn-warning btn-upload'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        clear: \"both\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), this.showSuccessUploadedFiles(this.state.isSuccessUploaded), this.showFailureUploadedFiles(this.state.isFailureUploaded)), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary new-post-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Publicate\"))));\n  }\n\n}\n\nexport default withRouter(AddPosts);","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/forum/AddPosts.js"],"names":["React","ReactFilestack","swal","axios","withRouter","AddPosts","Component","constructor","props","state","message","isInvalidMessage","successFiles","successNameFiles","isSuccessUploaded","isFailureUploaded","failureNameFiles","errors","onChange","bind","onSubmitForm","validateForm","responseFilestack","onErrorFilestack","e","setState","target","name","value","showInvalidMessage","showSuccessUploadedFiles","map","index","showFailureUploadedFiles","length","preventDefault","push","jwtToken","localStorage","getItem","topicId","languageForum","post","files","isPostOwner","url","method","data","JSON","stringify","headers","then","response","status","filesUploaded","file","element","objectId","uploadId","size","originalFile","type","concat","filesFailed","render","color","customText","customClass","clear"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../css/AddPosts.css';\nimport ReactFilestack from 'filestack-react';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport { withRouter } from 'react-router';\n\nclass AddPosts extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n            message: '',\n            isInvalidMessage: false,\n            successFiles: [],\n            successNameFiles: [],\n            isSuccessUploaded: false,\n            isFailureUploaded: false,\n            failureNameFiles: []\n        }\n        this.errors = [];\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmitForm = this.onSubmitForm.bind(this);\n        this.validateForm = this.validateForm.bind(this);\n        this.responseFilestack = this.responseFilestack.bind(this);\n        this.onErrorFilestack = this.onErrorFilestack.bind(this);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    showInvalidMessage(isInvalidMessage) {\n        if(isInvalidMessage) {\n            return (\n                <div className=\"alert alert-danger\">\n                    Message length must be minimum 10 characters.\n                </div>\n            );\n        }\n        return null;\n    }\n\n    showSuccessUploadedFiles(isSuccessUploaded) {\n        if(isSuccessUploaded) {\n            return (\n                <div className=\"alert alert-warning\">\n                    Success uploaded files:\n                    { this.state.successNameFiles.map((name, index) => {\n                        return <p>{name}</p>\n                    })}\n                </div>\n            );\n        }\n        return null;\n    }\n\n    showFailureUploadedFiles(isFailureUploaded) {\n        if(isFailureUploaded) {\n            return (\n                <div className=\"alert alert-danger\">\n                    Failure uploaded files:\n                    { this.state.failureNameFiles.map((name, index) => {\n                        return <p>{name}</p>\n                    })}\n                </div>\n            );\n        }\n        return null;\n    }\n\n    validateForm(e) {\n        if(this.state.message.length < 10) {\n            e.preventDefault();\n            this.setState({ isInvalidMessage: true });\n            this.errors.push(true);\n        }\n    }\n\n    onSubmitForm(e) {\n        e.preventDefault();\n\n        this.validateForm(e);\n\n        if(this.errors.length === 0) {\n            let jwtToken = localStorage.getItem(\"JwtToken\");\n            let topicId = this.props.topicId;\n            let languageForum = this.props.languageForum;\n\n            const post = {\n                message: this.state.message,\n                languageForum: languageForum,\n                topicId: topicId,\n                jwtToken: jwtToken,\n                files: this.state.successFiles,\n                isPostOwner: true\n            }\n\n            axios({\n                url: \"/add/post\",\n                method: 'POST',\n                data: JSON.stringify(post),\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            }).then(response => {\n                if(response.status !== 200) {\n                    swal(\"Error\", \"Something goes wrong.\", \"error\");\n                } else {\n                    // this.props.history.push(\"/forum\");\n                }\n            });\n        }\n    }\n\n    responseFilestack(response) {\n        response.filesUploaded.map((file, index) => {\n            const element = {\n                objectId: file.uploadId,\n                url: file.url,\n                size: file.size,\n                name: file.originalFile.name,\n                type: file.originalFile.type\n            };\n            this.setState({ \n                successFiles: this.state.successFiles.concat(element),\n                successNameFiles: this.state.successNameFiles.concat(file.originalFile.name),\n                isSuccessUploaded: true\n            });\n        });\n\n        response.filesFailed.map((file, index) => {\n            this.setState({ failureNameFiles: this.state.failureNameFiles.concat(file.originalFile.name) });\n        });\n    }\n\n    onErrorFilestack() {\n        swal(\"Error\", \"Something goes wrong.\", \"error\");\n    }\n\n    render() {\n        return (\n            <div className=\"add-post-center\">\n                <div className=\"new-post-box new-post-box-shadow\">\n                    <div className=\"new-post-title\">\n                        Add new post\n                    </div>\n\n                    <form onSubmit={this.onSubmitForm}>\n                        <div className=\"form-group\">\n                            <label className=\"new-post-label\" for=\"message\">Message</label>\n                            <textarea\n                                className=\"form-control form-control-lg new-post-textarea\"\n                                id=\"message\"\n                                name=\"message\"\n                                value={this.state.message}\n                                onChange={this.onChange}\n                                rows=\"5\"\n                                style={{ color: 'white' }}\n                            >\n                            </textarea>\n                        </div>\n                        { this.showInvalidMessage(this.state.isInvalidMessage) }\n\n                        <div className=\"form-group\">\n                            <label className=\"new-post-label\">Upload data</label>\n                            <br />\n                            <ReactFilestack\n                                apikey=\"Abn3RoxlVQeWNtMpk2Gflz\"\n                                onSuccess={this.responseFilestack}\n                                onError={this.onErrorFilestack}\n                                componentDisplayMode={{\n                                    type: 'button',\n                                    customText: 'Upload files',\n                                    customClass: 'btn btn-warning btn-upload'\n                                }}\n                            />\n                            <div style={{ clear: \"both\" }}></div>\n                            { this.showSuccessUploadedFiles(this.state.isSuccessUploaded) }\n                            { this.showFailureUploadedFiles(this.state.isFailureUploaded) }\n                        </div>\n\n                        <button \n                            type=\"submit\" \n                            className=\"btn btn-primary new-post-btn\"\n                        >\n                            Publicate\n                        </button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(AddPosts);"]},"metadata":{},"sourceType":"module"}