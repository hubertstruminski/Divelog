{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/util/withAuth.js\";\nimport React from 'react';\nimport AuthService from './AuthService';\nimport HeaderIn from '../components/Layout/HeaderIn';\nexport default function withAuth(AuthComponent) {\n  const Auth = new AuthService();\n\n  class AuthWrapped extends React.Component {\n    constructor(props) {\n      super(props);\n    } // componentWillMount() {\n    //     if(!Auth.loggedIn()) {\n    //         this.props.history.replace(\"/login\")\n    //     } else {\n    //         try {\n    //             this.props.history.replace(\"/dashboard\");\n    //         } catch(err) {\n    //             Auth.logout();\n    //             this.props.history.replace(\"/login\");\n    //         }\n    //     }\n    // }\n\n\n    render() {\n      if (Auth.loggedIn()) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(HeaderIn, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }), React.createElement(AuthComponent, {\n          history: this.props.history,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }));\n      } else {\n        return null;\n      }\n    }\n\n  }\n\n  return AuthWrapped;\n}","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/util/withAuth.js"],"names":["React","AuthService","HeaderIn","withAuth","AuthComponent","Auth","AuthWrapped","Component","constructor","props","render","loggedIn","history"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AAEA,eAAe,SAASC,QAAT,CAAkBC,aAAlB,EAAiC;AAC5C,QAAMC,IAAI,GAAI,IAAIJ,WAAJ,EAAd;;AAEA,QAAMK,WAAN,SAA0BN,KAAK,CAACO,SAAhC,CAA0C;AACtCC,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,YAAMA,KAAN;AACH,KAHqC,CAKtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,IAAAA,MAAM,GAAG;AACL,UAAGL,IAAI,CAACM,QAAL,EAAH,EAAoB;AAChB,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI,oBAAC,aAAD;AAAe,UAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADJ;AAMH,OAPD,MAOO;AACH,eAAO,IAAP;AACH;AACJ;;AA7BqC;;AA+B1C,SAAON,WAAP;AACH","sourcesContent":["import React from 'react';\nimport AuthService from './AuthService';\nimport HeaderIn from '../components/Layout/HeaderIn';\n\nexport default function withAuth(AuthComponent) {\n    const Auth =  new AuthService();\n\n    class AuthWrapped extends React.Component {\n        constructor(props) {\n            super(props);\n        }\n\n        // componentWillMount() {\n        //     if(!Auth.loggedIn()) {\n        //         this.props.history.replace(\"/login\")\n        //     } else {\n        //         try {\n        //             this.props.history.replace(\"/dashboard\");\n        //         } catch(err) {\n        //             Auth.logout();\n        //             this.props.history.replace(\"/login\");\n        //         }\n        //     }\n        // }\n\n        render() {\n            if(Auth.loggedIn()) {\n                return (\n                    <div>\n                        <HeaderIn />\n                        <AuthComponent history={this.props.history} />\n                    </div>\n                );\n            } else {\n                return null;\n            }\n        }\n    }\n    return AuthWrapped;\n}"]},"metadata":{},"sourceType":"module"}