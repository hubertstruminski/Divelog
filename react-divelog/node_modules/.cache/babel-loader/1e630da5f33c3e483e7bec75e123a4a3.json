{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/logbook/Logbook.js\";\nimport React from 'react';\nimport '../../css/Logbook.css';\nimport { Redirect } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nclass Logbook extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      logbooks: [],\n      isEmptyLogbook: false\n    };\n    this.showTableRows = this.showTableRows.bind(this);\n  }\n\n  componentDidMount() {\n    let jwtToken = localStorage.getItem(\"JwtToken\");\n    fetch(\"/get/logbook/\".concat(jwtToken), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'content-type': 'application/json'\n      }\n    }).then(response => response.json()).then(jsonData => {\n      console.log(jsonData);\n      const element = {\n        partnerName: jsonData.partnerName,\n        partnerSurname: jsonData.partnerSurname,\n        entryTime: jsonData.entryTime,\n        exitTime: jsonData.exitTime,\n        location: jsonData.marker.name,\n        averageDepth: jsonData.averageDepth,\n        maxDepth: jsonData.maxDepth,\n        airTemperature: jsonData.airTemperature,\n        waterTemperature: jsonData.waterTemperature,\n        divingType: jsonData.divingType\n      };\n      this.setState({\n        logbooks: this.state.logbooks.concat(element)\n      });\n    });\n  }\n\n  showTableRows() {\n    if (this.state.logbooks.length === 0) {\n      this.setState({\n        isEmptyLogbook: true\n      });\n    } else {\n      if (this.state.isEmptyLogbook === true) {\n        this.setState({\n          isEmptyLogbook: false\n        });\n      }\n\n      let rowNumber = 0;\n      return this.state.logbooks.map((logbook, index) => {\n        return React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, ++rowNumber), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, logbook.partnerName), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, logbook.partnerSurname), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, logbook.entryTime), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, logbook.exitTime), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, logbook.location), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, logbook.averageDepth), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, logbook.maxDepth), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, logbook.airTemperature), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, logbook.waterTemperature), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, logbook.divingType), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, \"PDF\")), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"DELETE\")));\n      });\n    }\n  }\n\n  showTable() {\n    return React.createElement(\"div\", {\n      className: \"table-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table table-hover table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      className: \"table-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Partner's name\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Partner's surname\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Entry time\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Exit time\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Location\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Average depth\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Maximum depth\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Air temperature\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Water temperature\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Diving type\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"PDF\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"DELETE\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.showTableRows()))));\n  }\n\n  render() {\n    let isEmptyLogbook = this.state.isEmptyLogbook;\n    return React.createElement(\"div\", {\n      className: \"logbook-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/add/dive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"btn btn-primary btn-padding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Add dive to logbook\")), isEmptyLogbook && this.showTable(), React.createElement(NoLogbookData, {\n      isEmptyLogbook: this.state.isEmptyLogbook,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction NoLogbookData(props) {\n  if (!props.isEmptyLogbook) {\n    return React.createElement(\"div\", {\n      className: \"alert alert-danger alert-margin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"No data in your logbook.\");\n  }\n\n  return null;\n}\n\nexport default withRouter(Logbook);","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/logbook/Logbook.js"],"names":["React","Redirect","withRouter","Link","Logbook","Component","constructor","state","logbooks","isEmptyLogbook","showTableRows","bind","componentDidMount","jwtToken","localStorage","getItem","fetch","method","headers","then","response","json","jsonData","console","log","element","partnerName","partnerSurname","entryTime","exitTime","location","marker","name","averageDepth","maxDepth","airTemperature","waterTemperature","divingType","setState","concat","length","rowNumber","map","logbook","index","showTable","render","NoLogbookData","props"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../css/Logbook.css';\nimport { Redirect } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nclass Logbook extends React.Component {\n    constructor() {\n        super();\n        \n        this.state = {\n            logbooks: [],\n            isEmptyLogbook: false\n        }\n        this.showTableRows = this.showTableRows.bind(this);\n    }\n\n    componentDidMount() {\n        let jwtToken = localStorage.getItem(\"JwtToken\");\n\n        fetch(`/get/logbook/${jwtToken}`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'content-type': 'application/json'\n            }\n        }).then(response => response.json())\n        .then(jsonData => {\n            console.log(jsonData);\n            const element = {\n                partnerName: jsonData.partnerName,\n                partnerSurname: jsonData.partnerSurname,\n                entryTime: jsonData.entryTime,\n                exitTime: jsonData.exitTime,\n                location: jsonData.marker.name,\n                averageDepth: jsonData.averageDepth,\n                maxDepth: jsonData.maxDepth,\n                airTemperature: jsonData.airTemperature,\n                waterTemperature: jsonData.waterTemperature,\n                divingType: jsonData.divingType\n            }\n            this.setState({ logbooks: this.state.logbooks.concat(element) });\n        });\n    }\n\n    showTableRows() {\n        if(this.state.logbooks.length === 0) {\n            this.setState({ isEmptyLogbook: true });\n        } else {\n            if(this.state.isEmptyLogbook === true) {\n                this.setState({ isEmptyLogbook: false });\n            }\n            let rowNumber = 0;\n            return this.state.logbooks.map((logbook, index) => {\n                return (\n                    <tr key={index}>\n                        <th scope=\"row\">{++rowNumber}</th>\n                        <td>{logbook.partnerName}</td>\n                        <td>{logbook.partnerSurname}</td>\n                        <td>{logbook.entryTime}</td>\n                        <td>{logbook.exitTime}</td>\n                        <td>{logbook.location}</td>\n                        <td>{logbook.averageDepth}</td>\n                        <td>{logbook.maxDepth}</td>\n                        <td>{logbook.airTemperature}</td>\n                        <td>{logbook.waterTemperature}</td>\n                        <td>{logbook.divingType}</td>\n                        <td>\n                            <button className=\"btn btn-primary\">\n                                PDF\n                            </button>\n                        </td>\n                        <td>\n                            <button className=\"btn btn-danger\">\n                                DELETE\n                            </button>\n                        </td>\n                    </tr>\n                );\n            })\n        }\n    }\n\n    showTable() {\n        return (\n            <div className=\"table-center\">\n                <div className=\"table-responsive\">\n                    <table className=\"table table-hover table-striped\">\n                        <thead>\n                            <tr className=\"table-success\">\n                                <th scope=\"col\">#</th>\n                                <td>Partner's name</td>\n                                <td>Partner's surname</td>\n                                <td>Entry time</td>\n                                <td>Exit time</td>\n                                <td>Location</td>\n                                <td>Average depth</td>\n                                <td>Maximum depth</td>\n                                <td>Air temperature</td>\n                                <td>Water temperature</td>\n                                <td>Diving type</td>\n                                <td>PDF</td>\n                                <td>DELETE</td>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            { this.showTableRows() }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        let isEmptyLogbook = this.state.isEmptyLogbook;\n\n        return (\n            <div className=\"logbook-container\">\n                <Link \n                    to=\"/add/dive\"\n                >\n                    <div className=\"btn btn-primary btn-padding\">\n                        Add dive to logbook\n                    </div>\n                </Link>\n                { isEmptyLogbook && this.showTable() }     \n                <NoLogbookData isEmptyLogbook={this.state.isEmptyLogbook} />\n            </div>\n        );\n    }\n}\n\nfunction NoLogbookData(props) {\n    if(!props.isEmptyLogbook) {\n        return (\n            <div className=\"alert alert-danger alert-margin\">\n                No data in your logbook.\n            </div>\n        );\n    }\n    return null;\n}\n\nexport default withRouter(Logbook);"]},"metadata":{},"sourceType":"module"}