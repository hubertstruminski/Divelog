{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/logbook/pdf/PdfLogbook.js\";\nimport React from 'react';\nimport '../../../css/PdfLogbook.css';\nimport divelogLogo from '../../../img/logo.png';\nimport { Document, Page, Text } from 'react-pdf';\n\nclass PdfLogbook extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    let logbookId = this.props.id;\n    let jwtToken = localStorage.getItem(\"JwtToken\");\n    fetch(\"/get/logbook/\".concat(jwtToken, \"/\").concat(logbookId), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'content-type': 'application/json'\n      }\n    }).then(response => response.json()).then(jsonData => {\n      let time = this.ConvertTime.convertTime(jsonData.entryTime, jsonData.exitTime, true);\n      const markerElement = {\n        id: jsonData.marker.id,\n        name: jsonData.marker.name,\n        latitude: jsonData.marker.latitude,\n        longitude: jsonData.marker.longitude\n      };\n      this.setState({\n        partnerName: jsonData.partnerName,\n        partnerSurname: jsonData.partnerSurname,\n        marker: markerElement,\n        entryTime: time[0],\n        exitTime: time[1],\n        averageDepth: jsonData.averageDepth,\n        maxDepth: jsonData.maxDepth,\n        visibility: jsonData.visibility,\n        waterTemperature: jsonData.waterTemperature,\n        airTemperature: jsonData.airTemperature,\n        cylinderCapacity: jsonData.cylinderCapacity,\n        divingSuit: jsonData.divingSuit,\n        waterType: jsonData.waterType,\n        waterEntryType: jsonData.waterEntryType,\n        ballast: jsonData.ballast,\n        glovesType: jsonData.glovesType,\n        divingType: jsonData.divingType,\n        comment: jsonData.comment\n      });\n    });\n  }\n\n  render() {\n    return (// <div className=\"pdf-logbook-container\">\n      //     <div className=\"pdf-logbook-header\">\n      //         <div className=\"pdf-logbook-logo-center\">\n      //             <img src={divelogLogo} alt=\"Divelog logo\" />\n      //             dasjkdajkadsdasjk\n      //         </div>\n      //     </div>\n      // </div>\n      React.createElement(Document, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Page, {\n        pageNumber: \"1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Hubert Strumi\\u0144ski\")))\n    );\n  }\n\n}\n\nexport default PdfLogbook;","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/logbook/pdf/PdfLogbook.js"],"names":["React","divelogLogo","Document","Page","Text","PdfLogbook","Component","constructor","props","componentDidMount","logbookId","id","jwtToken","localStorage","getItem","fetch","method","headers","then","response","json","jsonData","time","ConvertTime","convertTime","entryTime","exitTime","markerElement","marker","name","latitude","longitude","setState","partnerName","partnerSurname","averageDepth","maxDepth","visibility","waterTemperature","airTemperature","cylinderCapacity","divingSuit","waterType","waterEntryType","ballast","glovesType","divingType","comment","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,6BAAP;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,QAAT,EAAmBC,IAAnB,EAAyBC,IAAzB,QAAqC,WAArC;;AAEA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,SAAS,GAAG,KAAKF,KAAL,CAAWG,EAA3B;AACA,QAAIC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAf;AAEAC,IAAAA,KAAK,wBAAiBH,QAAjB,cAA6BF,SAA7B,GAA0C;AAC3CM,MAAAA,MAAM,EAAE,KADmC;AAE3CC,MAAAA,OAAO,EAAE;AACL,kBAAU,mCADL;AAEL,wBAAgB;AAFX;AAFkC,KAA1C,CAAL,CAOCC,IAPD,CAOMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAPlB,EAQCF,IARD,CAQMG,QAAQ,IAAI;AACd,UAAIC,IAAI,GAAG,KAAKC,WAAL,CAAiBC,WAAjB,CAA6BH,QAAQ,CAACI,SAAtC,EAAiDJ,QAAQ,CAACK,QAA1D,EAAoE,IAApE,CAAX;AAEA,YAAMC,aAAa,GAAG;AAClBhB,QAAAA,EAAE,EAAEU,QAAQ,CAACO,MAAT,CAAgBjB,EADF;AAElBkB,QAAAA,IAAI,EAAER,QAAQ,CAACO,MAAT,CAAgBC,IAFJ;AAGlBC,QAAAA,QAAQ,EAAET,QAAQ,CAACO,MAAT,CAAgBE,QAHR;AAIlBC,QAAAA,SAAS,EAAEV,QAAQ,CAACO,MAAT,CAAgBG;AAJT,OAAtB;AAOA,WAAKC,QAAL,CAAc;AACVC,QAAAA,WAAW,EAAEZ,QAAQ,CAACY,WADZ;AAEVC,QAAAA,cAAc,EAAEb,QAAQ,CAACa,cAFf;AAGVN,QAAAA,MAAM,EAAED,aAHE;AAIVF,QAAAA,SAAS,EAAEH,IAAI,CAAC,CAAD,CAJL;AAKVI,QAAAA,QAAQ,EAAEJ,IAAI,CAAC,CAAD,CALJ;AAMVa,QAAAA,YAAY,EAAEd,QAAQ,CAACc,YANb;AAOVC,QAAAA,QAAQ,EAAEf,QAAQ,CAACe,QAPT;AAQVC,QAAAA,UAAU,EAAEhB,QAAQ,CAACgB,UARX;AASVC,QAAAA,gBAAgB,EAAEjB,QAAQ,CAACiB,gBATjB;AAUVC,QAAAA,cAAc,EAAElB,QAAQ,CAACkB,cAVf;AAWVC,QAAAA,gBAAgB,EAAEnB,QAAQ,CAACmB,gBAXjB;AAYVC,QAAAA,UAAU,EAAEpB,QAAQ,CAACoB,UAZX;AAaVC,QAAAA,SAAS,EAAErB,QAAQ,CAACqB,SAbV;AAcVC,QAAAA,cAAc,EAAEtB,QAAQ,CAACsB,cAdf;AAeVC,QAAAA,OAAO,EAAEvB,QAAQ,CAACuB,OAfR;AAgBVC,QAAAA,UAAU,EAAExB,QAAQ,CAACwB,UAhBX;AAiBVC,QAAAA,UAAU,EAAEzB,QAAQ,CAACyB,UAjBX;AAkBVC,QAAAA,OAAO,EAAE1B,QAAQ,CAAC0B;AAlBR,OAAd;AAoBH,KAtCD;AAuCH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,UAAU,EAAC,GAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCADJ,CADJ;AATJ;AAiBH;;AArEoC;;AAwEzC,eAAe3C,UAAf","sourcesContent":["import React from 'react';\nimport '../../../css/PdfLogbook.css';\nimport divelogLogo from '../../../img/logo.png';\nimport { Document, Page, Text } from 'react-pdf';\n\nclass PdfLogbook extends React.Component {\n    constructor(props) {\n        super(props);\n\n    }\n\n    componentDidMount() {\n        let logbookId = this.props.id;\n        let jwtToken = localStorage.getItem(\"JwtToken\");\n\n        fetch(`/get/logbook/${jwtToken}/${logbookId}`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'content-type': 'application/json'\n            }\n        })\n        .then(response => response.json())\n        .then(jsonData => {\n            let time = this.ConvertTime.convertTime(jsonData.entryTime, jsonData.exitTime, true);\n\n            const markerElement = {\n                id: jsonData.marker.id,\n                name: jsonData.marker.name,\n                latitude: jsonData.marker.latitude,\n                longitude: jsonData.marker.longitude\n            }\n\n            this.setState({\n                partnerName: jsonData.partnerName,\n                partnerSurname: jsonData.partnerSurname,\n                marker: markerElement,\n                entryTime: time[0],\n                exitTime: time[1],\n                averageDepth: jsonData.averageDepth,\n                maxDepth: jsonData.maxDepth,\n                visibility: jsonData.visibility,\n                waterTemperature: jsonData.waterTemperature,\n                airTemperature: jsonData.airTemperature,\n                cylinderCapacity: jsonData.cylinderCapacity,\n                divingSuit: jsonData.divingSuit,\n                waterType: jsonData.waterType,\n                waterEntryType: jsonData.waterEntryType,\n                ballast: jsonData.ballast,\n                glovesType: jsonData.glovesType,\n                divingType: jsonData.divingType,\n                comment: jsonData.comment\n            });\n        }); \n    }\n\n    render() {\n        return (\n            // <div className=\"pdf-logbook-container\">\n            //     <div className=\"pdf-logbook-header\">\n            //         <div className=\"pdf-logbook-logo-center\">\n            //             <img src={divelogLogo} alt=\"Divelog logo\" />\n            //             dasjkdajkadsdasjk\n            //         </div>\n            //     </div>\n            // </div>\n            <Document>\n                <Page pageNumber=\"1\">\n                    <Text>\n                        Hubert Strumi≈Ñski\n                    </Text>\n                </Page>\n            </Document>\n        );\n    }\n}\n\nexport default PdfLogbook;"]},"metadata":{},"sourceType":"module"}