{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/twitter/twitter-home/TwitterHomeAdd.js\";\nimport React from 'react';\nimport '../../../css/twitter-home/TwitterHomeAdd.css';\nimport * as filestack from 'filestack-js';\nimport ReactFilestack from 'filestack-react';\nimport $ from 'jquery';\n\nclass TwitterHomeAdd extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      files: [],\n      failedFiles: [],\n      isSuccessUploaded: false\n    };\n    this.removeRenderedFile = this.removeRenderedFile.bind(this);\n    this.renderFiles = this.renderFiles.bind(this);\n  }\n\n  componentDidMount() {}\n\n  removeRenderedFile(handle) {\n    console.log(handle);\n  }\n\n  renderFiles(isSuccessUploaded) {\n    if (isSuccessUploaded) {\n      $(\"tweet-add-uploaded-files\").html(\"\");\n      return this.state.files.map((file, index) => {\n        if (file.mimetype.contains(\"image\")) {\n          return React.createElement(React.Fragment, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, React.createElement(\"img\", {\n            className: \"tweet-add-rendered-file-image\",\n            src: file.url,\n            alt: file.filename,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35\n            },\n            __self: this\n          }), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }), React.createElement(\"button\", {\n            className: \"upload-file-delete\",\n            onClick: () => this.removeRenderedFile(file.handle),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, \"Delete - \", file.filename));\n        }\n      });\n    }\n\n    return null;\n  }\n\n  filestackCallback(response) {\n    console.log(response);\n    response.filesUploaded.map((fileUploaded, index) => {\n      this.setState({\n        files: this.state.files.concat(fileUploaded),\n        isSuccessUploaded: true\n      });\n    });\n    response.filesFailed.map((fileFailed, index) => {\n      this.setState({\n        failedFiles: this.state.failedFiles.concat(fileFailed)\n      });\n    });\n  }\n\n  onPick() {\n    const clientOptions = {\n      security: {\n        policy: \"\",\n        signature: \"\"\n      } // const client = filestack.init(\"Abn3RoxlVQeWNtMpk2Gflz\");\n      // client.picker({}).open();\n\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"add-tweet-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"avatar-tweet-textarea-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tweet-add-avatar-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.pictureUrl,\n      alt: \"Avatar\",\n      className: \"tweet-add-avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"tweet-add-textarea-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      placeholder: \"What's happening?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"tweet-add-uploaded-files\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.renderFiles(this.state.isSuccessUploaded)), React.createElement(\"div\", {\n      className: \"add-tweet-buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(ReactFilestack, {\n      apikey: \"Abn3RoxlVQeWNtMpk2Gflz\",\n      action: \"upload\",\n      actionOptions: {\n        maxSize: 5 * 1024 * 1024,\n        // uploadInBackground: false,\n        maxFiles: 4\n      },\n      customRender: ({\n        onPick\n      }) => React.createElement(\"i\", {\n        className: \"far fa-images\",\n        style: {\n          color: '#00A4EF',\n          fontSize: \"1.5vw\",\n          width: \"15%\",\n          marginTop: \"3%\"\n        },\n        onClick: onPick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }),\n      onSuccess: this.filestackCallback,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"add-tweet-button-home-timeline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Tweet\")));\n  }\n\n}\n\nexport default TwitterHomeAdd;","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/twitter/twitter-home/TwitterHomeAdd.js"],"names":["React","filestack","ReactFilestack","$","TwitterHomeAdd","Component","constructor","state","files","failedFiles","isSuccessUploaded","removeRenderedFile","bind","renderFiles","componentDidMount","handle","console","log","html","map","file","index","mimetype","contains","url","filename","filestackCallback","response","filesUploaded","fileUploaded","setState","concat","filesFailed","fileFailed","onPick","clientOptions","security","policy","signature","render","props","pictureUrl","maxSize","maxFiles","color","fontSize","width","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../../css/twitter-home/TwitterHomeAdd.css';\nimport * as filestack from 'filestack-js';\nimport ReactFilestack from 'filestack-react';\nimport $ from 'jquery';\n\nclass TwitterHomeAdd extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            files: [],\n            failedFiles: [],\n            isSuccessUploaded: false\n        }\n        this.removeRenderedFile = this.removeRenderedFile.bind(this);\n        this.renderFiles = this.renderFiles.bind(this);\n    }\n\n    componentDidMount() {\n\n    }\n\n    removeRenderedFile(handle) {\n        console.log(handle);\n    }\n\n    renderFiles(isSuccessUploaded) {\n        if(isSuccessUploaded) {\n            $(\"tweet-add-uploaded-files\").html(\"\");\n            return this.state.files.map((file, index) => {\n                if(file.mimetype.contains(\"image\")) {\n                    return (\n                        <React.Fragment>\n                            <img\n                                className=\"tweet-add-rendered-file-image\"\n                                src={file.url}\n                                alt={file.filename}\n                            />\n                            <br />\n                            <button className=\"upload-file-delete\" onClick={() => this.removeRenderedFile(file.handle)}>Delete - {file.filename}</button>\n                        </React.Fragment>\n                    );\n                }\n            });\n        }\n        return null;\n    }\n\n    filestackCallback(response) {\n        console.log(response);\n\n        response.filesUploaded.map((fileUploaded, index) => {\n            this.setState({ \n                files: this.state.files.concat(fileUploaded),\n                isSuccessUploaded: true\n            });\n        });\n\n        response.filesFailed.map((fileFailed, index) => {\n            this.setState({ failedFiles: this.state.failedFiles.concat(fileFailed) });\n        });\n    }\n\n    onPick() {\n        const clientOptions = {\n            security: {\n                policy: \"\",\n                signature: \"\"\n            }\n        }\n        // const client = filestack.init(\"Abn3RoxlVQeWNtMpk2Gflz\");\n        // client.picker({}).open();\n    }\n\n    render() {\n        return (\n            <div className=\"add-tweet-container\">\n                <div className=\"avatar-tweet-textarea-container\">\n                    <div className=\"tweet-add-avatar-container\">\n                        <img \n                            src={this.props.pictureUrl} \n                            alt=\"Avatar\" \n                            className=\"tweet-add-avatar\"\n                        />\n                    </div>\n                    <div className=\"tweet-add-textarea-container\">\n                        <textarea\n                            placeholder=\"What's happening?\"\n                        >  \n                        </textarea>\n                        \n                    \n                    </div>\n                </div>\n                <div className=\"tweet-add-uploaded-files\">\n                    { this.renderFiles(this.state.isSuccessUploaded) }\n                </div>\n                <div className=\"add-tweet-buttons\">\n                    <ReactFilestack\n                        apikey=\"Abn3RoxlVQeWNtMpk2Gflz\"\n                        action=\"upload\"\n                        actionOptions={{\n                            maxSize: 5 * 1024 * 1024,\n                            // uploadInBackground: false,\n                            maxFiles: 4\n                        }}\n                        customRender={({ onPick }) => (\n                            <i \n                                className=\"far fa-images\" \n                                style={{ color: '#00A4EF', fontSize: \"1.5vw\", width: \"15%\", marginTop: \"3%\"}}\n                                onClick={onPick}\n                            ></i>\n                        )}\n                        onSuccess={this.filestackCallback}\n                    />\n                    <button \n                        className=\"add-tweet-button-home-timeline\"\n                    >\n                        Tweet\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TwitterHomeAdd;"]},"metadata":{},"sourceType":"module"}