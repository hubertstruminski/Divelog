{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/Twitter.js\";\nimport React from 'react';\nimport '../css/TimelineLikes.css';\nimport withAuth from '../util/withAuth';\nimport AuthService from '../util/AuthService';\nimport TwitterCategoriesCard from './twitter/TwitterCategoriesCard';\nimport SearchTwitterPeople from './twitter/SearchTwitterPeople';\nimport AvailableTrends from './twitter/AvailableTrends';\nimport ReactDOM from 'react-dom';\n\nclass Twitter extends React.Component {\n  constructor(props) {\n    super(props);\n    this.isMountedTwitter = false;\n    this.state = {\n      accessToken: '',\n      email: '',\n      name: '',\n      userID: '',\n      pictureUrl: '',\n      providerId: '',\n      screenName: '',\n      tokenSecret: ''\n    };\n    this.Auth = new AuthService();\n  }\n\n  componentDidMount() {\n    this.isMountedTwitter = true;\n    window.twttr.ready(function (twttr) {\n      this.isMountedTwitter && twttr.widgets.load(document.getElementsByClassName(\"feed-container\")[0]);\n    });\n    let jwtToken = null;\n\n    if (this.Auth.getTwitterToken() !== null) {\n      jwtToken = this.Auth.getTwitterToken();\n    }\n\n    if (this.Auth.getToken() !== null) {\n      jwtToken = this.Auth.getToken();\n    }\n\n    fetch(\"/getuserdata/\".concat(jwtToken), {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(response => response.json()).then(jsonData => {\n      if (this.isMountedTwitter) {\n        this.setState({\n          accessToken: jsonData.accessToken,\n          email: jsonData.email,\n          name: jsonData.name,\n          userID: jsonData.userID,\n          pictureUrl: jsonData.pictureUrl,\n          providerId: jsonData.providerId,\n          screenName: jsonData.screenName,\n          tokenSecret: jsonData.tokenSecret\n        }, () => {\n          window.twttr.widgets.createTimeline({\n            sourceType: 'likes',\n            screenName: this.state.screenName\n          }, document.getElementsByClassName(\"tweets-likes-container\")[0], {\n            width: '100%',\n            height: '100%',\n            related: 'twitterdev,twitterapi'\n          });\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.isMountedTwitter = false;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"twitter-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-grid-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-grid-item-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-left-categories-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-profil-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.state.name), React.createElement(TwitterCategoriesCard, {\n      pictureUrl: this.state.pictureUrl,\n      screenName: this.state.screenName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"feed-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-user-profil\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-header-profile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"tweets-profile-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      class: \"twitter-timeline\",\n      href: \"https://twitter.com/\".concat(this.state.screenName, \"?ref_src=twsrc%5Etfw\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Tweets by \", this.state.screenName))), React.createElement(\"div\", {\n      className: \"tweets-likes-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"twitter-grid-item-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-rl-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-groups-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(SearchTwitterPeople, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(AvailableTrends, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"twitter-rr-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"twitter-friends-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default withAuth(Twitter);","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/Twitter.js"],"names":["React","withAuth","AuthService","TwitterCategoriesCard","SearchTwitterPeople","AvailableTrends","ReactDOM","Twitter","Component","constructor","props","isMountedTwitter","state","accessToken","email","name","userID","pictureUrl","providerId","screenName","tokenSecret","Auth","componentDidMount","window","twttr","ready","widgets","load","document","getElementsByClassName","jwtToken","getTwitterToken","getToken","fetch","method","headers","then","response","json","jsonData","setState","createTimeline","sourceType","width","height","related","componentWillUnmount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../css/TimelineLikes.css';\nimport withAuth from '../util/withAuth';\nimport AuthService from '../util/AuthService';\nimport TwitterCategoriesCard from './twitter/TwitterCategoriesCard';\nimport SearchTwitterPeople from './twitter/SearchTwitterPeople';\nimport AvailableTrends from './twitter/AvailableTrends';\nimport ReactDOM from 'react-dom';\n\n\nclass Twitter extends React.Component {\n    isMountedTwitter = false;\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            accessToken: '',\n            email: '',\n            name: '',\n            userID: '',\n            pictureUrl: '',\n            providerId: '',\n            screenName: '',\n            tokenSecret: ''\n        }\n        this.Auth = new AuthService();\n    }\n\n    componentDidMount() {\n        this.isMountedTwitter = true;\n        window.twttr.ready(function(twttr) {\n            this.isMountedTwitter && twttr.widgets.load(document.getElementsByClassName(\"feed-container\")[0]);\n        });\n        \n\n        let jwtToken = null;\n\n        if(this.Auth.getTwitterToken() !== null) {\n            jwtToken = this.Auth.getTwitterToken();\n        }\n        if(this.Auth.getToken() !== null) {\n            jwtToken = this.Auth.getToken();\n        }\n\n        fetch(`/getuserdata/${jwtToken}`, {\n            method: 'GET',\n            headers: {\n              'content-type': 'application/json'\n            }\n        })\n        .then(response => response.json())\n        .then(jsonData => {\n            if(this.isMountedTwitter) {\n                this.setState({\n                    accessToken: jsonData.accessToken,\n                    email: jsonData.email,\n                    name: jsonData.name,\n                    userID: jsonData.userID,\n                    pictureUrl: jsonData.pictureUrl,\n                    providerId: jsonData.providerId,\n                    screenName: jsonData.screenName,\n                    tokenSecret: jsonData.tokenSecret\n                }, () => {\n                    window.twttr.widgets.createTimeline(\n                    {\n                        sourceType: 'likes',\n                        screenName: this.state.screenName\n                    },\n                    document.getElementsByClassName(\"tweets-likes-container\")[0],\n                    {\n                        width: '100%',\n                        height: '100%',\n                        related: 'twitterdev,twitterapi'\n                    });\n                });\n            }\n        }); \n    }\n\n    componentWillUnmount() {\n        this.isMountedTwitter = false;\n    }\n\n    render() {\n        return (\n            <div className=\"twitter-container\">\n                <div className=\"twitter-grid-container\">\n                    <div className=\"twitter-grid-item-1\">\n                        <div className=\"twitter-left-categories-container\">\n                            <div className=\"twitter-profil-container\">\n                                { this.state.name }\n                            </div>\n                            <TwitterCategoriesCard\n                                pictureUrl={this.state.pictureUrl}\n                                screenName={this.state.screenName}\n                            />    \n                        </div>\n                    </div>\n                    <div className=\"feed-container\">\n                        <div className=\"twitter-user-profil\">\n                            <div className=\"twitter-header-profile\">\n\n                            </div>\n                            <div className=\"tweets-profile-container\">\n                                <a class=\"twitter-timeline\" href={`https://twitter.com/${this.state.screenName}?ref_src=twsrc%5Etfw`}>Tweets by {this.state.screenName}</a>\n                            </div>\n                        </div>\n                        <div className=\"tweets-likes-container\">\n\n                        </div>\n                    </div>\n                    <div className=\"twitter-grid-item-3\">\n                        <div className=\"twitter-rl-container\">\n                            <div className=\"twitter-groups-container\">\n                                <SearchTwitterPeople />\n                                <AvailableTrends />\n                            </div>\n                        </div>\n                        <div className=\"twitter-rr-container\">\n                            <div className=\"twitter-friends-container\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withAuth(Twitter);"]},"metadata":{},"sourceType":"module"}