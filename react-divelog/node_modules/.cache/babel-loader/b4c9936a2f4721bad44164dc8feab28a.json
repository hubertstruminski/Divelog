{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/logbook/Logbook.js\";\nimport React from 'react';\nimport '../../css/Logbook.css';\nimport { withRouter } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Trans } from 'react-i18next';\nimport { withTranslation } from 'react-i18next';\nimport DeleteTableButton from './DeleteTableButton';\nimport UpdateLogbookButton from './UpdateLogbookButton';\nimport PDFTableButton from './PDFTableButton';\n\nclass Logbook extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      logbooks: [],\n      isEmptyLogbook: true,\n      isDeletedRow: false,\n      deletedLogbookId: 0\n    };\n    this.logbooks = [];\n    this.bodyTableRef = React.createRef();\n    this.showTableRows = this.showTableRows.bind(this);\n    this.setIsDeletedRow = this.setIsDeletedRow.bind(this);\n    this.setDeletedLogbookId = this.setDeletedLogbookId.bind(this);\n  }\n\n  componentDidMount() {\n    let jwtToken = localStorage.getItem(\"JwtToken\");\n    fetch(\"/get/logbook/\".concat(jwtToken), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'content-type': 'application/json'\n      }\n    }).then(response => response.json()).then(jsonData => {\n      jsonData.map((jsonElement, index) => {\n        let entryTime = jsonElement.entryTime;\n        let entryHoursWithMinutes = entryTime.substr(11, 5);\n        let entryHours = entryHoursWithMinutes.substr(0, 2);\n        entryHours = Number.parseInt(entryHours);\n        entryHours += 2;\n\n        if (entryHours < 10) {\n          entryHours = \"0\" + entryHours;\n        }\n\n        entryTime = jsonElement.entryTime.substr(0, 10) + \" \" + entryHours + \":\" + jsonElement.entryTime.substr(14, 2);\n        let exitTime = jsonElement.exitTime;\n        let exitHoursWithMinutes = exitTime.substr(11, 5);\n        let exitHours = exitHoursWithMinutes.substr(0, 2);\n        exitHours = Number.parseInt(exitHours);\n        exitHours += 2;\n\n        if (exitHours < 10) {\n          exitHours = \"0\" + exitHours;\n        }\n\n        exitTime = jsonElement.exitTime.substr(0, 10) + \" \" + exitHours + \":\" + jsonElement.exitTime.substr(14, 2);\n        const element = {\n          id: jsonElement.id,\n          partnerName: jsonElement.partnerName,\n          partnerSurname: jsonElement.partnerSurname,\n          entryTime: entryTime,\n          exitTime: exitTime,\n          marker: jsonElement.marker.name,\n          averageDepth: jsonElement.averageDepth,\n          maxDepth: jsonElement.maxDepth,\n          airTemperature: jsonElement.airTemperature,\n          waterTemperature: jsonElement.waterTemperature,\n          divingType: jsonElement.divingType\n        };\n        this.logbooks.push(element);\n      });\n\n      if (this.logbooks.length === 0) {\n        this.setState({\n          isEmptyLogbook: true\n        });\n      } else {\n        if (this.state.isEmptyLogbook === true) {\n          this.setState({\n            isEmptyLogbook: false\n          });\n        }\n      }\n    });\n  }\n\n  componentDidUpdate() {\n    for (let i = 0; i < this.logbooks.length; i++) {\n      if (this.logbooks[i].id === this.state.deletedLogbookId) {\n        this.logbooks.splice(i, 1);\n      }\n    }\n\n    this.bodyTableRef.current = \"\";\n    this.showTable();\n  }\n\n  componentWillReceiveProps() {\n    this.bodyTableRef.current = \"\";\n    this.showTable();\n  }\n\n  showTableRows() {\n    let rowNumber = 0;\n    return this.logbooks.map((logbook, index) => {\n      return React.createElement(\"tr\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        scope: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, ++rowNumber), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, logbook.partnerName), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, logbook.partnerSurname), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, logbook.entryTime), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, logbook.exitTime), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, logbook.marker), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, logbook.averageDepth, \"m\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, logbook.maxDepth, \"m\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, logbook.airTemperature, React.createElement(\"sup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"o\"), \"C\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, logbook.waterTemperature, React.createElement(\"sup\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"o\"), \"C\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, logbook.divingType), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(PDFTableButton, {\n        id: logbook.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(UpdateLogbookButton, {\n        id: logbook.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(DeleteTableButton, {\n        id: logbook.id,\n        setIsDeletedRow: this.setIsDeletedRow,\n        setDeletedLogbookId: this.setDeletedLogbookId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })));\n    });\n  }\n\n  showTable() {\n    return React.createElement(\"div\", {\n      className: \"table-center table-margin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"table-responsive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table table-hover table-striped\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      className: \"table-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"#\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, this.props.t(\"logbook.table.partnerName\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, this.props.t(\"logbook.table.partnerSurname\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, this.props.t(\"logbook.table.entryTime\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, this.props.t(\"logbook.table.exitTime\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, this.props.t(\"logbook.table.location\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, this.props.t(\"logbook.table.avgDepth\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, this.props.t(\"logbook.table.maxDepth\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, this.props.t(\"logbook.table.airTemperature\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, this.props.t(\"logbook.table.waterTemperature\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, this.props.t(\"logbook.table.divingType\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"PDF\"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, this.props.t(\"logbook.table.UPDATE\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, this.props.t(\"logbook.table.DELETE\")))), React.createElement(\"tbody\", {\n      ref: this.bodyTableRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, this.showTableRows()))));\n  }\n\n  setIsDeletedRow(value) {\n    this.setState({\n      isDeletedRow: value\n    });\n  }\n\n  setDeletedLogbookId(value) {\n    this.setState({\n      deletedLogbookId: value\n    });\n  }\n\n  render() {\n    let isEmptyLogbook = this.state.isEmptyLogbook;\n    let isDeletedRow = this.state.isDeletedRow;\n    return React.createElement(\"div\", {\n      className: \"logbook-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/add/dive\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"btn btn-primary btn-padding\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, this.props.t(\"logbook.addButton\"))), !isEmptyLogbook && this.showTable(), React.createElement(NoLogbookData, {\n      isEmptyLogbook: this.state.isEmptyLogbook,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction NoLogbookData(props) {\n  if (props.isEmptyLogbook) {\n    return React.createElement(\"div\", {\n      className: \"alert alert-danger alert-margin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"No data in your logbook.\");\n  }\n\n  return null;\n}\n\nexport default withTranslation(\"common\")(withRouter(Logbook));","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/logbook/Logbook.js"],"names":["React","withRouter","Link","Trans","withTranslation","DeleteTableButton","UpdateLogbookButton","PDFTableButton","Logbook","Component","constructor","state","logbooks","isEmptyLogbook","isDeletedRow","deletedLogbookId","bodyTableRef","createRef","showTableRows","bind","setIsDeletedRow","setDeletedLogbookId","componentDidMount","jwtToken","localStorage","getItem","fetch","method","headers","then","response","json","jsonData","map","jsonElement","index","entryTime","entryHoursWithMinutes","substr","entryHours","Number","parseInt","exitTime","exitHoursWithMinutes","exitHours","element","id","partnerName","partnerSurname","marker","name","averageDepth","maxDepth","airTemperature","waterTemperature","divingType","push","length","setState","componentDidUpdate","i","splice","current","showTable","componentWillReceiveProps","rowNumber","logbook","props","t","value","render","NoLogbookData"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../css/Logbook.css';\nimport { withRouter } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Trans } from 'react-i18next';\nimport { withTranslation } from 'react-i18next';\nimport DeleteTableButton from './DeleteTableButton';\nimport UpdateLogbookButton from './UpdateLogbookButton';\nimport PDFTableButton from './PDFTableButton';\n\nclass Logbook extends React.Component {\n    constructor() {\n        super();\n        \n        this.state = {\n            logbooks: [],\n            isEmptyLogbook: true,\n            isDeletedRow: false,\n            deletedLogbookId: 0\n        }\n        this.logbooks = [];\n        this.bodyTableRef = React.createRef();\n        \n        this.showTableRows = this.showTableRows.bind(this);\n        this.setIsDeletedRow = this.setIsDeletedRow.bind(this);\n        this.setDeletedLogbookId = this.setDeletedLogbookId.bind(this);\n    }\n\n    componentDidMount() {\n        let jwtToken = localStorage.getItem(\"JwtToken\");\n\n        fetch(`/get/logbook/${jwtToken}`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'content-type': 'application/json'\n            }\n        }).then(response => response.json())\n        .then(jsonData => {\n            jsonData.map((jsonElement, index) => {\n                let entryTime = jsonElement.entryTime;\n\n                let entryHoursWithMinutes = entryTime.substr(11, 5);\n                let entryHours = entryHoursWithMinutes.substr(0, 2);\n                entryHours = Number.parseInt(entryHours);\n                entryHours += 2;\n                if(entryHours < 10) {\n                    entryHours = \"0\" + entryHours;\n                }\n                entryTime = jsonElement.entryTime.substr(0, 10) + \" \" + entryHours + \":\" + jsonElement.entryTime.substr(14, 2);\n\n    \n                let exitTime = jsonElement.exitTime;\n\n                let exitHoursWithMinutes = exitTime.substr(11, 5);\n                let exitHours = exitHoursWithMinutes.substr(0, 2);\n                exitHours = Number.parseInt(exitHours);\n                exitHours += 2;\n                if(exitHours < 10) {\n                    exitHours = \"0\" + exitHours;\n                }\n                exitTime = jsonElement.exitTime.substr(0, 10) + \" \" + exitHours + \":\" + jsonElement.exitTime.substr(14, 2);\n\n                const element = {\n                    id: jsonElement.id,\n                    partnerName: jsonElement.partnerName,\n                    partnerSurname: jsonElement.partnerSurname,\n                    entryTime: entryTime,\n                    exitTime: exitTime,\n                    marker: jsonElement.marker.name,\n                    averageDepth: jsonElement.averageDepth,\n                    maxDepth: jsonElement.maxDepth,\n                    airTemperature: jsonElement.airTemperature,\n                    waterTemperature: jsonElement.waterTemperature,\n                    divingType: jsonElement.divingType\n                }\n                this.logbooks.push(element);\n            });\n            if(this.logbooks.length === 0) {\n                this.setState({ isEmptyLogbook: true });\n            } else {\n                if(this.state.isEmptyLogbook === true) {\n                    this.setState({ isEmptyLogbook: false });\n                }\n            }\n        });\n    }\n\n    componentDidUpdate() {\n        for(let i=0; i<this.logbooks.length; i++) {\n            if(this.logbooks[i].id === this.state.deletedLogbookId) {\n                this.logbooks.splice(i, 1);\n            }\n        }\n        this.bodyTableRef.current = \"\";\n        this.showTable();\n    }\n\n    componentWillReceiveProps() {\n        this.bodyTableRef.current = \"\";\n        this.showTable();\n    }\n\n    showTableRows() {\n        let rowNumber = 0;\n        return this.logbooks.map((logbook, index) => {\n            return (\n                <tr key={index}>\n                    <th scope=\"row\">{++rowNumber}</th>\n                    <td>{logbook.partnerName}</td>\n                    <td>{logbook.partnerSurname}</td>\n                    <td>{logbook.entryTime}</td>\n                    <td>{logbook.exitTime}</td>\n                    <td>{logbook.marker}</td>\n                    <td>{logbook.averageDepth}m</td>\n                    <td>{logbook.maxDepth}m</td>\n                    <td>{logbook.airTemperature}<sup>o</sup>C</td>\n                    <td>{logbook.waterTemperature}<sup>o</sup>C</td>\n                    <td>{logbook.divingType}</td>\n                    <td>\n                        <PDFTableButton id={logbook.id} />\n                    </td>\n                    <td>\n                        <UpdateLogbookButton id={logbook.id} />\n                    </td>\n                    <td>\n                        <DeleteTableButton \n                            id={logbook.id} \n                            setIsDeletedRow={this.setIsDeletedRow}\n                            setDeletedLogbookId={this.setDeletedLogbookId}\n                        />\n                    </td>\n                </tr>\n            );\n        });\n    }\n\n    showTable() {\n        return (\n            <div className=\"table-center table-margin\">\n                <div className=\"table-responsive\">\n                    <table className=\"table table-hover table-striped\">\n                        <thead>\n                            <tr className=\"table-primary\">\n                                <th scope=\"col\">#</th>\n                                <td>\n                                    {this.props.t(\"logbook.table.partnerName\")}\n                                </td>\n                                <td>\n                                    {this.props.t(\"logbook.table.partnerSurname\")}\n                                </td>\n                                <td>\n                                    {this.props.t(\"logbook.table.entryTime\")}\n                                </td>\n                                <td>\n                                    {this.props.t(\"logbook.table.exitTime\")}\n                                </td>\n                                <td>\n                                    {this.props.t(\"logbook.table.location\")}\n                                </td>\n                                <td>\n                                    {this.props.t(\"logbook.table.avgDepth\")}\n                                </td>\n                                <td>\n                                    {this.props.t(\"logbook.table.maxDepth\")}\n                                </td>\n                                <td>\n                                    {this.props.t(\"logbook.table.airTemperature\")}\n                                </td>\n                                <td>\n                                    {this.props.t(\"logbook.table.waterTemperature\")}\n                                </td>\n                                <td>\n                                    {this.props.t(\"logbook.table.divingType\")}\n                                </td>\n                                <td>PDF</td>\n                                <td>\n                                    {this.props.t(\"logbook.table.UPDATE\")}\n                                </td>\n                                <td>\n                                    {this.props.t(\"logbook.table.DELETE\")}\n                                </td>\n                            </tr>\n                        </thead>\n                        <tbody ref={this.bodyTableRef}>\n                            { this.showTableRows() }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n\n    setIsDeletedRow(value) {\n        this.setState({ isDeletedRow: value });\n    }\n\n    setDeletedLogbookId(value) {\n        this.setState({ deletedLogbookId: value });\n    }\n\n    render() {\n        let isEmptyLogbook = this.state.isEmptyLogbook;\n        let isDeletedRow = this.state.isDeletedRow;\n\n        return (\n            <div className=\"logbook-container\">\n                <Link \n                    to=\"/add/dive\"\n                >\n                    <div className=\"btn btn-primary btn-padding\">\n                        {this.props.t(\"logbook.addButton\")}\n                    </div>\n                </Link>\n                { !isEmptyLogbook && this.showTable() }   \n                <NoLogbookData isEmptyLogbook={this.state.isEmptyLogbook} />\n            </div>\n        );\n    }\n}\n\nfunction NoLogbookData(props) {\n    if(props.isEmptyLogbook) {\n        return (\n            <div className=\"alert alert-danger alert-margin\">\n                No data in your logbook.\n            </div>\n        );\n    }\n    return null;\n}\n\nexport default withTranslation(\"common\")(withRouter(Logbook));"]},"metadata":{},"sourceType":"module"}