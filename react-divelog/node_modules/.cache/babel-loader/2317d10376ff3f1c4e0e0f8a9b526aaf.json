{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/forum/TopicWithPosts.js\";\nimport React from 'react';\nimport '../../css/TopicWithPosts.css';\nimport ConvertTime from '../../util/ConvertTime';\nimport AddPosts from '../forum/AddPosts';\nimport ReactPlayer from 'react-player';\n\nclass TopicWithPosts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mainPost: {},\n      isRetrieved: false\n    };\n    this.files = [];\n    this.ConvertTime = new ConvertTime();\n    this.addImages = this.addImages.bind(this);\n    this.addVideos = this.addVideos.bind(this);\n  }\n\n  componentDidMount() {\n    let id = this.props.match.params.id;\n    fetch(\"/get/topic/posts/\".concat(id), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json, text/plain, */*',\n        'content-type': 'application/json'\n      }\n    }).then(response => response.json()).then(jsonData => {\n      console.log(jsonData);\n      this.files = [];\n      jsonData.files.map((file, index) => {\n        const element = {\n          id: file.id,\n          objectId: file.objectId,\n          url: file.url,\n          size: file.size,\n          name: file.name,\n          type: file.type\n        };\n        this.files.push(element);\n      });\n      const element = {\n        title: jsonData.title,\n        message: jsonData.message,\n        createdAt: this.ConvertTime.convertTime(jsonData.createdAt, null, false)[0],\n        owner: jsonData.user.name,\n        pictureUrl: jsonData.user.pictureUrl,\n        files: this.files\n      };\n      this.setState({\n        mainPost: element,\n        isRetrieved: true\n      });\n      console.log(this.state.mainPost);\n    });\n  }\n\n  addImages() {\n    return this.state.mainPost.files.map((file, index) => {\n      if (file.type.includes('image')) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }), React.createElement(\"img\", {\n          src: file.url,\n          alt: file.name,\n          className: \"attachment-images\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }), file.name, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }));\n      }\n    });\n  }\n\n  addVideos() {\n    return this.state.mainPost.files.map((file, index) => {\n      if (file.type.includes('video')) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }), React.createElement(ReactPlayer, {\n          url: file.url,\n          playing: true,\n          controls: \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }), file.name, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }));\n      }\n    });\n  }\n\n  render() {\n    let isRetrieved = this.state.isRetrieved;\n    return React.createElement(\"div\", {\n      className: \"topic-posts-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main-post-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main-post-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main-post-grid-one\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main-post-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.state.mainPost.createdAt), React.createElement(\"div\", {\n      className: \"main-post-avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.mainPost.pictureUrl,\n      alt: \"Avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"main-post-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, this.state.mainPost.owner)), React.createElement(\"div\", {\n      className: \"main-post-grid-two\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main-post-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, this.state.mainPost.title), React.createElement(\"div\", {\n      className: \"main-post-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, this.state.mainPost.message), React.createElement(\"div\", {\n      className: \"main-post-attachments\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, isRetrieved && this.addImages(), isRetrieved && this.addVideos())))), React.createElement(\"hr\", {\n      className: \"line-break-posts\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"main-post-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(AddPosts, {\n      topicId: this.props.match.params.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default TopicWithPosts;","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/forum/TopicWithPosts.js"],"names":["React","ConvertTime","AddPosts","ReactPlayer","TopicWithPosts","Component","constructor","props","state","mainPost","isRetrieved","files","addImages","bind","addVideos","componentDidMount","id","match","params","fetch","method","headers","then","response","json","jsonData","console","log","map","file","index","element","objectId","url","size","name","type","push","title","message","createdAt","convertTime","owner","user","pictureUrl","setState","includes","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../css/TopicWithPosts.css';\nimport ConvertTime from '../../util/ConvertTime';\nimport AddPosts from '../forum/AddPosts';\nimport ReactPlayer from 'react-player';\n\nclass TopicWithPosts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            mainPost: {},\n            isRetrieved: false\n        }\n\n        this.files = []\n        this.ConvertTime = new ConvertTime();\n\n        this.addImages = this.addImages.bind(this);\n        this.addVideos = this.addVideos.bind(this);\n    }\n\n    componentDidMount() {\n        let id = this.props.match.params.id;\n\n        fetch(`/get/topic/posts/${id}`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json, text/plain, */*',\n                'content-type': 'application/json'\n            }\n        }).then(response => response.json())\n        .then(jsonData => {\n            console.log(jsonData);\n            this.files = [];\n\n            jsonData.files.map((file, index) => {\n                const element = {\n                    id: file.id,\n                    objectId: file.objectId,\n                    url: file.url,\n                    size: file.size,\n                    name: file.name,\n                    type: file.type\n                }\n                this.files.push(element);\n            });\n\n            const element = {\n                title: jsonData.title,\n                message: jsonData.message,\n                createdAt: this.ConvertTime.convertTime(jsonData.createdAt, null, false)[0],\n                owner: jsonData.user.name,\n                pictureUrl: jsonData.user.pictureUrl,\n                files: this.files\n            }\n            this.setState({ \n                mainPost: element, \n                isRetrieved: true\n            });\n            console.log(this.state.mainPost);\n        });\n    }\n\n    addImages() {\n        return this.state.mainPost.files.map((file, index) => {\n            if(file.type.includes('image')) {\n                return (\n                    <div>\n                        <br />\n                        <img \n                            src={file.url} \n                            alt={file.name} \n                            className=\"attachment-images\"\n                        />\n                        <br />\n                        { file.name }\n                        <br />\n                    </div>\n                );\n            }\n        });\n    }\n\n    addVideos() {\n        return this.state.mainPost.files.map((file, index) => {\n            if(file.type.includes('video')) {\n                return (\n                    <div>\n                        <br />\n                        <ReactPlayer \n                            url={file.url} \n                            playing\n                            controls=\"true\"\n                        />\n                        <br />\n                        { file.name }\n                        <br />\n                    </div>\n                );\n            }\n        })\n    }\n\n    render() {\n        let isRetrieved = this.state.isRetrieved;\n\n        return (\n            <div className=\"topic-posts-container\">\n                <div className=\"main-post-center\">\n                    <div className=\"main-post-container\">\n                        <div className=\"main-post-grid-one\">\n                            <div className=\"main-post-header\">\n                                { this.state.mainPost.createdAt }\n                            </div>\n                            <div className=\"main-post-avatar\">\n                                <img src={this.state.mainPost.pictureUrl} alt=\"Avatar\" />\n                            </div>\n                            <div className=\"main-post-footer\">\n                                { this.state.mainPost.owner }\n                            </div>\n                        </div>\n                        <div className=\"main-post-grid-two\">\n                            <div className=\"main-post-title\">\n                                { this.state.mainPost.title }\n                            </div>\n                            <div className=\"main-post-message\">\n                                { this.state.mainPost.message }\n                            </div>\n                            <div className=\"main-post-attachments\">\n                                { isRetrieved && this.addImages() }\n                                { isRetrieved && this.addVideos() }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <hr className=\"line-break-posts\"/>\n\n                <div className=\"main-post-center\">\n                    {/* User posts */}\n                </div>\n\n                <div className=\"\">\n                    <AddPosts \n                        topicId={this.props.match.params.id}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TopicWithPosts;"]},"metadata":{},"sourceType":"module"}