{"ast":null,"code":"const request = options => {\n  const headers = new Headers({\n    'Content-Type': 'application/json'\n  });\n\n  if (localStorage.getItem(ACCESS_TOKEN)) {\n    headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN));\n  }\n\n  const defaults = {\n    headers: headers\n  };\n  options = Object.assign({}, defaults, options);\n  return fetch(options.url, options).then(response => response.json().then(json => {\n    if (!response.ok) {\n      return Promise.reject(json);\n    }\n\n    return json;\n  }));\n};\n\nexport function login(loginRequest) {\n  return request({\n    url: \"http://localhost:8080/login/facebook\",\n    method: 'GET',\n    body: JSON.stringify(loginRequest)\n  });\n}","map":{"version":3,"sources":["/home/msi/Pulpit/Divelog/react-divelog/src/util/APIUtil.js"],"names":["request","options","headers","Headers","localStorage","getItem","ACCESS_TOKEN","append","defaults","Object","assign","fetch","url","then","response","json","ok","Promise","reject","login","loginRequest","method","body","JSON","stringify"],"mappings":"AAAA,MAAMA,OAAO,GAAIC,OAAD,IAAa;AACzB,QAAMC,OAAO,GAAG,IAAIC,OAAJ,CAAY;AACxB,oBAAgB;AADQ,GAAZ,CAAhB;;AAIA,MAAGC,YAAY,CAACC,OAAb,CAAqBC,YAArB,CAAH,EAAuC;AACnCJ,IAAAA,OAAO,CAACK,MAAR,CAAe,eAAf,EAAgC,YAAYH,YAAY,CAACC,OAAb,CAAqBC,YAArB,CAA5C;AACH;;AAED,QAAME,QAAQ,GAAG;AAACN,IAAAA,OAAO,EAAEA;AAAV,GAAjB;AACAD,EAAAA,OAAO,GAAGQ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,QAAlB,EAA4BP,OAA5B,CAAV;AAEA,SAAOU,KAAK,CAACV,OAAO,CAACW,GAAT,EAAcX,OAAd,CAAL,CACNY,IADM,CACDC,QAAQ,IACVA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAqBE,IAAI,IAAI;AACzB,QAAG,CAACD,QAAQ,CAACE,EAAb,EAAiB;AACb,aAAOC,OAAO,CAACC,MAAR,CAAeH,IAAf,CAAP;AACH;;AACD,WAAOA,IAAP;AACH,GALD,CAFG,CAAP;AASH,CArBD;;AAuBA,OAAO,SAASI,KAAT,CAAeC,YAAf,EAA6B;AAChC,SAAOpB,OAAO,CAAC;AACXY,IAAAA,GAAG,EAAE,sCADM;AAEXS,IAAAA,MAAM,EAAE,KAFG;AAGXC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,YAAf;AAHK,GAAD,CAAd;AAKH","sourcesContent":["const request = (options) => {\n    const headers = new Headers({\n        'Content-Type': 'application/json',\n    })\n    \n    if(localStorage.getItem(ACCESS_TOKEN)) {\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem(ACCESS_TOKEN))\n    }\n\n    const defaults = {headers: headers};\n    options = Object.assign({}, defaults, options);\n\n    return fetch(options.url, options)\n    .then(response => \n        response.json().then(json => {\n            if(!response.ok) {\n                return Promise.reject(json);\n            }\n            return json;\n        })\n    );\n};\n\nexport function login(loginRequest) {\n    return request({\n        url: \"http://localhost:8080/login/facebook\",\n        method: 'GET',\n        body: JSON.stringify(loginRequest)\n    });\n}"]},"metadata":{},"sourceType":"module"}