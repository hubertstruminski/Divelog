{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/twitter/twitter-home/TwitterHomeAdd.js\";\nimport React from 'react';\nimport '../../../css/twitter-home/TwitterHomeAdd.css';\nimport * as filestack from 'filestack-js';\nimport ReactFilestack from 'filestack-react';\nimport $ from 'jquery';\nimport swal from 'sweetalert';\n\nclass TwitterHomeAdd extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      files: [],\n      failedFiles: [],\n      isSuccessUploaded: false,\n      isFailedUploaded: false,\n      message: ''\n    };\n    this.onChange = this.onChange.bind(this);\n    this.removeRenderedFile = this.removeRenderedFile.bind(this);\n    this.renderFiles = this.renderFiles.bind(this);\n    this.filestackCallback = this.filestackCallback.bind(this);\n    this.onErrorFilestack = this.onErrorFilestack.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    }, () => {\n      if (this.state.message.length > 0) {\n        $(\".add-tweet-button-home-timeline\").css({\n          \"background-color\": \"#00A4EF\"\n        });\n      }\n    });\n  }\n\n  componentDidMount() {}\n\n  removeRenderedFile(handle) {\n    this.state.files.map((file, index) => {\n      if (file.handle === handle) {\n        this.setState({\n          files: this.state.files.filter((item, i) => i !== index)\n        }, () => {\n          this.renderFiles(this.state.isSuccessUploaded);\n        });\n      }\n    });\n  }\n\n  renderFiles(isSuccessUploaded) {\n    if (isSuccessUploaded) {\n      $(\"tweet-add-uploaded-files\").html(\"\");\n      return this.state.files.map((file, index) => {\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          key: index,\n          className: \"tweet-add-rendered-file-image\",\n          src: file.url,\n          alt: file.filename,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          className: \"upload-file-delete\",\n          onClick: () => this.removeRenderedFile(file.handle),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"Delete - \", file.filename));\n      });\n    }\n\n    return null;\n  }\n\n  renderFailedFiles(isFailedUploaded) {\n    if (isFailedUploaded) {\n      return this.state.failedFiles.map((file, index) => {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, file.filename, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }));\n      });\n    }\n  }\n\n  filestackCallback(response) {\n    response.filesUploaded.map((fileUploaded, index) => {\n      this.setState({\n        files: this.state.files.concat(fileUploaded),\n        isSuccessUploaded: true\n      });\n    });\n    response.filesFailed.map((fileFailed, index) => {\n      this.setState({\n        failedFiles: this.state.failedFiles.concat(fileFailed),\n        isFailedUploaded: true\n      });\n    });\n  }\n\n  onErrorFilestack() {\n    swal(this.props.t(\"error-500.title\"), this.props.t(\"error-500.message\"), \"error\");\n  }\n\n  onPick() {\n    const client = filestack.init(\"Abn3RoxlVQeWNtMpk2Gflz\");\n    client.picker({}).open();\n  }\n\n  render() {\n    let isFailedUploaded = this.state.isFailedUploaded;\n    return React.createElement(\"div\", {\n      className: \"add-tweet-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"avatar-tweet-textarea-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"tweet-add-avatar-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.props.pictureUrl,\n      alt: \"Avatar\",\n      className: \"tweet-add-avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"tweet-add-textarea-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      placeholder: \"What's happening?\",\n      value: this.state.message,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"tweet-add-uploaded-files\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, this.renderFiles(this.state.isSuccessUploaded), isFailedUploaded && React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Failed upload files:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), this.renderFailedFiles(this.state.isFailedUploaded))), React.createElement(\"div\", {\n      className: \"add-tweet-buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(ReactFilestack, {\n      apikey: \"Abn3RoxlVQeWNtMpk2Gflz\",\n      actionOptions: {\n        maxSize: 5 * 1024 * 1024,\n        maxFiles: 4\n      },\n      customRender: ({\n        onPick\n      }) => React.createElement(\"i\", {\n        className: \"far fa-images\",\n        style: {\n          color: '#00A4EF',\n          fontSize: \"1.5vw\",\n          width: \"15%\",\n          marginTop: \"3%\"\n        },\n        onClick: onPick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }),\n      onSuccess: this.filestackCallback,\n      onError: this.onErrorFilestack,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"add-tweet-button-home-timeline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Tweet\")));\n  }\n\n}\n\nexport default TwitterHomeAdd;","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/twitter/twitter-home/TwitterHomeAdd.js"],"names":["React","filestack","ReactFilestack","$","swal","TwitterHomeAdd","Component","constructor","state","files","failedFiles","isSuccessUploaded","isFailedUploaded","message","onChange","bind","removeRenderedFile","renderFiles","filestackCallback","onErrorFilestack","e","setState","target","name","value","length","css","componentDidMount","handle","map","file","index","filter","item","i","html","url","filename","renderFailedFiles","response","filesUploaded","fileUploaded","concat","filesFailed","fileFailed","props","t","onPick","client","init","picker","open","render","pictureUrl","maxSize","maxFiles","color","fontSize","width","marginTop"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,8CAAP;AACA,OAAO,KAAKC,SAAZ,MAA2B,cAA3B;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,MAAMC,cAAN,SAA6BL,KAAK,CAACM,SAAnC,CAA6C;AACzCC,EAAAA,WAAW,GAAG;AACV;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,WAAW,EAAE,EAFJ;AAGTC,MAAAA,iBAAiB,EAAE,KAHV;AAITC,MAAAA,gBAAgB,EAAE,KAJT;AAKTC,MAAAA,OAAO,EAAE;AALA,KAAb;AAOA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBD,IAAxB,CAA6B,IAA7B,CAA1B;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKG,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBH,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKI,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBJ,IAAtB,CAA2B,IAA3B,CAAxB;AACH;;AAEDD,EAAAA,QAAQ,CAACM,CAAD,EAAI;AACR,SAAKC,QAAL,CAAc;AAAE,OAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA5B,KAAd,EAAmD,MAAM;AACrD,UAAG,KAAKhB,KAAL,CAAWK,OAAX,CAAmBY,MAAnB,GAA4B,CAA/B,EAAkC;AAC9BtB,QAAAA,CAAC,CAAC,iCAAD,CAAD,CAAqCuB,GAArC,CAAyC;AAAE,8BAAoB;AAAtB,SAAzC;AACH;AACJ,KAJD;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG,CAEnB;;AAEDX,EAAAA,kBAAkB,CAACY,MAAD,EAAS;AACvB,SAAKpB,KAAL,CAAWC,KAAX,CAAiBoB,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAClC,UAAGD,IAAI,CAACF,MAAL,KAAgBA,MAAnB,EAA2B;AACvB,aAAKP,QAAL,CAAc;AACVZ,UAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBuB,MAAjB,CAAwB,CAACC,IAAD,EAAOC,CAAP,KAAaA,CAAC,KAAKH,KAA3C;AADG,SAAd,EAEG,MAAM;AACL,eAAKd,WAAL,CAAiB,KAAKT,KAAL,CAAWG,iBAA5B;AACH,SAJD;AAKH;AACJ,KARD;AASH;;AAEDM,EAAAA,WAAW,CAACN,iBAAD,EAAoB;AAC3B,QAAGA,iBAAH,EAAsB;AAClBR,MAAAA,CAAC,CAAC,0BAAD,CAAD,CAA8BgC,IAA9B,CAAmC,EAAnC;AACA,aAAO,KAAK3B,KAAL,CAAWC,KAAX,CAAiBoB,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzC,eACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AACI,UAAA,GAAG,EAAEA,KADT;AAEI,UAAA,SAAS,EAAC,+BAFd;AAGI,UAAA,GAAG,EAAED,IAAI,CAACM,GAHd;AAII,UAAA,GAAG,EAAEN,IAAI,CAACO,QAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPJ,EAQI;AAAQ,UAAA,SAAS,EAAC,oBAAlB;AAAuC,UAAA,OAAO,EAAE,MAAM,KAAKrB,kBAAL,CAAwBc,IAAI,CAACF,MAA7B,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAsGE,IAAI,CAACO,QAA3G,CARJ,CADJ;AAYH,OAbM,CAAP;AAcH;;AACD,WAAO,IAAP;AACH;;AAEDC,EAAAA,iBAAiB,CAAC1B,gBAAD,EAAmB;AAChC,QAAGA,gBAAH,EAAqB;AACjB,aAAO,KAAKJ,KAAL,CAAWE,WAAX,CAAuBmB,GAAvB,CAA2B,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC/C,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKD,IAAI,CAACO,QADV,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADJ;AAOH,OARM,CAAP;AASH;AACJ;;AAEDnB,EAAAA,iBAAiB,CAACqB,QAAD,EAAW;AACxBA,IAAAA,QAAQ,CAACC,aAAT,CAAuBX,GAAvB,CAA2B,CAACY,YAAD,EAAeV,KAAf,KAAyB;AAChD,WAAKV,QAAL,CAAc;AACVZ,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBiC,MAAjB,CAAwBD,YAAxB,CADG;AAEV9B,QAAAA,iBAAiB,EAAE;AAFT,OAAd;AAIH,KALD;AAOA4B,IAAAA,QAAQ,CAACI,WAAT,CAAqBd,GAArB,CAAyB,CAACe,UAAD,EAAab,KAAb,KAAuB;AAC5C,WAAKV,QAAL,CAAc;AACVX,QAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWE,WAAX,CAAuBgC,MAAvB,CAA8BE,UAA9B,CADH;AAEVhC,QAAAA,gBAAgB,EAAE;AAFR,OAAd;AAIH,KALD;AAMH;;AAEDO,EAAAA,gBAAgB,GAAG;AACff,IAAAA,IAAI,CAAC,KAAKyC,KAAL,CAAWC,CAAX,CAAa,iBAAb,CAAD,EAAkC,KAAKD,KAAL,CAAWC,CAAX,CAAa,mBAAb,CAAlC,EAAqE,OAArE,CAAJ;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAMC,MAAM,GAAG/C,SAAS,CAACgD,IAAV,CAAe,wBAAf,CAAf;AACAD,IAAAA,MAAM,CAACE,MAAP,CAAc,EAAd,EAAkBC,IAAlB;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIxC,gBAAgB,GAAG,KAAKJ,KAAL,CAAWI,gBAAlC;AACA,WACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,GAAG,EAAE,KAAKiC,KAAL,CAAWQ,UADpB;AAEI,MAAA,GAAG,EAAC,QAFR;AAGI,MAAA,SAAS,EAAC,kBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAQI;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,WAAW,EAAC,mBADhB;AAEI,MAAA,KAAK,EAAE,KAAK7C,KAAL,CAAWK,OAFtB;AAGI,MAAA,QAAQ,EAAE,KAAKC,QAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CARJ,CADJ,EAoBI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKG,WAAL,CAAiB,KAAKT,KAAL,CAAWG,iBAA5B,CADN,EAGQC,gBAAgB,IAChB;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGM,KAAK0B,iBAAL,CAAuB,KAAK9B,KAAL,CAAWI,gBAAlC,CAHN,CAJR,CApBJ,EA+BI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,cAAD;AACI,MAAA,MAAM,EAAC,wBADX;AAEI,MAAA,aAAa,EAAE;AACX0C,QAAAA,OAAO,EAAE,IAAI,IAAJ,GAAW,IADT;AAEXC,QAAAA,QAAQ,EAAE;AAFC,OAFnB;AAMI,MAAA,YAAY,EAAE,CAAC;AAAER,QAAAA;AAAF,OAAD,KACV;AACI,QAAA,SAAS,EAAC,eADd;AAEI,QAAA,KAAK,EAAE;AAAES,UAAAA,KAAK,EAAE,SAAT;AAAoBC,UAAAA,QAAQ,EAAE,OAA9B;AAAuCC,UAAAA,KAAK,EAAE,KAA9C;AAAqDC,UAAAA,SAAS,EAAE;AAAhE,SAFX;AAGI,QAAA,OAAO,EAAEZ,MAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPR;AAaI,MAAA,SAAS,EAAE,KAAK7B,iBAbpB;AAcI,MAAA,OAAO,EAAE,KAAKC,gBAdlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAiBI;AACI,MAAA,SAAS,EAAC,gCADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAjBJ,CA/BJ,CADJ;AAyDH;;AAjKwC;;AAoK7C,eAAed,cAAf","sourcesContent":["import React from 'react';\nimport '../../../css/twitter-home/TwitterHomeAdd.css';\nimport * as filestack from 'filestack-js';\nimport ReactFilestack from 'filestack-react';\nimport $ from 'jquery';\nimport swal from 'sweetalert';\n\nclass TwitterHomeAdd extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            files: [],\n            failedFiles: [],\n            isSuccessUploaded: false,\n            isFailedUploaded: false,\n            message: ''\n        }\n        this.onChange = this.onChange.bind(this);\n        this.removeRenderedFile = this.removeRenderedFile.bind(this);\n        this.renderFiles = this.renderFiles.bind(this);\n        this.filestackCallback = this.filestackCallback.bind(this);\n        this.onErrorFilestack = this.onErrorFilestack.bind(this);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value }, () => {\n            if(this.state.message.length > 0) {\n                $(\".add-tweet-button-home-timeline\").css({ \"background-color\": \"#00A4EF\" });\n            }\n        });\n    }\n\n    componentDidMount() {\n\n    }\n\n    removeRenderedFile(handle) {\n        this.state.files.map((file, index) => {\n            if(file.handle === handle) {\n                this.setState({ \n                    files: this.state.files.filter((item, i) => i !== index) \n                }, () => {\n                    this.renderFiles(this.state.isSuccessUploaded);\n                });\n            }\n        });\n    }\n\n    renderFiles(isSuccessUploaded) {\n        if(isSuccessUploaded) {\n            $(\"tweet-add-uploaded-files\").html(\"\");\n            return this.state.files.map((file, index) => {\n                return (\n                    <React.Fragment>\n                        <img\n                            key={index}\n                            className=\"tweet-add-rendered-file-image\"\n                            src={file.url}\n                            alt={file.filename}\n                        />\n                        <br />\n                        <button className=\"upload-file-delete\" onClick={() => this.removeRenderedFile(file.handle)}>Delete - {file.filename}</button>\n                    </React.Fragment>\n                );\n            });\n        }\n        return null;\n    }\n\n    renderFailedFiles(isFailedUploaded) {\n        if(isFailedUploaded) {\n            return this.state.failedFiles.map((file, index) => {\n                return (\n                    <div>\n                        {file.filename}\n                        <br />\n                    </div>\n\n                );\n            });\n        }\n    }\n\n    filestackCallback(response) {\n        response.filesUploaded.map((fileUploaded, index) => {\n            this.setState({ \n                files: this.state.files.concat(fileUploaded),\n                isSuccessUploaded: true\n            });\n        });\n\n        response.filesFailed.map((fileFailed, index) => {\n            this.setState({ \n                failedFiles: this.state.failedFiles.concat(fileFailed),\n                isFailedUploaded: true\n            });\n        });\n    }\n\n    onErrorFilestack() {\n        swal(this.props.t(\"error-500.title\"), this.props.t(\"error-500.message\"), \"error\");\n    }\n\n    onPick() {\n        const client = filestack.init(\"Abn3RoxlVQeWNtMpk2Gflz\");\n        client.picker({}).open();\n    }\n\n    render() {\n        let isFailedUploaded = this.state.isFailedUploaded;\n        return (\n            <div className=\"add-tweet-container\">\n                <div className=\"avatar-tweet-textarea-container\">\n                    <div className=\"tweet-add-avatar-container\">\n                        <img \n                            src={this.props.pictureUrl} \n                            alt=\"Avatar\" \n                            className=\"tweet-add-avatar\"\n                        />\n                    </div>\n                    <div className=\"tweet-add-textarea-container\">\n                        <textarea\n                            placeholder=\"What's happening?\"\n                            value={this.state.message}\n                            onChange={this.onChange}\n                        >  \n                        </textarea>\n                        \n                    \n                    </div>\n                </div>\n                <div className=\"tweet-add-uploaded-files\">\n                    { this.renderFiles(this.state.isSuccessUploaded) }\n                    {\n                        isFailedUploaded &&\n                        <div className=\"alert alert-danger\">\n                            Failed upload files:\n                            <br />\n                            { this.renderFailedFiles(this.state.isFailedUploaded) }\n                        </div>\n                    }\n                </div>\n                <div className=\"add-tweet-buttons\">\n                    <ReactFilestack\n                        apikey=\"Abn3RoxlVQeWNtMpk2Gflz\"\n                        actionOptions={{\n                            maxSize: 5 * 1024 * 1024,\n                            maxFiles: 4\n                        }}\n                        customRender={({ onPick }) => (\n                            <i \n                                className=\"far fa-images\" \n                                style={{ color: '#00A4EF', fontSize: \"1.5vw\", width: \"15%\", marginTop: \"3%\"}}\n                                onClick={onPick}\n                            ></i>\n                        )}\n                        onSuccess={this.filestackCallback}\n                        onError={this.onErrorFilestack}\n                    />\n                    <button \n                        className=\"add-tweet-button-home-timeline\"\n                    >\n                        Tweet\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TwitterHomeAdd;"]},"metadata":{},"sourceType":"module"}