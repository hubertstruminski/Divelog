{"ast":null,"code":"var _jsxFileName = \"/home/msi/Pulpit/Divelog/react-divelog/src/components/googleMaps/GoogleMap.js\";\nimport React from 'react';\nimport '../../css/GoogleMap.css';\nimport { Map, Marker, GoogleApiWrapper, InfoWindow } from 'google-maps-react';\n\nclass GoogleMap extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.onMarkerClick = (props, marker, e) => {\n      this.setState({\n        selectedPlace: props,\n        activeMarker: marker,\n        showingInfoWindow: true\n      });\n    };\n\n    this.onClose = props => {\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.state = {\n      isLoading: true,\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: false\n    });\n  }\n\n  render() {\n    const mapStyle = {\n      width: '70%',\n      height: '60%',\n      position: 'absolute',\n      left: '50%',\n      top: '50%',\n      '-webkit-transform': 'translate(-50%, -50%)',\n      transform: 'translate(-50%, -50%)'\n    };\n    let loadingScreen = React.createElement(\"div\", {\n      class: \"d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"spinner-grow\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      class: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Loading...\")));\n    let map = React.createElement(\"div\", {\n      className: \"google-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Map, {\n      google: this.props.google,\n      zoom: 5,\n      style: mapStyle,\n      initialCenter: {\n        lat: 50.087,\n        lng: 14.421\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      onClick: this.onMarkerClick,\n      name: 'Kenyatta International Convention Centre',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Marker, {\n      onClick: this.onMarkerClick,\n      name: 'Hubert Strumiński',\n      position: {\n        lat: 49.748,\n        lng: 20.731\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      onClose: this.onClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.selectedPlace.name)))));\n    let content = this.state.isLoading ? loadingScreen : map;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, content);\n  }\n\n}\n\nexport default GoogleApiWrapper(props => ({\n  apiKey: 'AIzaSyBgb4kpatKEjsOGsxplxFyRfw1K_wGhLTo',\n  language: props.language\n}))(GoogleMap);","map":{"version":3,"sources":["/home/msi/Pulpit/Divelog/react-divelog/src/components/googleMaps/GoogleMap.js"],"names":["React","Map","Marker","GoogleApiWrapper","InfoWindow","GoogleMap","Component","constructor","props","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","onClose","state","isLoading","componentDidMount","render","mapStyle","width","height","position","left","top","transform","loadingScreen","map","google","lat","lng","name","content","apiKey","language"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../css/GoogleMap.css';\nimport { Map, Marker, GoogleApiWrapper, InfoWindow } from 'google-maps-react';\n\nclass GoogleMap extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isLoading: true,\n            showingInfoWindow: false,\n            activeMarker: {},\n            selectedPlace: {}\n        }\n    }\n\n    componentDidMount() {\n        this.setState({ isLoading: false });\n    }\n\n    onMarkerClick = (props, marker, e) => {\n        this.setState({\n            selectedPlace: props,\n            activeMarker: marker,\n            showingInfoWindow: true\n        });\n    }\n\n    onClose = props => {\n        if(this.state.showingInfoWindow) {\n            this.setState({\n                showingInfoWindow: false,\n                activeMarker: null\n            });\n        }\n    };\n\n    render() {\n        const mapStyle = {\n            width: '70%',\n            height: '60%',\n            position: 'absolute',\n            left: '50%',\n            top: '50%',\n            '-webkit-transform': 'translate(-50%, -50%)',\n            transform: 'translate(-50%, -50%)'\n        }\n\n        let loadingScreen = (\n            <div class=\"d-flex justify-content-center\">\n                <div class=\"spinner-grow\" role=\"status\">\n                    <span class=\"sr-only\">Loading...</span>\n                </div>\n            </div>\n        )\n\n        let map = (\n            <div className=\"google-container\">\n                <Map\n                    google={this.props.google}\n                    zoom={5}\n                    style={mapStyle}\n                    initialCenter={{ lat: 50.087, lng: 14.421}}\n                >\n                    <Marker\n                        onClick={this.onMarkerClick}\n                        name={'Kenyatta International Convention Centre'}\n                    />\n                    <Marker\n                        onClick={this.onMarkerClick}\n                        name={'Hubert Strumiński'}\n                        position={{ lat: 49.748, lng: 20.731 }}\n                    />\n                    <InfoWindow\n                        marker={this.state.activeMarker}\n                        visible={this.state.showingInfoWindow}\n                        onClose={this.onClose}\n                    >\n                    <div>\n                        <h4>{this.state.selectedPlace.name}</h4>\n                    </div>\n                    </InfoWindow>\n                </Map>\n            </div>\n        )\n        let content = this.state.isLoading ? loadingScreen : map;\n\n        return (\n            <div>\n                { content }\n            </div>\n        );\n    }\n}\n\nexport default GoogleApiWrapper(\n    (props) => ({\n      apiKey: 'AIzaSyBgb4kpatKEjsOGsxplxFyRfw1K_wGhLTo',\n      language: props.language,\n    }\n  ))(GoogleMap);"]},"metadata":{},"sourceType":"module"}