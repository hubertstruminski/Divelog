{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/twitter/twitter-messages/Conversation.js\";\nimport React from 'react';\n\nclass Conversation extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    console.log(\"HUBERT\");\n    console.log(this.props.recipientId);\n    console.log(this.props.senderId);\n    console.log(this.props);\n  }\n\n  render() {\n    let isLoadingConversation = this.props.isLoadingConversation;\n\n    if (isLoadingConversation) {\n      this.forceUpdate();\n    }\n\n    return React.createElement(React.Fragment, null, !isLoadingConversation && React.createElement(\"div\", {\n      className: \"twitter-messages-person-invite\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        fontWeight: 700,\n        fontSize: '1.1vw'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"You don't have a message selected\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), \"Choose one from your existing messages, or start a new one.\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"twitter-message-person-btn-new-message\",\n      onClick: this.searchPeopleToConversation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"New message\")), isLoadingConversation && React.createElement(\"div\", {\n      className: \"spinner-border text-primary\",\n      role: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      class: \"sr-only\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Loading...\")));\n  }\n\n}\n\nexport default Conversation;","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/twitter/twitter-messages/Conversation.js"],"names":["React","Conversation","Component","constructor","props","componentDidMount","console","log","recipientId","senderId","render","isLoadingConversation","forceUpdate","fontWeight","fontSize","searchPeopleToConversation"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAA2C;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWI,WAAvB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWK,QAAvB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAjB;AACH;;AAEDM,EAAAA,MAAM,GAAG;AACL,QAAIC,qBAAqB,GAAG,KAAKP,KAAL,CAAWO,qBAAvC;;AACA,QAAGA,qBAAH,EAA0B;AACtB,WAAKC,WAAL;AACH;;AACD,WACI,0CACM,CAACD,qBAAD,IACE;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,KAAK,EAAE;AAAEE,QAAAA,UAAU,EAAE,GAAd;AAAmBC,QAAAA,QAAQ,EAAE;AAA7B,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,iEAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI;AACI,MAAA,SAAS,EAAC,wCADd;AAEI,MAAA,OAAO,EAAE,KAAKC,0BAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALJ,CAFR,EAeMJ,qBAAqB,IACnB;AACI,MAAA,SAAS,EAAC,6BADd;AAEI,MAAA,IAAI,EAAC,QAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAII;AAAM,MAAA,KAAK,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,CAhBR,CADJ;AA4BH;;AA7CsC;;AAgD3C,eAAeV,YAAf","sourcesContent":["import React from 'react';\n\nclass Conversation extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        console.log(\"HUBERT\")\n        console.log(this.props.recipientId);\n        console.log(this.props.senderId);\n        console.log(this.props)\n    }\n\n    render() {\n        let isLoadingConversation = this.props.isLoadingConversation;\n        if(isLoadingConversation) {\n            this.forceUpdate();\n        }\n        return (\n            <>\n                { !isLoadingConversation &&\n                    <div className=\"twitter-messages-person-invite\">\n                        <span style={{ fontWeight: 700, fontSize: '1.1vw' }}>You don't have a message selected</span>\n                        <br />\n                        Choose one from your existing messages, or start a new one.\n                        <br />\n                        <button \n                            className=\"twitter-message-person-btn-new-message\"\n                            onClick={this.searchPeopleToConversation}\n                        >\n                            New message\n                        </button>\n                    </div>\n                }\n                { isLoadingConversation &&\n                    <div \n                        className='spinner-border text-primary' \n                        role='status'\n                    >\n                        <span class='sr-only'>\n                            Loading...\n                        </span>\n                    </div>\n                }\n            </>\n        );\n    }\n}\n\nexport default Conversation;"]},"metadata":{},"sourceType":"module"}