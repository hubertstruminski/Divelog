{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/forum/AddTopic.js\";\nimport React from 'react';\nimport '../../css/AddTopic.css';\nimport ReactFilestack from 'filestack-react';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport { withRouter } from 'react-router';\n\nclass AddTopic extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      message: '',\n      isInvalidTitle: false,\n      isInvalidMessage: false,\n      successFiles: [],\n      successNameFiles: [],\n      isSuccessUploaded: false,\n      isFailureUploaded: false,\n      failureNameFiles: []\n    };\n    this.errors = [];\n    this.onChange = this.onChange.bind(this);\n    this.onSubmitForm = this.onSubmitForm.bind(this);\n    this.validateForm = this.validateForm.bind(this);\n    this.responseFilestack = this.responseFilestack.bind(this);\n    this.onErrorFilestack = this.onErrorFilestack.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  showInvalidTitle(isInvalidTitle) {\n    if (isInvalidTitle) {\n      return React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, this.props.t(\"forum.AddTopic.form.validation.invalidTitle\"));\n    }\n\n    return null;\n  }\n\n  showInvalidMessage(isInvalidMessage) {\n    if (isInvalidMessage) {\n      return React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.props.t(\"forum.AddTopic.form.validation.invalidMessage\"));\n    }\n\n    return null;\n  }\n\n  showSuccessUploadedFiles(isSuccessUploaded) {\n    if (isSuccessUploaded) {\n      return React.createElement(\"div\", {\n        className: \"alert alert-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.props.t(\"forum.AddTopic.form.validation.successUploaded\"), this.state.successNameFiles.map((name, index) => {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, name);\n      }));\n    }\n\n    return null;\n  }\n\n  showFailureUploadedFiles(isFailureUploaded) {\n    if (isFailureUploaded) {\n      return React.createElement(\"div\", {\n        className: \"alert alert-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.props.t(\"forum.AddTopic.form.validation.failureUploaded\"), this.state.failureNameFiles.map((name, index) => {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, name);\n      }));\n    }\n\n    return null;\n  }\n\n  validateForm(e) {\n    if (this.state.title.length < 10 || this.state.title.length > 160) {\n      e.preventDefault();\n      this.setState({\n        isInvalidTitle: true\n      });\n      this.errors.push(true);\n    }\n\n    if (this.state.message.length < 10) {\n      e.preventDefault();\n      this.setState({\n        isInvalidMessage: true\n      });\n      this.errors.push(true);\n    }\n  }\n\n  onSubmitForm(e) {\n    e.preventDefault();\n    this.validateForm(e);\n\n    if (this.errors.length === 0) {\n      let jwtToken = localStorage.getItem(\"JwtToken\");\n      let forumType = this.props.match.params.selectedForum;\n      const topicDto = {\n        title: this.state.title,\n        message: this.state.message,\n        likes: 0,\n        languageForum: forumType,\n        jwtToken: jwtToken,\n        files: this.state.successFiles\n      };\n      axios({\n        url: \"/add/topic\",\n        method: 'POST',\n        data: JSON.stringify(topicDto),\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        console.log(response);\n\n        if (response.status !== 200) {\n          swal(\"Error\", \"Something goes wrong.\", \"error\");\n        } else {\n          this.props.history.push(\"/forum\");\n        }\n      });\n    }\n  }\n\n  responseFilestack(response) {\n    response.filesUploaded.map((file, index) => {\n      const element = {\n        objectId: file.uploadId,\n        url: file.url,\n        size: file.size,\n        name: file.originalFile.name,\n        type: file.originalFile.type\n      };\n      this.setState({\n        successFiles: this.state.successFiles.concat(element),\n        successNameFiles: this.state.successNameFiles.concat(file.originalFile.name),\n        isSuccessUploaded: true\n      });\n    });\n    response.filesFailed.map((file, index) => {\n      this.setState({\n        failureNameFiles: this.state.failureNameFiles.concat(file.originalFile.name)\n      });\n    });\n  }\n\n  onErrorFilestack() {\n    swal(\"Error\", \"Something goes wrong.\", \"error\");\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"add-topic-container add-topic-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"new-topic-box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"new-topic-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, this.props.t(\"forum.AddTopic.form.title\")), React.createElement(\"form\", {\n      onSubmit: this.onSubmitForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, this.props.t(\"forum.AddTopic.form.labelTitle\")), React.createElement(\"input\", {\n      className: \"form-control form-control-lg new-update-topic-inputs\",\n      type: \"text\",\n      id: \"title\",\n      name: \"title\",\n      placeholder: \"Enter title\",\n      value: this.state.title,\n      onChange: this.onChange,\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })), this.showInvalidTitle(this.state.isInvalidTitle), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      for: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, this.props.t(\"forum.AddTopic.form.labelMsg\")), React.createElement(\"textarea\", {\n      className: \"form-control form-control-lg new-update-topic-inputs\",\n      id: \"message\",\n      name: \"message\",\n      value: this.state.message,\n      onChange: this.onChange,\n      rows: \"17\",\n      style: {\n        color: 'white'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    })), this.showInvalidMessage(this.state.isInvalidMessage), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, this.props.t(\"forum.AddTopic.form.filestackBtn\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }), React.createElement(ReactFilestack, {\n      apikey: \"Abn3RoxlVQeWNtMpk2Gflz\",\n      onSuccess: this.responseFilestack,\n      onError: this.onErrorFilestack,\n      componentDisplayMode: {\n        type: 'button',\n        customText: 'Upload files',\n        customClass: 'btn btn-warning btn-upload'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        clear: \"both\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }), this.showSuccessUploadedFiles(this.state.isSuccessUploaded), this.showFailureUploadedFiles(this.state.isFailureUploaded)), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary new-topic-btn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, this.props.t(\"forum.AddTopic.form.submit\")))));\n  }\n\n}\n\nexport default withTranslation(\"common\")(withRouter(AddTopic));","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/forum/AddTopic.js"],"names":["React","ReactFilestack","swal","axios","withRouter","AddTopic","Component","constructor","props","state","title","message","isInvalidTitle","isInvalidMessage","successFiles","successNameFiles","isSuccessUploaded","isFailureUploaded","failureNameFiles","errors","onChange","bind","onSubmitForm","validateForm","responseFilestack","onErrorFilestack","e","setState","target","name","value","showInvalidTitle","t","showInvalidMessage","showSuccessUploadedFiles","map","index","showFailureUploadedFiles","length","preventDefault","push","jwtToken","localStorage","getItem","forumType","match","params","selectedForum","topicDto","likes","languageForum","files","url","method","data","JSON","stringify","headers","then","response","console","log","status","history","filesUploaded","file","element","objectId","uploadId","size","originalFile","type","concat","filesFailed","render","color","customText","customClass","clear","withTranslation"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../css/AddTopic.css';\nimport ReactFilestack from 'filestack-react';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport { withRouter } from 'react-router';\n\nclass AddTopic extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n            title: '',\n            message: '',\n            isInvalidTitle: false,\n            isInvalidMessage: false,\n            successFiles: [],\n            successNameFiles: [],\n            isSuccessUploaded: false,\n            isFailureUploaded: false,\n            failureNameFiles: []\n        }\n        this.errors = [];\n\n        this.onChange = this.onChange.bind(this);\n        this.onSubmitForm = this.onSubmitForm.bind(this);\n        this.validateForm = this.validateForm.bind(this);\n        this.responseFilestack = this.responseFilestack.bind(this);\n        this.onErrorFilestack = this.onErrorFilestack.bind(this);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    showInvalidTitle(isInvalidTitle) {\n        if(isInvalidTitle) {\n            return (\n                <div className=\"alert alert-danger\">\n                    { this.props.t(\"forum.AddTopic.form.validation.invalidTitle\") }\n                </div>\n            );\n        }\n        return null;\n    }\n\n    showInvalidMessage(isInvalidMessage) {\n        if(isInvalidMessage) {\n            return (\n                <div className=\"alert alert-danger\">\n                    { this.props.t(\"forum.AddTopic.form.validation.invalidMessage\") }\n                </div>\n            );\n        }\n        return null;\n    }\n\n    showSuccessUploadedFiles(isSuccessUploaded) {\n        if(isSuccessUploaded) {\n            return (\n                <div className=\"alert alert-warning\">\n                    { this.props.t(\"forum.AddTopic.form.validation.successUploaded\") }\n                    { this.state.successNameFiles.map((name, index) => {\n                        return <p>{name}</p>\n                    })}\n                </div>\n            );\n        }\n        return null;\n    }\n\n    showFailureUploadedFiles(isFailureUploaded) {\n        if(isFailureUploaded) {\n            return (\n                <div className=\"alert alert-danger\">\n                    { this.props.t(\"forum.AddTopic.form.validation.failureUploaded\") }\n                    { this.state.failureNameFiles.map((name, index) => {\n                        return <p>{name}</p>\n                    })}\n                </div>\n            );\n        }\n        return null;\n    }\n\n    validateForm(e) {\n        if(this.state.title.length < 10 || this.state.title.length > 160) {\n            e.preventDefault();\n            this.setState({ isInvalidTitle: true });\n            this.errors.push(true);\n        }\n\n        if(this.state.message.length < 10) {\n            e.preventDefault();\n            this.setState({ isInvalidMessage: true });\n            this.errors.push(true);\n        }\n    }\n\n    onSubmitForm(e) {\n        e.preventDefault();\n\n        this.validateForm(e);\n\n        if(this.errors.length === 0) {\n            let jwtToken = localStorage.getItem(\"JwtToken\");\n            let forumType = this.props.match.params.selectedForum;\n\n            const topicDto = {\n                title: this.state.title,\n                message: this.state.message,\n                likes: 0,\n                languageForum: forumType,\n                jwtToken: jwtToken,\n                files: this.state.successFiles\n            }\n\n            axios({\n                url: \"/add/topic\",\n                method: 'POST',\n                data: JSON.stringify(topicDto),\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            }).then(response => {\n                console.log(response);\n                if(response.status !== 200) {\n                    swal(\"Error\", \"Something goes wrong.\", \"error\");\n                } else {\n                    this.props.history.push(\"/forum\");\n                }\n            });\n        }\n    }\n\n    responseFilestack(response) {\n        response.filesUploaded.map((file, index) => {\n            const element = {\n                objectId: file.uploadId,\n                url: file.url,\n                size: file.size,\n                name: file.originalFile.name,\n                type: file.originalFile.type\n            };\n            this.setState({ \n                successFiles: this.state.successFiles.concat(element),\n                successNameFiles: this.state.successNameFiles.concat(file.originalFile.name),\n                isSuccessUploaded: true\n            });\n        });\n\n        response.filesFailed.map((file, index) => {\n            this.setState({ failureNameFiles: this.state.failureNameFiles.concat(file.originalFile.name) });\n        });\n    }\n\n    onErrorFilestack() {\n        swal(\"Error\", \"Something goes wrong.\", \"error\");\n    }\n\n    render() {\n        return (\n            <div className=\"add-topic-container add-topic-center\">\n                <div className=\"new-topic-box\">\n                    <div className=\"new-topic-title\">\n                        { this.props.t(\"forum.AddTopic.form.title\") }\n                    </div>\n\n                    <form onSubmit={this.onSubmitForm}>\n                        <div className=\"form-group\">\n                            <label for=\"title\">\n                                { this.props.t(\"forum.AddTopic.form.labelTitle\") }\n                            </label>\n                            <input \n                                className=\"form-control form-control-lg new-update-topic-inputs\"\n                                type=\"text\"\n                                id=\"title\"\n                                name=\"title\"\n                                placeholder=\"Enter title\"\n                                value={this.state.title}\n                                onChange={this.onChange}\n                                style={{ color: 'white' }}\n                            />\n                        </div>\n                        { this.showInvalidTitle(this.state.isInvalidTitle) }\n\n                        <div className=\"form-group\">\n                            <label for=\"message\">\n                                { this.props.t(\"forum.AddTopic.form.labelMsg\") }\n                            </label>\n                            <textarea\n                                className=\"form-control form-control-lg new-update-topic-inputs\"\n                                id=\"message\"\n                                name=\"message\"\n                                value={this.state.message}\n                                onChange={this.onChange}\n                                rows=\"17\"\n                                style={{ color: 'white' }}\n                            >\n                            </textarea>\n                        </div>\n                        { this.showInvalidMessage(this.state.isInvalidMessage) }\n\n                        <div className=\"form-group\">\n                            <label>\n                                { this.props.t(\"forum.AddTopic.form.filestackBtn\") }\n                            </label>\n                            <br />\n                            <ReactFilestack\n                                apikey=\"Abn3RoxlVQeWNtMpk2Gflz\"\n                                onSuccess={this.responseFilestack}\n                                onError={this.onErrorFilestack}\n                                componentDisplayMode={{\n                                    type: 'button',\n                                    customText: 'Upload files',\n                                    customClass: 'btn btn-warning btn-upload'\n                                }}\n                            />\n                            <div style={{ clear: \"both\" }}></div>\n                            { this.showSuccessUploadedFiles(this.state.isSuccessUploaded) }\n                            { this.showFailureUploadedFiles(this.state.isFailureUploaded) }\n                        </div>\n\n                        <button \n                            type=\"submit\" \n                            className=\"btn btn-primary new-topic-btn\"\n                        >\n                            { this.props.t(\"forum.AddTopic.form.submit\") }\n                        </button>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation(\"common\")(withRouter(AddTopic));"]},"metadata":{},"sourceType":"module"}