{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/components/twitter/twitter-explore/TwitterExploreSearch.js\";\nimport React from 'react';\nimport '../../../css/TwitterExploreSearch.css';\nimport AuthService from '../../../util/AuthService';\n\nclass TwitterExploreSearch extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      search: ''\n    };\n    this.Auth = new AuthService();\n    this.onChange = this.onChange.bind(this);\n    this.onEnterClick = this.onEnterClick.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  }\n\n  onEnterClick(e) {\n    if (e.keyCode === 13) {\n      let jwtToken = this.Auth.getRightSocialToken();\n      fetch(\"/twitter/search/tweets/\".concat(query, \"/\").concat(jwtToken), {\n        method: 'GET',\n        headers: {\n          'content-type': 'application/json'\n        }\n      }).then(response => {\n        console.log(response);\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"twitter-explore-search-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"search\",\n      className: \"twitter-explore-search-input\",\n      placeholder: \"Search Twitter\",\n      value: this.state.search,\n      onChange: this.onChange,\n      onKeyDown: this.onEnterClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TwitterExploreSearch;","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/components/twitter/twitter-explore/TwitterExploreSearch.js"],"names":["React","AuthService","TwitterExploreSearch","Component","constructor","state","search","Auth","onChange","bind","onEnterClick","e","setState","target","name","value","keyCode","jwtToken","getRightSocialToken","fetch","query","method","headers","then","response","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,uCAAP;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,MAAMC,oBAAN,SAAmCF,KAAK,CAACG,SAAzC,CAAmD;AAC/CC,EAAAA,WAAW,GAAG;AACV;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAGA,SAAKC,IAAL,GAAY,IAAIN,WAAJ,EAAZ;AAEA,SAAKO,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,QAAQ,CAACG,CAAD,EAAI;AACR,SAAKC,QAAL,CAAc;AAAE,OAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA5B,KAAd;AACH;;AAEDL,EAAAA,YAAY,CAACC,CAAD,EAAI;AACZ,QAAGA,CAAC,CAACK,OAAF,KAAc,EAAjB,EAAqB;AACjB,UAAIC,QAAQ,GAAG,KAAKV,IAAL,CAAUW,mBAAV,EAAf;AAGAC,MAAAA,KAAK,kCAA2BC,KAA3B,cAAoCH,QAApC,GAAgD;AACjDI,QAAAA,MAAM,EAAE,KADyC;AAEjDC,QAAAA,OAAO,EAAE;AACL,0BAAgB;AADX;AAFwC,OAAhD,CAAL,CAKGC,IALH,CAKQC,QAAQ,IAAI;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACH,OAPD;AAQH;AACJ;;AAEDG,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,QAFT;AAGI,MAAA,SAAS,EAAC,8BAHd;AAII,MAAA,WAAW,EAAC,gBAJhB;AAKI,MAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWC,MALtB;AAMI,MAAA,QAAQ,EAAE,KAAKE,QANnB;AAOI,MAAA,SAAS,EAAE,KAAKE,YAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAaH;;AA/C8C;;AAkDnD,eAAeR,oBAAf","sourcesContent":["import React from 'react';\nimport '../../../css/TwitterExploreSearch.css';\nimport AuthService from '../../../util/AuthService';\n\nclass TwitterExploreSearch extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            search: ''\n        }\n        this.Auth = new AuthService();\n\n        this.onChange = this.onChange.bind(this);\n        this.onEnterClick = this.onEnterClick.bind(this);\n    }\n\n    onChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    onEnterClick(e) {\n        if(e.keyCode === 13) {\n            let jwtToken = this.Auth.getRightSocialToken();\n\n\n            fetch(`/twitter/search/tweets/${query}/${jwtToken}`, {\n                method: 'GET',\n                headers: {\n                    'content-type': 'application/json'\n                }\n            }).then(response => {\n                console.log(response);\n            });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"twitter-explore-search-container\">\n                <input \n                    type=\"text\" \n                    name=\"search\"\n                    className=\"twitter-explore-search-input\" \n                    placeholder=\"Search Twitter\"\n                    value={this.state.search}\n                    onChange={this.onChange}\n                    onKeyDown={this.onEnterClick}\n                />\n            </div>\n        );        \n    }\n}\n\nexport default TwitterExploreSearch;"]},"metadata":{},"sourceType":"module"}