{"ast":null,"code":"var _jsxFileName = \"/home/huber/Pulpit/divelog/react-divelog/src/util/withAuth.js\";\nimport React from 'react';\nimport AuthService from './AuthService';\nimport Twitter from '../components/Twitter';\nimport Facebook from '../components/Facebook';\nexport default function withAuth(AuthComponent) {\n  const Auth = new AuthService();\n\n  class AuthWrapped extends React.Component {\n    componentWillMount() {\n      if (!Auth.loggedIn()) {\n        // this.props.history.replace(\"/login\");\n        this.props.history.replace(\"/dashboard\");\n      } else {\n        try {\n          this.props.history.replace(\"/dashboard\");\n        } catch (err) {\n          Auth.logout();\n          this.props.history.replace(\"/login\");\n        }\n      }\n    }\n\n    render() {\n      if (Auth.loggedIn()) {\n        return React.createElement(AuthComponent, {\n          history: this.props.history,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        });\n      } else {\n        // return null;\n        return React.createElement(Facebook, {\n          history: this.props.history,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        });\n      }\n    }\n\n  }\n\n  return AuthWrapped;\n}","map":{"version":3,"sources":["/home/huber/Pulpit/divelog/react-divelog/src/util/withAuth.js"],"names":["React","AuthService","Twitter","Facebook","withAuth","AuthComponent","Auth","AuthWrapped","Component","componentWillMount","loggedIn","props","history","replace","err","logout","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,eAAe,SAASC,QAAT,CAAkBC,aAAlB,EAAiC;AAC5C,QAAMC,IAAI,GAAI,IAAIL,WAAJ,EAAd;;AAEA,QAAMM,WAAN,SAA0BP,KAAK,CAACQ,SAAhC,CAA0C;AACtCC,IAAAA,kBAAkB,GAAG;AACjB,UAAG,CAACH,IAAI,CAACI,QAAL,EAAJ,EAAqB;AACjB;AACA,aAAKC,KAAL,CAAWC,OAAX,CAAmBC,OAAnB,CAA2B,YAA3B;AACH,OAHD,MAGO;AACH,YAAI;AACA,eAAKF,KAAL,CAAWC,OAAX,CAAmBC,OAAnB,CAA2B,YAA3B;AACH,SAFD,CAEE,OAAMC,GAAN,EAAW;AACTR,UAAAA,IAAI,CAACS,MAAL;AACA,eAAKJ,KAAL,CAAWC,OAAX,CAAmBC,OAAnB,CAA2B,QAA3B;AACH;AACJ;AACJ;;AAEDG,IAAAA,MAAM,GAAG;AACL,UAAGV,IAAI,CAACI,QAAL,EAAH,EAAoB;AAChB,eACI,oBAAC,aAAD;AAAe,UAAA,OAAO,EAAE,KAAKC,KAAL,CAAWC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,OAJD,MAIO;AACH;AACA,eACI,oBAAC,QAAD;AAAU,UAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;AACJ;;AA1BqC;;AA4B1C,SAAOL,WAAP;AACH","sourcesContent":["import React from 'react';\nimport AuthService from './AuthService';\nimport Twitter from '../components/Twitter';\nimport Facebook from '../components/Facebook';\n\nexport default function withAuth(AuthComponent) {\n    const Auth =  new AuthService();\n\n    class AuthWrapped extends React.Component {\n        componentWillMount() {\n            if(!Auth.loggedIn()) {\n                // this.props.history.replace(\"/login\");\n                this.props.history.replace(\"/dashboard\");\n            } else {\n                try {\n                    this.props.history.replace(\"/dashboard\");\n                } catch(err) {\n                    Auth.logout();\n                    this.props.history.replace(\"/login\");\n                }\n            }\n        }\n\n        render() {\n            if(Auth.loggedIn()) {\n                return (\n                    <AuthComponent history={this.props.history} />\n                );\n            } else {\n                // return null;\n                return (\n                    <Facebook history={this.props.history} />\n                );\n            }\n        }\n    }\n    return AuthWrapped;\n}"]},"metadata":{},"sourceType":"module"}