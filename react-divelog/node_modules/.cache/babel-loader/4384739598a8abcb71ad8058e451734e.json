{"ast":null,"code":"var _jsxFileName = \"/home/msi/Pulpit/Divelog/react-divelog/src/components/LogIn.js\";\nimport React from 'react';\nimport '../css/LogIn.css';\nimport logo from '../img/logo.png';\nimport { withTranslation } from 'react-i18next';\nimport FB from 'fb';\nimport FacebookLogin from 'react-facebook-login';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport Cookies from 'cookies';\nimport { Redirect } from 'react-router'; // import { login } from '../actions/LoginActions';\n\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../util/APIUtil';\n\nclass LogIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: ''\n    };\n    this.handleClick = this.handleClick.bind(this);\n  } // responseFacebook(response) {\n  //     console.log(response[\"accessToken\"]);\n  //     console.log(\"response 1: \");\n  //     console.log(response);\n  //     FB.setAccessToken(response[\"accessToken\"]);\n  //     FB.api('me', { fields: 'id,name,email,first_name,location,age_range,birthday,gender', access_token: response[\"accessToken\"] }, function (response2) {\n  //         console.log(\"response 2: \");\n  //         console.log(response2);\n  //     });\n  //     FB.api('me/feed', 'GET', {}, function (response) {\n  //         console.log(response);\n  //     });\n  //     window.location.href = \"http://localhost:3000/user\";\n  // }\n\n\n  handleClick(e) {\n    e.preventDefault(); // const loginRequest = Object.assign({}, this.state);\n    // login(loginRequest)\n    // .then(response => {\n    //     localStorage.setItem(\"ACCESS_TOKEN\", response.accessToken);\n    //     window.location.href = \"http://localhost:3000/dashboard\";\n    // }).catch(error => {\n    //     console.log(error);\n    // });\n    // $.ajaxSetup({\n    //     beforeSend : function(xhr, settings) {\n    //         if (settings.type == 'POST' || settings.type == 'PUT'\n    //             || settings.type == 'DELETE') {\n    //             if (!(/^http:.*/.test(settings.url) || /^https:.*/\n    //                 .test(settings.url))) {\n    //                 // Only send the token to relative URLs i.e. locally.\n    //                 xhr.setRequestHeader(\"X-XSRF-TOKEN\",\n    //                     Cookies.get('XSRF-TOKEN'));\n    //             }\n    //         }\n    //     }\n    // });\n    // \n    // window.location.href = \"http://localhost:8080/login\";\n\n    this.props.login(this.props.history);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"login-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login-form-container form-container-shadow form-size\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"logo-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, this.props.t(\"login.login\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      src: logo,\n      alt: \"divelog\",\n      className: \"logo-space logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"logo-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Divelog\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-lg btn-fb\",\n      style: {\n        color: 'white'\n      },\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      class: \"fab fa-facebook-f pr-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), this.props.t(\"login.facebook-btn\")))));\n  }\n\n}\n\nLogIn.propTypes = {\n  loginObject: PropTypes.object\n};\n\nconst mapStateToProps = state => ({\n  loginObject: state.loginObject\n});\n\nexport default compose(withTranslation('common'), connect(mapStateToProps, {\n  login\n}))(LogIn);","map":{"version":3,"sources":["/home/msi/Pulpit/Divelog/react-divelog/src/components/LogIn.js"],"names":["React","logo","withTranslation","FB","FacebookLogin","axios","$","Cookies","Redirect","connect","compose","PropTypes","login","LogIn","Component","constructor","props","state","username","password","handleClick","bind","e","preventDefault","history","render","t","color","propTypes","loginObject","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../css/LogIn.css';\nimport logo from '../img/logo.png';\nimport { withTranslation } from 'react-i18next';\nimport FB from 'fb';\nimport FacebookLogin from 'react-facebook-login';\nimport axios from 'axios';\nimport $ from 'jquery';\nimport Cookies from 'cookies';\nimport { Redirect } from 'react-router';\n// import { login } from '../actions/LoginActions';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport PropTypes from 'prop-types';\nimport { login } from '../util/APIUtil';\n\nclass LogIn extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            username: '',\n            password: '',\n        }\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    // responseFacebook(response) {\n    //     console.log(response[\"accessToken\"]);\n    //     console.log(\"response 1: \");\n    //     console.log(response);\n\n    //     FB.setAccessToken(response[\"accessToken\"]);\n\n    //     FB.api('me', { fields: 'id,name,email,first_name,location,age_range,birthday,gender', access_token: response[\"accessToken\"] }, function (response2) {\n    //         console.log(\"response 2: \");\n    //         console.log(response2);\n    //     });\n\n    //     FB.api('me/feed', 'GET', {}, function (response) {\n    //         console.log(response);\n    //     });\n    //     window.location.href = \"http://localhost:3000/user\";\n    // }\n\n    handleClick(e) {\n        e.preventDefault();\n\n        // const loginRequest = Object.assign({}, this.state);\n\n        // login(loginRequest)\n        // .then(response => {\n        //     localStorage.setItem(\"ACCESS_TOKEN\", response.accessToken);\n        //     window.location.href = \"http://localhost:3000/dashboard\";\n        // }).catch(error => {\n        //     console.log(error);\n        // });\n        // $.ajaxSetup({\n        //     beforeSend : function(xhr, settings) {\n        //         if (settings.type == 'POST' || settings.type == 'PUT'\n        //             || settings.type == 'DELETE') {\n        //             if (!(/^http:.*/.test(settings.url) || /^https:.*/\n        //                 .test(settings.url))) {\n        //                 // Only send the token to relative URLs i.e. locally.\n        //                 xhr.setRequestHeader(\"X-XSRF-TOKEN\",\n        //                     Cookies.get('XSRF-TOKEN'));\n        //             }\n        //         }\n        //     }\n        // });\n        // \n        // window.location.href = \"http://localhost:8080/login\";\n        this.props.login(this.props.history);\n\n    }\n\n    render() {\n\n        return(\n            <div className=\"login-container\">\n                <div className=\"login-form-container form-container-shadow form-size\">\n                    <div>\n                        <span className=\"logo-text\">\n                            {this.props.t(\"login.login\")}\n                        </span>\n                        <br />\n                        <img src={logo} alt=\"divelog\" className=\"logo-space logo\" />\n                        <br />\n                        <span className=\"logo-text\">Divelog</span>\n                        <br />\n                        <br />\n                        <button \n                            type=\"button\" \n                            className=\"btn btn-lg btn-fb\" \n                            style={{color: 'white'}}\n                            onClick={this.handleClick}\n                        >\n                            <i class=\"fab fa-facebook-f pr-1\"></i> \n                            {this.props.t(\"login.facebook-btn\")}\n                        </button>\n                        {/* <FacebookLogin\n                            appId=\"828826390847961\"\n                            autoLoad={true}\n                            callback={this.responseFacebook} \n                            cookie={true}\n                            fields=\"id,name,email,picture\"\n                            scope=\"public_profile,user_friends\"\n                        /> */}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nLogIn.propTypes = {\n    loginObject: PropTypes.object\n}\n\nconst mapStateToProps = state => ({\n    loginObject: state.loginObject\n})\n\nexport default compose(\n    withTranslation('common'), \n    connect(mapStateToProps, { login })\n    )(LogIn);"]},"metadata":{},"sourceType":"module"}